(window.webpackJsonp = window.webpackJsonp || []).push([
    ['chunk-7c5e815a'],
    {
        '041b': function (t, e, r) {
            'use strict';
            t.exports = function (t, e) {
                e.forEach(e => {
                    Object.defineProperty(t.prototype, e, {
                        enumerable: true,
                        get() {
                            return this.data[e];
                        }
                    });
                });
            };
        },
        '05ee': function (t, e, r) {
            var n = r('970b').default, i = r('5bc3').default, a = r('ed6d').default, s = r('2d0d').default;
            r('14d9');
            r('3c65');
            r('99af');
            r('a15b');
            r('d81d');
            r('cb29');
            r('d3b7');
            r('159b');
            r('b64b');
            r('caad');
            r('2532');
            var o = r('9b0f'), c = r('a32b'), u = r('7188'), l = r('ac91'), h = l.ReportBase, p = r('f0e0');
            function f(t) {
                return '\n <head>\n     <title>Code coverage report for '.concat(u.escape(t.entity), '</title>\n     <meta charset="utf-8" />\n     <link rel="stylesheet" href="').concat(u.escape(t.prettify.css), '" />\n     <link rel="stylesheet" href="').concat(u.escape(t.base.css), '" />\n     <link rel="shortcut icon" type="image/x-icon" href="').concat(u.escape(t.favicon), '" />\n     <meta name="viewport" content="width=device-width, initial-scale=1" />\n     <style type=\'text/css\'>\n         .coverage-summary .sorter {\n             background-image: url(').concat(u.escape(t.sorter.image), ');\n         }\n     </style>\n </head>\n     ');
            }
            function d(t) {
                function e(t, e) {
                    var r = t.pct, n = t.covered, i = t.total;
                    return '\n             <div class=\'fl pad1y space-right2\'>\n                 <span class="strong">'.concat(r, '% </span>\n                 <span class="quiet">').concat(e, '</span>\n                 <span class=\'fraction\'>').concat(n, '/').concat(i, '</span>\n             </div>\n         ');
                }
                function r(t) {
                    var e = t.statements.skipped, r = t.branches.skipped, n = t.functions.skipped, i = function (t, e, r) {
                        return 0 === t ? [] : ''.concat(t, ' ').concat(e).concat(1 === t ? '' : r);
                    }, a = [].concat(i(e, 'statement', 's'), i(n, 'function', 's'), i(r, 'branch', 'es'));
                    return 0 === a.length ? '' : '\n             <div class=\'fl pad1y\'>\n                 <span class="strong">'.concat(a.join(', '), '</span>\n                 <span class="quiet">Ignored</span>  &nbsp;&nbsp;&nbsp;&nbsp;\n             </div>\n         ');
                }
                return '\n <!doctype html>\n <html lang="en">\n '.concat(f(t), '\n <body>\n <div class=\'wrapper\'>\n     <div class=\'pad1\'>\n         <h1>').concat(t.pathHtml, '</h1>\n         <div class=\'clearfix\'>\n             ').concat(e(t.metrics.statements, 'Statements'), '\n             ').concat(e(t.metrics.branches, 'Branches'), '\n             ').concat(e(t.metrics.functions, 'Functions'), '\n             ').concat(e(t.metrics.lines, 'Lines'), '\n             ').concat(r(t.metrics), '\n         </div>\n         <p class="quiet">\n             Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.\n         </p>\n         <template id="filterTemplate">\n             <div class="quiet">\n                 Filter:\n                 <input oninput="onInput()" type="search" id="fileSearch">\n             </div>\n         </template>\n     </div>\n     <div class=\'status-line ').concat(t.reportClass, '\'></div>\n     ');
            }
            function m(t) {
                return '\n                 <div class=\'push\'></div><!-- for sticky footer -->\n             </div><!-- /wrapper -->\n             <div class=\'footer quiet pad2 space-top1 center small\'>\n                 Code coverage generated by\n                 <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>\n                 at '.concat(u.escape(t.datetime), '\n             </div>\n         <script src="').concat(u.escape(t.prettify.js), '"></script>\n         <script>\n             window.onload = function () {\n                 prettyPrint();\n             };\n         </script>\n         <script src="').concat(u.escape(t.sorter.js), '"></script>\n         <script src="').concat(u.escape(t.blockNavigation.js), '"></script>\n     </body>\n </html>\n     ');
            }
            function v(t) {
                var e = new Array(t.maxLines).fill().map(function (t, e) {
                    return e + 1;
                }), r = function (t) {
                    return '<a name=\'L'.concat(t, '\'></a><a href=\'#L').concat(t, '\'>').concat(t, '</a>');
                }, n = function (t) {
                    return '<span class="cline-any cline-'.concat(t.covered, '">').concat(t.hits, '</span>');
                };
                return [
                    '<tr>',
                    '<td class="line-count quiet">'.concat(e.map(r).join('\n'), '</td>'),
                    '<td class="line-coverage quiet">'.concat(t.lineCoverage.map(n).join('\n'), '</td>'),
                    '<td class="text"><pre class="prettyprint lang-js">'.concat(t.annotatedCode.join('\n'), '</pre></td>'),
                    '</tr>'
                ].join('');
            }
            var E = [
                '<div class="pad1">',
                '<table class="coverage-summary">',
                '<thead>',
                '<tr>',
                '   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>',
                '   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>',
                '   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>',
                '   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>',
                '   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>',
                '   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>',
                '   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>',
                '   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>',
                '   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>',
                '   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>',
                '</tr>',
                '</thead>',
                '<tbody>'
            ].join('\n');
            function g(t) {
                var e = t.reportClasses, r = t.metrics, n = t.file, i = t.output, a = function (t) {
                    if (!isFinite(t)) {
                        return '';
                    }
                    var e = ['cover-fill'];
                    return 100 === t && e.push('cover-full'), t = Math.floor(t), [
                        '<div class="'.concat(e.join(' '), '" style="width: ').concat(t, '%"></div>'),
                        '<div class="cover-empty" style="width: '.concat(100 - t, '%"></div>')
                    ].join('');
                }, s = function (t) {
                    var n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], i = r[t], s = e[t], o = [
                        '<td data-value="'.concat(i.pct, '" class="pct ').concat(s, '">').concat(i.pct, '%</td>'),
                        '<td data-value="'.concat(i.total, '" class="abs ').concat(s, '">').concat(i.covered, '/').concat(i.total, '</td>')
                    ];
                    return n && o.unshift('<td data-value="'.concat(i.pct, '" class="pic ').concat(s, '">'), '<div class="chart">'.concat(a(i.pct), '</div>'), '</td>'), o;
                };
                return [].concat('<tr>', '<td class="file '.concat(e.statements, '" data-value="').concat(u.escape(n), '"><a href="').concat(u.escape(i), '">').concat(u.escape(n), '</a></td>'), s('statements', true), s('branches'), s('functions'), s('lines'), '</tr>\n').join('\n\t');
            }
            var b = [
                '</tbody>',
                '</table>',
                '</div>'
            ].join('\n'), y = {
                getPath: function (t) {
                    if ('string' === typeof t) {
                        return t;
                    }
                    var e = t.getQualifiedName();
                    return t.isSummary() ? '' !== e ? e += '/index.html' : e = 'index.html' : e += '.html', e;
                },
                relativePath: function (t, e) {
                    var r = this.getPath(e), n = c.dirname(this.getPath(t));
                    return c.posix.relative(n, r);
                },
                assetPath: function (t, e) {
                    return this.relativePath(this.getPath(t), e);
                }
            };
            function R(t) {
                return Object.keys(w).forEach(function (e) {
                    t[e].pct = 0;
                }), t;
            }
            var O = function (t) {
                'use strict';
                a(r, t);
                var e = s(r);
                function r(t) {
                    var i;
                    return n(this, r), i = e.call(this), i.verbose = t.verbose, i.linkMapper = t.linkMapper || y, i.subdir = t.subdir || '', i.date = new Date().toISOString(), i.skipEmpty = t.skipEmpty, i;
                }
                return i(r, [
                    {
                        key: 'getBreadcrumbHtml',
                        value: function (t) {
                            var e = this, r = t.getParent(), n = [];
                            while (r) {
                                n.push(r);
                                r = r.getParent();
                            }
                            var i = n.map(function (r) {
                                var n = e.linkMapper.relativePath(t, r), i = r.getRelativeName() || 'All files';
                                return '<a href="' + n + '">' + i + '</a>';
                            });
                            return i.reverse(), i.length > 0 ? i.join(' / ') + ' ' + t.getRelativeName() : 'All files';
                        }
                    },
                    {
                        key: 'fillTemplate',
                        value: function (t, e, r) {
                            var n = this.linkMapper, i = t.getCoverageSummary();
                            e.entity = t.getQualifiedName() || 'All files';
                            e.metrics = i;
                            e.reportClass = r.classForPercent('statements', i.statements.pct);
                            e.pathHtml = this.getBreadcrumbHtml(t);
                            e.base = { css: n.assetPath(t, 'base.css') };
                            e.sorter = {
                                js: n.assetPath(t, 'sorter.js'),
                                image: n.assetPath(t, 'sort-arrow-sprite.png')
                            };
                            e.blockNavigation = { js: n.assetPath(t, 'block-navigation.js') };
                            e.prettify = {
                                js: n.assetPath(t, 'prettify.js'),
                                css: n.assetPath(t, 'prettify.css')
                            };
                            e.favicon = n.assetPath(t, 'favicon.png');
                        }
                    },
                    {
                        key: 'getTemplateData',
                        value: function () {
                            return { datetime: this.date };
                        }
                    },
                    {
                        key: 'getWriter',
                        value: function (t) {
                            return this.subdir ? t.writer.writerForDir(this.subdir) : t.writer;
                        }
                    },
                    {
                        key: 'onStart',
                        value: function (t, e) {
                            var r = this;
                            [
                                '.',
                                'vendor'
                            ].forEach(function (t) {
                                var i = r.getWriter(e), a = c.resolve(require('electron').remote.app.getAppPath(), 'assets', t);
                                a.includes('.asar') || o.readdirSync(a).forEach(function (t) {
                                    var e, s = c.resolve(a, t), l = o.statSync(s);
                                    l.isFile() && (e = './' + t, r.verbose, i.copyFile(s, e, n[c.extname(t)]));
                                });
                            });
                        }
                    },
                    {
                        key: 'onSummary',
                        value: function (t, e) {
                            var r = this.linkMapper, n = this.getTemplateData(), i = t.getChildren(), a = this.skipEmpty;
                            this.fillTemplate(t, n, e);
                            var s = this.getWriter(e).writeFile(r.getPath(t));
                            s.write(d(n));
                            s.write(E);
                            i.forEach(function (n) {
                                var i = n.getCoverageSummary(), o = i.isEmpty();
                                if (!a || !o) {
                                    var c = o ? w : {
                                        statements: e.classForPercent('statements', i.statements.pct),
                                        lines: e.classForPercent('lines', i.lines.pct),
                                        functions: e.classForPercent('functions', i.functions.pct),
                                        branches: e.classForPercent('branches', i.branches.pct)
                                    }, u = {
                                        metrics: o ? R(i) : i,
                                        reportClasses: c,
                                        file: n.getRelativeName(),
                                        output: r.relativePath(t, n)
                                    };
                                    s.write(g(u) + '\n');
                                }
                            });
                            s.write(b);
                            s.write(m(n));
                            s.close();
                        }
                    },
                    {
                        key: 'onDetail',
                        value: function (t, e) {
                            var r = this.linkMapper, n = this.getTemplateData();
                            this.fillTemplate(t, n, e);
                            var i = this.getWriter(e).writeFile(r.getPath(t));
                            i.write(d(n));
                            i.write('<pre><table class="coverage">\n');
                            i.write(v(p(t.getFileCoverage(), e)));
                            i.write('</table></pre>\n');
                            i.write(m(n));
                            i.close();
                        }
                    }
                ]), r;
            }(h);
            t.exports = O;
        },
        '073e': function (t, e) {
            var r;
            e = t.exports = g;
            r = 'object' === typeof process && Object({
                VUE_APP_MODE: 'production',
                VUE_APP_URL_ONE: 'https://one.thethinkacademy.com',
                VUE_APP_URL_OVERSEA: 'https://oversea-api.thethinkacademy.com',
                VUE_APP_LIVE_CLASS_RTMP_DISPATCH: 'videogslb.thethinkacademy.com',
                VUE_APP_H5_URL: 'https://student-h5.thethinkacademy.com',
                NODE_ENV: 'production',
                VUE_APP_RELEASE_VERSION: '75700b875603b2d2a7a1d9d59b11609d175f79e9',
                BASE_URL: '/',
                IS_ELECTRON: true
            }) && Object({
                VUE_APP_MODE: 'production',
                VUE_APP_URL_ONE: 'https://one.thethinkacademy.com',
                VUE_APP_URL_OVERSEA: 'https://oversea-api.thethinkacademy.com',
                VUE_APP_LIVE_CLASS_RTMP_DISPATCH: 'videogslb.thethinkacademy.com',
                VUE_APP_H5_URL: 'https://student-h5.thethinkacademy.com',
                NODE_ENV: 'production',
                VUE_APP_RELEASE_VERSION: '75700b875603b2d2a7a1d9d59b11609d175f79e9',
                BASE_URL: '/',
                IS_ELECTRON: true
            }).NODE_DEBUG && /\bsemver\b/i.test(Object({
                VUE_APP_MODE: 'production',
                VUE_APP_URL_ONE: 'https://one.thethinkacademy.com',
                VUE_APP_URL_OVERSEA: 'https://oversea-api.thethinkacademy.com',
                VUE_APP_LIVE_CLASS_RTMP_DISPATCH: 'videogslb.thethinkacademy.com',
                VUE_APP_H5_URL: 'https://student-h5.thethinkacademy.com',
                NODE_ENV: 'production',
                VUE_APP_RELEASE_VERSION: '75700b875603b2d2a7a1d9d59b11609d175f79e9',
                BASE_URL: '/',
                IS_ELECTRON: true
            }).NODE_DEBUG) ? function () {
                var t = Array.prototype.slice.call(arguments, 0);
                t.unshift('SEMVER');
                console.log.apply(console, t);
            } : function () {
            };
            e.SEMVER_SPEC_VERSION = '2.0.0';
            var i = Number.MAX_SAFE_INTEGER || 9007199254740991, s = e.re = [], o = e.src = [], c = e.tokens = {}, u = 0;
            function l(t) {
                c[t] = u++;
            }
            l('NUMERICIDENTIFIER');
            o[c.NUMERICIDENTIFIER] = '0|[1-9]\\d*';
            l('NUMERICIDENTIFIERLOOSE');
            o[c.NUMERICIDENTIFIERLOOSE] = '[0-9]+';
            l('NONNUMERICIDENTIFIER');
            o[c.NONNUMERICIDENTIFIER] = '\\d*[a-zA-Z-][a-zA-Z0-9-]*';
            l('MAINVERSION');
            o[c.MAINVERSION] = '(' + o[c.NUMERICIDENTIFIER] + ')\\.(' + o[c.NUMERICIDENTIFIER] + ')\\.(' + o[c.NUMERICIDENTIFIER] + ')';
            l('MAINVERSIONLOOSE');
            o[c.MAINVERSIONLOOSE] = '(' + o[c.NUMERICIDENTIFIERLOOSE] + ')\\.(' + o[c.NUMERICIDENTIFIERLOOSE] + ')\\.(' + o[c.NUMERICIDENTIFIERLOOSE] + ')';
            l('PRERELEASEIDENTIFIER');
            o[c.PRERELEASEIDENTIFIER] = '(?:' + o[c.NUMERICIDENTIFIER] + '|' + o[c.NONNUMERICIDENTIFIER] + ')';
            l('PRERELEASEIDENTIFIERLOOSE');
            o[c.PRERELEASEIDENTIFIERLOOSE] = '(?:' + o[c.NUMERICIDENTIFIERLOOSE] + '|' + o[c.NONNUMERICIDENTIFIER] + ')';
            l('PRERELEASE');
            o[c.PRERELEASE] = '(?:-(' + o[c.PRERELEASEIDENTIFIER] + '(?:\\.' + o[c.PRERELEASEIDENTIFIER] + ')*))';
            l('PRERELEASELOOSE');
            o[c.PRERELEASELOOSE] = '(?:-?(' + o[c.PRERELEASEIDENTIFIERLOOSE] + '(?:\\.' + o[c.PRERELEASEIDENTIFIERLOOSE] + ')*))';
            l('BUILDIDENTIFIER');
            o[c.BUILDIDENTIFIER] = '[0-9A-Za-z-]+';
            l('BUILD');
            o[c.BUILD] = '(?:\\+(' + o[c.BUILDIDENTIFIER] + '(?:\\.' + o[c.BUILDIDENTIFIER] + ')*))';
            l('FULL');
            l('FULLPLAIN');
            o[c.FULLPLAIN] = 'v?' + o[c.MAINVERSION] + o[c.PRERELEASE] + '?' + o[c.BUILD] + '?';
            o[c.FULL] = '^' + o[c.FULLPLAIN] + '$';
            l('LOOSEPLAIN');
            o[c.LOOSEPLAIN] = '[v=\\s]*' + o[c.MAINVERSIONLOOSE] + o[c.PRERELEASELOOSE] + '?' + o[c.BUILD] + '?';
            l('LOOSE');
            o[c.LOOSE] = '^' + o[c.LOOSEPLAIN] + '$';
            l('GTLT');
            o[c.GTLT] = '((?:<|>)?=?)';
            l('XRANGEIDENTIFIERLOOSE');
            o[c.XRANGEIDENTIFIERLOOSE] = o[c.NUMERICIDENTIFIERLOOSE] + '|x|X|\\*';
            l('XRANGEIDENTIFIER');
            o[c.XRANGEIDENTIFIER] = o[c.NUMERICIDENTIFIER] + '|x|X|\\*';
            l('XRANGEPLAIN');
            o[c.XRANGEPLAIN] = '[v=\\s]*(' + o[c.XRANGEIDENTIFIER] + ')(?:\\.(' + o[c.XRANGEIDENTIFIER] + ')(?:\\.(' + o[c.XRANGEIDENTIFIER] + ')(?:' + o[c.PRERELEASE] + ')?' + o[c.BUILD] + '?)?)?';
            l('XRANGEPLAINLOOSE');
            o[c.XRANGEPLAINLOOSE] = '[v=\\s]*(' + o[c.XRANGEIDENTIFIERLOOSE] + ')(?:\\.(' + o[c.XRANGEIDENTIFIERLOOSE] + ')(?:\\.(' + o[c.XRANGEIDENTIFIERLOOSE] + ')(?:' + o[c.PRERELEASELOOSE] + ')?' + o[c.BUILD] + '?)?)?';
            l('XRANGE');
            o[c.XRANGE] = '^' + o[c.GTLT] + '\\s*' + o[c.XRANGEPLAIN] + '$';
            l('XRANGELOOSE');
            o[c.XRANGELOOSE] = '^' + o[c.GTLT] + '\\s*' + o[c.XRANGEPLAINLOOSE] + '$';
            l('COERCE');
            o[c.COERCE] = '(^|[^\\d])(\\d{1,' + 16 + '})(?:\\.(\\d{1,' + 16 + '}))?(?:\\.(\\d{1,' + 16 + '}))?(?:$|[^\\d])';
            l('COERCERTL');
            s[c.COERCERTL] = new RegExp(o[c.COERCE], 'g');
            l('LONETILDE');
            o[c.LONETILDE] = '(?:~>?)';
            l('TILDETRIM');
            o[c.TILDETRIM] = '(\\s*)' + o[c.LONETILDE] + '\\s+';
            s[c.TILDETRIM] = new RegExp(o[c.TILDETRIM], 'g');
            ;
            l('TILDE');
            o[c.TILDE] = '^' + o[c.LONETILDE] + o[c.XRANGEPLAIN] + '$';
            l('TILDELOOSE');
            o[c.TILDELOOSE] = '^' + o[c.LONETILDE] + o[c.XRANGEPLAINLOOSE] + '$';
            l('LONECARET');
            o[c.LONECARET] = '(?:\\^)';
            l('CARETTRIM');
            o[c.CARETTRIM] = '(\\s*)' + o[c.LONECARET] + '\\s+';
            s[c.CARETTRIM] = new RegExp(o[c.CARETTRIM], 'g');
            ;
            l('CARET');
            o[c.CARET] = '^' + o[c.LONECARET] + o[c.XRANGEPLAIN] + '$';
            l('CARETLOOSE');
            o[c.CARETLOOSE] = '^' + o[c.LONECARET] + o[c.XRANGEPLAINLOOSE] + '$';
            l('COMPARATORLOOSE');
            o[c.COMPARATORLOOSE] = '^' + o[c.GTLT] + '\\s*(' + o[c.LOOSEPLAIN] + ')$|^$';
            l('COMPARATOR');
            o[c.COMPARATOR] = '^' + o[c.GTLT] + '\\s*(' + o[c.FULLPLAIN] + ')$|^$';
            l('COMPARATORTRIM');
            o[c.COMPARATORTRIM] = '(\\s*)' + o[c.GTLT] + '\\s*(' + o[c.LOOSEPLAIN] + '|' + o[c.XRANGEPLAIN] + ')';
            s[c.COMPARATORTRIM] = new RegExp(o[c.COMPARATORTRIM], 'g');
            ;
            l('HYPHENRANGE');
            o[c.HYPHENRANGE] = '^\\s*(' + o[c.XRANGEPLAIN] + ')\\s+-\\s+(' + o[c.XRANGEPLAIN] + ')\\s*$';
            l('HYPHENRANGELOOSE');
            o[c.HYPHENRANGELOOSE] = '^\\s*(' + o[c.XRANGEPLAINLOOSE] + ')\\s+-\\s+(' + o[c.XRANGEPLAINLOOSE] + ')\\s*$';
            l('STAR');
            o[c.STAR] = '(<|>)?=?\\s*\\*';
            for (var d = 0; d < u; d++) {
                r(d, o[d]);
                s[d] || (s[d] = new RegExp(o[d]));
            }
            function m(t, e) {
                if (e && 'object' === typeof e || (e = {
                    loose: !!e,
                    includePrerelease: false
                }), t instanceof g) {
                    return t;
                }
                if ('string' !== typeof t) {
                    return null;
                }
                if (t.length > 256) {
                    return null;
                }
                var r = e.loose ? s[c.LOOSE] : s[c.FULL];
                if (!r.test(t)) {
                    return null;
                }
                try {
                    return new g(t, e);
                } catch (i) {
                    return null;
                }
            }
            function v(t, e) {
                var r = m(t, e);
                return r ? r.version : null;
            }
            function E(t, e) {
                var r = m(t.trim().replace(/^[=v]+/, ''), e);
                return r ? r.version : null;
            }
            function g(t, e) {
                if (e && 'object' === typeof e || (e = {
                    loose: !!e,
                    includePrerelease: false
                }), t instanceof g) {
                    if (t.loose === e.loose) {
                        return t;
                    }
                    t = t.version;
                } else {
                    if ('string' !== typeof t) {
                        throw new TypeError('Invalid Version: ' + t);
                    }
                }
                if (t.length > 256) {
                    throw new TypeError('version is longer than ' + 256 + ' characters');
                }
                if (!(this instanceof g)) {
                    return new g(t, e);
                }
                r('SemVer', t, e);
                this.options = e;
                this.loose = !!e.loose;
                var a = t.trim().match(e.loose ? s[c.LOOSE] : s[c.FULL]);
                if (!a) {
                    throw new TypeError('Invalid Version: ' + t);
                }
                if (this.raw = t, this.major = +a[1], this.minor = +a[2], this.patch = +a[3], this.major > i || this.major < 0) {
                    throw new TypeError('Invalid major version');
                }
                if (this.minor > i || this.minor < 0) {
                    throw new TypeError('Invalid minor version');
                }
                if (this.patch > i || this.patch < 0) {
                    throw new TypeError('Invalid patch version');
                }
                a[4] ? this.prerelease = a[4].split('.').map(function (t) {
                    if (/^[0-9]+$/.test(t)) {
                        var e = +t;
                        if (e >= 0 && e < i) {
                            return e;
                        }
                    }
                    return t;
                }) : this.prerelease = [];
                this.build = a[5] ? a[5].split('.') : [];
                this.format();
            }
            function b(t, e, r, n) {
                'string' === typeof r && (n = r, r = void 0);
                try {
                    return new g(t, r).inc(e, n).version;
                } catch (i) {
                    return null;
                }
            }
            function w(t, e) {
                if (_(t, e)) {
                    return null;
                }
                var r = m(t), n = m(e), i = '';
                if (r.prerelease.length || n.prerelease.length) {
                    i = 'pre';
                    ;
                }
                for (var s in r)
                    if (('major' === s || 'minor' === s || 'patch' === s) && r[s] !== n[s]) {
                        return i + s;
                    }
                return 'prerelease';
            }
            e.parse = m;
            e.valid = v;
            e.clean = E;
            e.SemVer = g;
            g.prototype.format = function () {
                return this.version = this.major + '.' + this.minor + '.' + this.patch, this.prerelease.length && (this.version += '-' + this.prerelease.join('.')), this.version;
            };
            g.prototype.toString = function () {
                return this.version;
            };
            g.prototype.compare = function (t) {
                return r('SemVer.compare', this.version, this.options, t), t instanceof g || (t = new g(t, this.options)), this.compareMain(t) || this.comparePre(t);
            };
            g.prototype.compareMain = function (t) {
                return t instanceof g || (t = new g(t, this.options)), R(this.major, t.major) || R(this.minor, t.minor) || R(this.patch, t.patch);
            };
            g.prototype.comparePre = function (t) {
                if (t instanceof g || (t = new g(t, this.options)), this.prerelease.length && !t.prerelease.length) {
                    return -1;
                }
                if (!this.prerelease.length && t.prerelease.length) {
                    return 1;
                }
                if (!this.prerelease.length && !t.prerelease.length) {
                    return 0;
                }
                var e = 0;
                do {
                    var n = this.prerelease[e], i = t.prerelease[e];
                    if (r('prerelease compare', e, n, i), void 0 === n && void 0 === i) {
                        return 0;
                    }
                    if (void 0 === i) {
                        return 1;
                    }
                    if (void 0 === n) {
                        return -1;
                    }
                    if (n !== i) {
                        return R(n, i);
                    }
                } while (++e);
            };
            g.prototype.compareBuild = function (t) {
                t instanceof g || (t = new g(t, this.options));
                var e = 0;
                do {
                    var n = this.build[e], i = t.build[e];
                    if (r('prerelease compare', e, n, i), void 0 === n && void 0 === i) {
                        return 0;
                    }
                    if (void 0 === i) {
                        return 1;
                    }
                    if (void 0 === n) {
                        return -1;
                    }
                    if (n !== i) {
                        return R(n, i);
                    }
                } while (++e);
            };
            g.prototype.inc = function (t, e) {
                switch (t) {
                    case 'premajor':
                        this.prerelease.length = 0, this.patch = 0, this.minor = 0, this.major++, this.inc('pre', e);
                        break;
                    case 'preminor':
                        this.prerelease.length = 0, this.patch = 0, this.minor++, this.inc('pre', e);
                        break;
                    case 'prepatch':
                        this.prerelease.length = 0, this.inc('patch', e), this.inc('pre', e);
                        break;
                    case 'prerelease':
                        0 === this.prerelease.length && this.inc('patch', e), this.inc('pre', e);
                        break;
                    case 'major':
                        0 === this.minor && 0 === this.patch && 0 !== this.prerelease.length || this.major++, this.minor = 0, this.patch = 0, this.prerelease = [];
                        break;
                    case 'minor':
                        0 === this.patch && 0 !== this.prerelease.length || this.minor++, this.patch = 0, this.prerelease = [];
                        break;
                    case 'patch':
                        0 === this.prerelease.length && this.patch++, this.prerelease = [];
                        break;
                    case 'pre':
                        if (0 === this.prerelease.length) {
                            this.prerelease = [0];
                        } else {
                            var r = this.prerelease.length;
                            while (--r >= 0) {
                                'number' === typeof this.prerelease[r] && (this.prerelease[r]++, r = -2);
                            }
                            -1 === r && this.prerelease.push(0);
                        }
                        e && (this.prerelease[0] === e ? isNaN(this.prerelease[1]) && (this.prerelease = [
                            e,
                            0
                        ]) : this.prerelease = [
                            e,
                            0
                        ]);
                        break;
                    default:
                        throw new Error('invalid increment argument: ' + t);
                }
                return this.format(), this.raw = this.version, this;
            };
            e.inc = b;
            e.diff = w;
            e.compareIdentifiers = R;
            ;
            function R(t, e) {
                var r = /^[0-9]+$/.test(t), n = /^[0-9]+$/.test(e);
                return r && n && (t = +t, e = +e), t === e ? 0 : r && !n ? -1 : n && !r ? 1 : t < e ? -1 : 1;
            }
            function O(t, e) {
                return R(e, t);
            }
            function I(t, e) {
                return new g(t, e).major;
            }
            function S(t, e) {
                return new g(t, e).minor;
            }
            function L(t, e) {
                return new g(t, e).patch;
            }
            function A(t, e, r) {
                return new g(t, r).compare(new g(e, r));
            }
            function N(t, e) {
                return A(t, e, true);
            }
            function P(t, e, r) {
                var n = new g(t, r), i = new g(e, r);
                return n.compare(i) || n.compareBuild(i);
            }
            function T(t, e, r) {
                return A(e, t, r);
            }
            function x(t, r) {
                return t.sort(function (t, n) {
                    return e.compareBuild(t, n, r);
                });
            }
            function C(t, r) {
                return t.sort(function (t, n) {
                    return e.compareBuild(n, t, r);
                });
            }
            function k(t, e, r) {
                return A(t, e, r) > 0;
            }
            function j(t, e, r) {
                return A(t, e, r) < 0;
            }
            function _(t, e, r) {
                return 0 === A(t, e, r);
            }
            function M(t, e, r) {
                return 0 !== A(t, e, r);
            }
            function D(t, e, r) {
                return A(t, e, r) >= 0;
            }
            function F(t, e, r) {
                return A(t, e, r) <= 0;
            }
            function U(t, e, r, n) {
                switch (e) {
                    case '===':
                        return 'object' === typeof t && (t = t.version), 'object' === typeof r && (r = r.version), t === r;
                    case '!==':
                        return 'object' === typeof t && (t = t.version), 'object' === typeof r && (r = r.version), t !== r;
                    case '':
                    case '=':
                    case '==':
                        return _(t, r, n);
                    case '!=':
                        return M(t, r, n);
                    case '>':
                        return k(t, r, n);
                    case '>=':
                        return D(t, r, n);
                    case '<':
                        return j(t, r, n);
                    case '<=':
                        return F(t, r, n);
                    default:
                        throw new TypeError('Invalid operator: ' + e);
                }
            }
            function B(t, e) {
                if (e && 'object' === typeof e || (e = {
                    loose: !!e,
                    includePrerelease: false
                }), t instanceof B) {
                    if (t.loose === !!e.loose) {
                        return t;
                    }
                    t = t.value;
                }
                if (!(this instanceof B)) {
                    return new B(t, e);
                }
                r('comparator', t, e);
                this.options = e;
                this.loose = !!e.loose;
                this.parse(t);
                this.semver === V ? this.value = '' : this.value = this.operator + this.semver.version;
                r('comp', this);
            }
            e.rcompareIdentifiers = O;
            e.major = I;
            e.minor = S;
            e.patch = L;
            e.compare = A;
            e.compareLoose = N;
            e.compareBuild = P;
            e.rcompare = T;
            e.sort = x;
            e.rsort = C;
            e.gt = k;
            e.lt = j;
            e.eq = _;
            e.neq = M;
            e.gte = D;
            e.lte = F;
            e.cmp = U;
            e.Comparator = B;
            var V = {};
            function G(t, e) {
                if (e && 'object' === typeof e || (e = {
                    loose: !!e,
                    includePrerelease: false
                }), t instanceof G) {
                    return t.loose === !!e.loose && t.includePrerelease === !!e.includePrerelease ? t : new G(t.raw, e);
                }
                if (t instanceof B) {
                    return new G(t.value, e);
                }
                if (!(this instanceof G)) {
                    return new G(t, e);
                }
                if (this.options = e, this.loose = !!e.loose, this.includePrerelease = !!e.includePrerelease, this.raw = t, this.set = t.split(/\s*\|\|\s*/).map(function (t) {
                    return this.parseRange(t.trim());
                }, this).filter(function (t) {
                    return t.length;
                }), !this.set.length) {
                    throw new TypeError('Invalid SemVer Range: ' + t);
                }
                this.format();
            }
            function $(t, e) {
                var r = true, n = t.slice(), i = n.pop();
                while (r && n.length) {
                    r = n.every(function (t) {
                        return i.intersects(t, e);
                    });
                    i = n.pop();
                }
                return r;
            }
            function X(t, e) {
                return new G(t, e).set.map(function (t) {
                    return t.map(function (t) {
                        return t.value;
                    }).join(' ').trim().split(' ');
                });
            }
            function z(t, e) {
                return r('comp', t, e), t = J(t, e), r('caret', t), t = H(t, e), r('tildes', t), t = Q(t, e), r('xrange', t), t = K(t, e), r('stars', t), t;
            }
            function W(t) {
                return !t || 'x' === t.toLowerCase() || '*' === t;
            }
            function H(t, e) {
                return t.trim().split(/\s+/).map(function (t) {
                    return q(t, e);
                }).join(' ');
            }
            function q(t, e) {
                var n = e.loose ? s[c.TILDELOOSE] : s[c.TILDE];
                return t.replace(n, function (e, n, i, a, s) {
                    var o;
                    return r('tilde', t, e, n, i, a, s), W(n) ? o = '' : W(i) ? o = '>=' + n + '.0.0 <' + (+n + 1) + '.0.0' : W(a) ? o = '>=' + n + '.' + i + '.0 <' + n + '.' + (+i + 1) + '.0' : s ? (r('replaceTilde pr', s), o = '>=' + n + '.' + i + '.' + a + '-' + s + ' <' + n + '.' + (+i + 1) + '.0') : o = '>=' + n + '.' + i + '.' + a + ' <' + n + '.' + (+i + 1) + '.0', r('tilde return', o), o;
                });
            }
            function J(t, e) {
                return t.trim().split(/\s+/).map(function (t) {
                    return Y(t, e);
                }).join(' ');
            }
            function Y(t, e) {
                r('caret', t, e);
                var n = e.loose ? s[c.CARETLOOSE] : s[c.CARET];
                return t.replace(n, function (e, n, i, a, s) {
                    var o;
                    return r('caret', t, e, n, i, a, s), W(n) ? o = '' : W(i) ? o = '>=' + n + '.0.0 <' + (+n + 1) + '.0.0' : W(a) ? o = '0' === n ? '>=' + n + '.' + i + '.0 <' + n + '.' + (+i + 1) + '.0' : '>=' + n + '.' + i + '.0 <' + (+n + 1) + '.0.0' : s ? (r('replaceCaret pr', s), o = '0' === n ? '0' === i ? '>=' + n + '.' + i + '.' + a + '-' + s + ' <' + n + '.' + i + '.' + (+a + 1) : '>=' + n + '.' + i + '.' + a + '-' + s + ' <' + n + '.' + (+i + 1) + '.0' : '>=' + n + '.' + i + '.' + a + '-' + s + ' <' + (+n + 1) + '.0.0') : (r('no pr'), o = '0' === n ? '0' === i ? '>=' + n + '.' + i + '.' + a + ' <' + n + '.' + i + '.' + (+a + 1) : '>=' + n + '.' + i + '.' + a + ' <' + n + '.' + (+i + 1) + '.0' : '>=' + n + '.' + i + '.' + a + ' <' + (+n + 1) + '.0.0'), r('caret return', o), o;
                });
            }
            function Q(t, e) {
                return r('replaceXRanges', t, e), t.split(/\s+/).map(function (t) {
                    return Z(t, e);
                }).join(' ');
            }
            function Z(t, e) {
                t = t.trim();
                var n = e.loose ? s[c.XRANGELOOSE] : s[c.XRANGE];
                return t.replace(n, function (n, i, a, s, o, c) {
                    r('xRange', t, n, i, a, s, o, c);
                    var u = W(a), l = u || W(s), h = l || W(o), p = h;
                    return '=' === i && p && (i = ''), c = e.includePrerelease ? '-0' : '', u ? n = '>' === i || '<' === i ? '<0.0.0-0' : '*' : i && p ? (l && (s = 0), o = 0, '>' === i ? (i = '>=', l ? (a = +a + 1, s = 0, o = 0) : (s = +s + 1, o = 0)) : '<=' === i && (i = '<', l ? a = +a + 1 : s = +s + 1), n = i + a + '.' + s + '.' + o + c) : l ? n = '>=' + a + '.0.0' + c + ' <' + (+a + 1) + '.0.0' + c : h && (n = '>=' + a + '.' + s + '.0' + c + ' <' + a + '.' + (+s + 1) + '.0' + c), r('xRange return', n), n;
                });
            }
            function K(t, e) {
                return r('replaceStars', t, e), t.trim().replace(s[c.STAR], '');
            }
            function tt(t, e, r, n, i, a, s, o, c, u, l, h, p) {
                return e = W(r) ? '' : W(n) ? '>=' + r + '.0.0' : W(i) ? '>=' + r + '.' + n + '.0' : '>=' + e, o = W(c) ? '' : W(u) ? '<' + (+c + 1) + '.0.0' : W(l) ? '<' + c + '.' + (+u + 1) + '.0' : h ? '<=' + c + '.' + u + '.' + l + '-' + h : '<=' + o, (e + ' ' + o).trim();
            }
            function et(t, e, n) {
                for (var i = 0; i < t.length; i++) {
                    if (!t[i].test(e)) {
                        return false;
                    }
                }
                if (e.prerelease.length && !n.includePrerelease) {
                    for (i = 0; i < t.length; i++) {
                        if (r(t[i].semver), t[i].semver !== V && t[i].semver.prerelease.length > 0) {
                            var a = t[i].semver;
                            if (a.major === e.major && a.minor === e.minor && a.patch === e.patch) {
                                return true;
                            }
                        }
                    }
                    return false;
                }
                return true;
            }
            function rt(t, e, r) {
                try {
                    e = new G(e, r);
                } catch (n) {
                    return false;
                }
                return e.test(t);
            }
            function nt(t, e, r) {
                var n = null, i = null;
                try {
                    var a = new G(e, r);
                } catch (s) {
                    return null;
                }
                return t.forEach(function (t) {
                    a.test(t) && (n && -1 !== i.compare(t) || (n = t, i = new g(n, r)));
                }), n;
            }
            function it(t, e, r) {
                var n = null, i = null;
                try {
                    var a = new G(e, r);
                } catch (s) {
                    return null;
                }
                return t.forEach(function (t) {
                    a.test(t) && (n && 1 !== i.compare(t) || (n = t, i = new g(n, r)));
                }), n;
            }
            function at(t, e) {
                t = new G(t, e);
                var r = new g('0.0.0');
                if (t.test(r)) {
                    return r;
                }
                if (r = new g('0.0.0-0'), t.test(r)) {
                    return r;
                }
                r = null;
                for (var n = 0; n < t.set.length; ++n) {
                    var i = t.set[n];
                    i.forEach(function (t) {
                        var e = new g(t.semver.version);
                        switch (t.operator) {
                            case '>':
                                0 === e.prerelease.length ? e.patch++ : e.prerelease.push(0), e.raw = e.format();
                            case '':
                            case '>=':
                                r && !k(r, e) || (r = e);
                                break;
                            case '<':
                            case '<=':
                                break;
                            default:
                                throw new Error('Unexpected operation: ' + t.operator);
                        }
                    });
                }
                return r && t.test(r) ? r : null;
            }
            function st(t, e) {
                try {
                    return new G(t, e).range || '*';
                } catch (r) {
                    return null;
                }
            }
            function ot(t, e, r) {
                return ut(t, e, '<', r);
            }
            function ct(t, e, r) {
                return ut(t, e, '>', r);
            }
            function ut(t, e, r, n) {
                var i, a, s, o, c;
                switch (t = new g(t, n), e = new G(e, n), r) {
                    case '>':
                        i = k, a = F, s = j, o = '>', c = '>=';
                        break;
                    case '<':
                        i = j, a = D, s = k, o = '<', c = '<=';
                        break;
                    default:
                        throw new TypeError('Must provide a hilo val of "<" or ">"');
                }
                if (rt(t, e, n)) {
                    return false;
                }
                for (var u = 0; u < e.set.length; ++u) {
                    var l = e.set[u], h = null, p = null;
                    if (l.forEach(function (t) {
                        t.semver === V && (t = new B('>=0.0.0'));
                        h = h || t;
                        p = p || t;
                        i(t.semver, h.semver, n) ? h = t : s(t.semver, p.semver, n) && (p = t);
                    }), h.operator === o || h.operator === c) {
                        return false;
                    }
                    if ((!p.operator || p.operator === o) && a(t, p.semver)) {
                        return false;
                    }
                    if (p.operator === c && s(t, p.semver)) {
                        return false;
                    }
                }
                return true;
            }
            function lt(t, e) {
                var r = m(t, e);
                return r && r.prerelease.length ? r.prerelease : null;
            }
            function ht(t, e, r) {
                return t = new G(t, r), e = new G(e, r), t.intersects(e);
            }
            function pt(t, e) {
                if (t instanceof g) {
                    return t;
                }
                if ('number' === typeof t && (t = String(t)), 'string' !== typeof t) {
                    return null;
                }
                e = e || {};
                var r = null;
                if (e.rtl) {
                    var n;
                    while ((n = s[c.COERCERTL].exec(t)) && (!r || r.index + r[0].length !== t.length)) {
                        r && n.index + n[0].length === r.index + r[0].length || (r = n);
                        s[c.COERCERTL].lastIndex = n.index + n[1].length + n[2].length;
                    }
                    s[c.COERCERTL].lastIndex = -1;
                } else {
                    r = t.match(s[c.COERCE]);
                }
                return null === r ? null : m(r[2] + '.' + (r[3] || '0') + '.' + (r[4] || '0'), e);
            }
            B.prototype.parse = function (t) {
                var e = this.options.loose ? s[c.COMPARATORLOOSE] : s[c.COMPARATOR], r = t.match(e);
                if (!r) {
                    throw new TypeError('Invalid comparator: ' + t);
                }
                this.operator = void 0 !== r[1] ? r[1] : '';
                '=' === this.operator && (this.operator = '');
                r[2] ? this.semver = new g(r[2], this.options.loose) : this.semver = V;
            };
            B.prototype.toString = function () {
                return this.value;
            };
            B.prototype.test = function (t) {
                if (r('Comparator.test', t, this.options.loose), this.semver === V || t === V) {
                    return true;
                }
                if ('string' === typeof t) {
                    try {
                        t = new g(t, this.options);
                    } catch (e) {
                        return false;
                    }
                }
                return U(t, this.operator, this.semver, this.options);
            };
            B.prototype.intersects = function (t, e) {
                if (!(t instanceof B)) {
                    throw new TypeError('a Comparator is required');
                }
                var r;
                if (e && 'object' === typeof e || (e = {
                    loose: !!e,
                    includePrerelease: false
                }), '' === this.operator) {
                    return '' === this.value || (r = new G(t.value, e), rt(this.value, r, e));
                }
                if ('' === t.operator) {
                    return '' === t.value || (r = new G(this.value, e), rt(t.semver, r, e));
                }
                var n = ('>=' === this.operator || '>' === this.operator) && ('>=' === t.operator || '>' === t.operator), i = ('<=' === this.operator || '<' === this.operator) && ('<=' === t.operator || '<' === t.operator), a = this.semver.version === t.semver.version, s = ('>=' === this.operator || '<=' === this.operator) && ('>=' === t.operator || '<=' === t.operator), o = U(this.semver, '<', t.semver, e) && ('>=' === this.operator || '>' === this.operator) && ('<=' === t.operator || '<' === t.operator), c = U(this.semver, '>', t.semver, e) && ('<=' === this.operator || '<' === this.operator) && ('>=' === t.operator || '>' === t.operator);
                return n || i || a && s || o || c;
            };
            e.Range = G;
            G.prototype.format = function () {
                return this.range = this.set.map(function (t) {
                    return t.join(' ').trim();
                }).join('||').trim(), this.range;
            };
            G.prototype.toString = function () {
                return this.range;
            };
            G.prototype.parseRange = function (t) {
                var e = this.options.loose;
                t = t.trim();
                var n = e ? s[c.HYPHENRANGELOOSE] : s[c.HYPHENRANGE];
                t = t.replace(n, tt);
                r('hyphen replace', t);
                t = t.replace(s[c.COMPARATORTRIM], '$1$2$3');
                r('comparator trim', t, s[c.COMPARATORTRIM]);
                t = t.replace(s[c.TILDETRIM], '$1~');
                t = t.replace(s[c.CARETTRIM], '$1^');
                t = t.split(/\s+/).join(' ');
                var i = e ? s[c.COMPARATORLOOSE] : s[c.COMPARATOR], a = t.split(' ').map(function (t) {
                    return z(t, this.options);
                }, this).join(' ').split(/\s+/);
                return this.options.loose && (a = a.filter(function (t) {
                    return !!t.match(i);
                })), a = a.map(function (t) {
                    return new B(t, this.options);
                }, this), a;
            };
            G.prototype.intersects = function (t, e) {
                if (!(t instanceof G)) {
                    throw new TypeError('a Range is required');
                }
                return this.set.some(function (r) {
                    return $(r, e) && t.set.some(function (t) {
                        return $(t, e) && r.every(function (r) {
                            return t.every(function (t) {
                                return r.intersects(t, e);
                            });
                        });
                    });
                });
            };
            e.toComparators = X;
            G.prototype.test = function (t) {
                if (!t) {
                    return false;
                }
                if ('string' === typeof t) {
                    try {
                        t = new g(t, this.options);
                    } catch (r) {
                        return false;
                    }
                }
                for (var e = 0; e < this.set.length; e++) {
                    if (et(this.set[e], t, this.options)) {
                        return true;
                    }
                }
                return false;
            };
            e.satisfies = rt;
            e.maxSatisfying = nt;
            e.minSatisfying = it;
            e.minVersion = at;
            e.validRange = st;
            e.ltr = ot;
            e.gtr = ct;
            e.outside = ut;
            e.prerelease = lt;
            e.intersects = ht;
            e.coerce = pt;
        },
        1276: function (t, e, r) {
            'use strict';
            var n = r('2ba4'), i = r('c65b'), a = r('e330'), s = r('d784'), o = r('825a'), c = r('7234'), u = r('44e7'), l = r('1d80'), h = r('4840'), p = r('8aa5'), f = r('50c4'), d = r('577e'), m = r('dc4a'), v = r('4dae'), E = r('14c3'), g = r('9263'), b = r('9f7f'), w = r('d039'), y = b.UNSUPPORTED_Y, O = Math.min, I = [].push, S = a(/./.exec), L = a(I), A = a(''.slice), N = !w(function () {
                var e = /(?:)/.exec;
                /(?:)/.exec = function () {
                    return e.apply(this, arguments);
                };
                var r = 'ab'.split(/(?:)/);
                return 2 !== r.length || 'a' !== r[0] || 'b' !== r[1];
            });
            s('split', function (t, e, r) {
                var a;
                return a = 'c' == 'abbc'.split(/(b)*/)[1] || 4 != 'test'.split(/(?:)/, -1).length || 2 != 'ab'.split(/(?:ab)*/).length || 4 != '.'.split(/(.?)(.?)/).length || '.'.split(/()()/).length > 1 || ''.split(/.?/).length ? function (t, r) {
                    var a = d(l(this)), s = void 0 === r ? 4294967295 : r >>> 0;
                    if (0 === s) {
                        return [];
                    }
                    if (void 0 === t) {
                        return [a];
                    }
                    if (!u(t)) {
                        return i(e, a, t, s);
                    }
                    var o, c, h, p = [], f = (t.ignoreCase ? 'i' : '') + (t.multiline ? 'm' : '') + (t.unicode ? 'u' : '') + (t.sticky ? 'y' : ''), m = 0, E = new RegExp(t.source, f + 'g');
                    while (o = i(g, E, a)) {
                        if (c = E.lastIndex, c > m && (L(p, A(a, m, o.index)), o.length > 1 && o.index < a.length && n(I, p, v(o, 1)), h = o[0].length, m = c, p.length >= s)) {
                            break;
                        }
                        E.lastIndex === o.index && E.lastIndex++;
                    }
                    return m === a.length ? !h && S(E, '') || L(p, '') : L(p, A(a, m)), p.length > s ? v(p, 0, s) : p;
                } : '0'.split(void 0, 0).length ? function (t, r) {
                    return void 0 === t && 0 === r ? [] : i(e, this, t, r);
                } : e, [
                        function (e, r) {
                            var n = l(this), s = c(e) ? void 0 : m(e, t);
                            return s ? i(s, e, n, r) : i(a, d(n), e, r);
                        },
                        function (t, n) {
                            var i = o(this), s = d(t), c = r(a, i, s, n, a !== e);
                            if (c.done) {
                                return c.value;
                            }
                            var u = h(i, RegExp), l = i.unicode, m = (i.ignoreCase ? 'i' : '') + (i.multiline ? 'm' : '') + (i.unicode ? 'u' : '') + (y ? 'g' : 'y'), v = new u(y ? '^(?:' + i.source + ')' : i, m), g = void 0 === n ? 4294967295 : n >>> 0;
                            if (0 === g) {
                                return [];
                            }
                            if (0 === s.length) {
                                return null === E(v, s) ? [s] : [];
                            }
                            var b = 0, w = 0, I = [];
                            while (w < s.length) {
                                v.lastIndex = y ? 0 : w;
                                var S, N = E(v, y ? A(s, w) : s);
                                if (null === N || (S = O(f(v.lastIndex + (y ? w : 0)), s.length)) === b) {
                                    w = p(s, w, l);
                                } else {
                                    if (L(I, A(s, b, w)), I.length === g) {
                                        return I;
                                    }
                                    for (var P = 1; P <= N.length - 1; P++) {
                                        if (L(I, N[P]), I.length === g) {
                                            return I;
                                        }
                                    }
                                    w = b = S;
                                }
                            }
                            return L(I, A(s, b)), I;
                        }
                    ];
            }, !N, y);
        },
        '13d5': function (t, e, r) {
            'use strict';
            var n = r('23e7'), i = r('d58f').left, a = r('a640'), s = r('2d00'), o = r('605d'), c = !o && s > 79 && s < 83, u = c || !a('reduce');
            n({
                target: 'Array',
                proto: true,
                forced: u
            }, {
                reduce: function (t) {
                    var e = arguments.length;
                    return i(this, t, e, e > 1 ? arguments[1] : void 0);
                }
            });
        },
        '18b0': function (t, e, r) {
            'use strict';
            r('d3b7');
            r('159b');
            r('ac91');
            r('abc3');
            r('05ee');
            var n = r('a32b'), i = (n.resolve, r('3631'));
            i.mkdirsSync;
            r('34bb');
        },
        2462: function (t, e, r) {
            'use strict';
            const n = r('f749'), i = r('041b');
            function a() {
                const t = () => ({
                    total: 0,
                    covered: 0,
                    skipped: 0,
                    pct: 'Unknown'
                });
                return {
                    lines: t(),
                    statements: t(),
                    functions: t(),
                    branches: t(),
                    branchesTrue: t()
                };
            }
            function s(t) {
                const e = t && t.lines && t.statements && t.functions && t.branches;
                if (!e) {
                    throw new Error('Invalid summary coverage object, missing keys, found:' + Object.keys(t).join(','));
                }
            }
            class o {
                constructor(t) {
                    this.data = t ? t instanceof o ? t.data : t : a();
                    s(this.data);
                }
                merge(t) {
                    const e = [
                        'lines',
                        'statements',
                        'branches',
                        'functions',
                        'branchesTrue'
                    ];
                    return e.forEach(e => {
                        t[e] && (this[e].total += t[e].total, this[e].covered += t[e].covered, this[e].skipped += t[e].skipped, this[e].pct = n(this[e].covered, this[e].total));
                    }), this;
                }
                toJSON() {
                    return this.data;
                }
                isEmpty() {
                    return 0 === this.lines.total;
                }
            }
            i(o, [
                'lines',
                'statements',
                'functions',
                'branches',
                'branchesTrue'
            ]);
            t.exports = { CoverageSummary: o };
        },
        '278c': function (t, e, r) {
            var n = r('c135'), i = r('9b42'), a = r('6613'), s = r('c240');
            function o(t, e) {
                return n(t) || i(t, e) || a(t, e) || s();
            }
            t.exports = o;
            t.exports.__esModule = true;
            t.exports.default = t.exports;
        },
        '2d0d': function (t, e, r) {
            r('f8c9');
            r('4ae1');
            r('d3b7');
            var n = r('36c6'), i = r('6f8f'), a = r('6b58');
            function s(t) {
                var e = i();
                return function () {
                    var r, i = n(t);
                    if (e) {
                        var s = n(this).constructor;
                        r = Reflect.construct(i, arguments, s);
                    } else {
                        r = i.apply(this, arguments);
                    }
                    return a(this, r);
                };
            }
            t.exports = s;
            t.exports.__esModule = true;
            t.exports.default = t.exports;
        },
        '2f81': function (t, e, r) {
            'use strict';
            const n = r('a32b');
            let i = n.parse, a = n.sep;
            const s = i, o = a;
            function c(t, e) {
                const r = i(t);
                let n, a, s, o = r.root, c = r.base;
                return '\\' === e && (s = o.indexOf(':\\'), s >= 0 && (o = o.substring(0, s + 2))), n = r.dir.substring(o.length), '' === t ? [] : ('/' !== e && (a = new RegExp(e.replace(/\W/g, '\\$&'), 'g'), n = n.replace(a, '/'), c = c.replace(a, '/')), n = '' !== n ? `${n}/${c}` : c, '/' === n.substring(0, 1) && (n = n.substring(1)), n = n.split(/\/+/), n);
            }
            class u {
                constructor(t) {
                    if (Array.isArray(t)) {
                        this.v = t;
                    } else {
                        if ('string' !== typeof t) {
                            throw new Error('Invalid Path argument must be string or array:' + t);
                        }
                        this.v = c(t, a);
                    }
                }
                toString() {
                    return this.v.join('/');
                }
                hasParent() {
                    return this.v.length > 0;
                }
                parent() {
                    if (!this.hasParent()) {
                        throw new Error('Unable to get parent for 0 elem path');
                    }
                    const t = this.v.slice();
                    return t.pop(), new u(t);
                }
                elements() {
                    return this.v.slice();
                }
                name() {
                    return this.v.slice(-1)[0];
                }
                contains(t) {
                    let e;
                    if (t.length > this.length) {
                        return false;
                    }
                    for (e = 0; e < t.length; e += 1) {
                        if (this.v[e] !== t.v[e]) {
                            return false;
                        }
                    }
                    return true;
                }
                ancestorOf(t) {
                    return t.contains(this) && t.length !== this.length;
                }
                descendantOf(t) {
                    return this.contains(t) && t.length !== this.length;
                }
                commonPrefixPath(t) {
                    const e = this.length > t.length ? t.length : this.length;
                    let r;
                    const n = [];
                    for (r = 0; r < e; r += 1) {
                        if (this.v[r] !== t.v[r]) {
                            break;
                        }
                        n.push(this.v[r]);
                    }
                    return new u(n);
                }
                static compare(t, e) {
                    const r = t.length, n = e.length;
                    if (r < n) {
                        return -1;
                    }
                    if (r > n) {
                        return 1;
                    }
                    const i = t.toString(), a = e.toString();
                    return i < a ? -1 : i > a ? 1 : 0;
                }
            }
            [
                'push',
                'pop',
                'shift',
                'unshift',
                'splice'
            ].forEach(t => {
                Object.defineProperty(u.prototype, t, {
                    value(...e) {
                        return this.v[t](...e);
                    }
                });
            });
            Object.defineProperty(u.prototype, 'length', {
                enumerable: true,
                get() {
                    return this.v.length;
                }
            });
            t.exports = u;
            u.tester = {
                setParserAndSep(t, e) {
                    i = t;
                    a = e;
                },
                reset() {
                    i = s;
                    a = o;
                }
            };
        },
        3631: function (t, e, r) {
            'use strict';
            r.r(e);
            r.d(e, 'screenshotSaveToLogs', function () {
                return h;
            });
            r.d(e, 'mkdirsSync', function () {
                return p;
            });
            r.d(e, 'screenshot', function () {
                return f;
            });
            var n = r('ade3'), i = r('c7eb'), a = r('1da1'), s = (r('ac1f'), r('5319'), r('ad9d'), r('cca6'), r('d3b7'), r('25f0'), r('99af'), r('5b81'), r('4bde')), o = r('34bb'), c = r('9b0f'), u = r('a32b'), l = o.remote.getCurrentWindow(), h = function () {
                var t = Object(a.a)(Object(i.a)().mark(function t(e) {
                    var r, n, a, s = arguments;
                    return Object(i.a)().wrap(function (t) {
                        while (1) {
                            switch (t.prev = t.next) {
                                case 0:
                                    return r = s.length > 1 && void 0 !== s[1] ? s[1] : {
                                        thumbnailWidth: 1024,
                                        thumbnailQuality: 1,
                                        width: 500,
                                        height: 428
                                    }, n = new Date().toLocaleDateString().replaceAll('/', '-'), a = '/' + n + (e ? '/' + e : ''), t.abrupt('return', f(Object.assign(r, { logUrl: a })));
                                case 4:
                                case 'end':
                                    return t.stop();
                            }
                        }
                    }, t);
                }));
                return function (e) {
                    return t.apply(this, arguments);
                };
            }(), p = function t(e) {
                return !!c.existsSync(e) || (t(u.dirname(e)) ? (c.mkdirSync(e), true) : void 0);
            }, f = function () {
                var t = Object(a.a)(Object(i.a)().mark(function t() {
                    var e, r, a, u, h, f, d, m, v, E, g, b, w, y, R, O, I, S, L = arguments;
                    return Object(i.a)().wrap(function (t) {
                        while (1) {
                            switch (t.prev = t.next) {
                                case 0:
                                    return r = L.length > 0 && void 0 !== L[0] ? L[0] : {}, a = r.thumbnailWidth, u = r.thumbnailQuality, h = r.width, f = r.height, d = r.logUrl, m = void 0 === d ? '' : d, v = r.feedback, E = void 0 !== v && v, t.next = 4, null === l || void 0 === l || null === (e = l.webContents) || void 0 === e ? void 0 : e.capturePage({
                                        x: 0,
                                        y: 0,
                                        width: h || 2400,
                                        height: f || 1440
                                    });
                                case 4:
                                    if (g = t.sent, !E) {
                                        t.next = 7;
                                        break;
                                    }
                                    return t.abrupt('return', 'data:image/jpeg;base64,' + (null === g || void 0 === g ? void 0 : g.toJPEG(50).toString('base64')));
                                case 7:
                                    return t.next = 9, Object(s.a)();
                                case 9:
                                    return b = t.sent, w = b + m, t.next = 13, Object(s.b)();
                                case 13:
                                    return y = t.sent, R = m ? w : y, O = ''.concat(R, '/thinkAcademy-').concat(new Date().getTime(), '.jpeg'), p(R), I = function (t) {
                                        var e = o.nativeImage.createFromPath(t), r = e.getSize(), i = r.width > r.height ? 'width' : 'height', s = e.resize(Object(n.a)({ quality: u || 'good' }, i, a || 320));
                                        return null === s || void 0 === s ? void 0 : s.toJPEG(50);
                                    }, c.writeFileSync(O, null === g || void 0 === g ? void 0 : g.toJPEG(50), 'base64'), S = I(O), t.abrupt('return', {
                                        fileName: O,
                                        filePath: R,
                                        thumbnail: 'data:image/jpeg;base64,' + S.toString('base64')
                                    });
                                case 21:
                                case 'end':
                                    return t.stop();
                            }
                        }
                    }, t);
                }));
                return function () {
                    return t.apply(this, arguments);
                };
            }();
            function d() {
                return d = Object(a.a)(Object(i.a)().mark(function t() {
                    var e, r = arguments;
                    return Object(i.a)().wrap(function (t) {
                        while (1) {
                            switch (t.prev = t.next) {
                                case 0:
                                    return e = r.length > 0 && void 0 !== r[0] ? r[0] : {}, t.abrupt('return', f(e));
                                case 2:
                                case 'end':
                                    return t.stop();
                            }
                        }
                    }, t);
                })), d.apply(this, arguments);
            }
            e.default = function () {
                return d.apply(this, arguments);
            };
        },
        '3ed8': function (t, e, r) {
            'use strict';
            r('aa44');
        },
        '44df': function (t, e, r) {
            'use strict';
            const n = r('9b0f'), i = r('a32b'), { promisify: a } = r('8cad'), s = r('073e'), o = s.satisfies(process.version, '>=10.12.0'), c = t => {
                if ('win32' === process.platform) {
                    const e = /[<>:"|?*]/.test(t.replace(i.parse(t).root, ''));
                    if (e) {
                        const e = new Error('Path contains invalid characters: ' + t);
                        throw e.code = 'EINVAL', e;
                    }
                }
            }, u = t => {
                const e = {
                    mode: 511,
                    fs: n
                };
                return {
                    ...e,
                    ...t
                };
            }, l = t => {
                const e = new Error(`operation not permitted, mkdir '${t}'`);
                return e.code = 'EPERM', e.errno = -4048, e.path = t, e.syscall = 'mkdir', e;
            }, h = async (t, e) => {
                c(t);
                e = u(e);
                const r = a(e.fs.mkdir), s = a(e.fs.stat);
                if (o && e.fs.mkdir === n.mkdir) {
                    const n = i.resolve(t);
                    return await r(n, {
                        mode: e.mode,
                        recursive: true
                    }), n;
                }
                const h = async t => {
                    try {
                        return await r(t, e.mode), t;
                    } catch (n) {
                        if ('EPERM' === n.code) {
                            throw n;
                        }
                        if ('ENOENT' === n.code) {
                            if (i.dirname(t) === t) {
                                throw l(t);
                            }
                            if (n.message.includes('null bytes')) {
                                throw n;
                            }
                            return await h(i.dirname(t)), h(t);
                        }
                        try {
                            const e = await s(t);
                            if (!e.isDirectory()) {
                                throw new Error('The path is not a directory');
                            }
                        } catch (a) {
                            throw n;
                        }
                        return t;
                    }
                };
                return h(i.resolve(t));
            };
            t.exports = h;
            t.exports.sync = (t, e) => {
                if (c(t), e = u(e), o && e.fs.mkdirSync === n.mkdirSync) {
                    const r = i.resolve(t);
                    return n.mkdirSync(r, {
                        mode: e.mode,
                        recursive: true
                    }), r;
                }
                const r = t => {
                    try {
                        e.fs.mkdirSync(t, e.mode);
                    } catch (n) {
                        if ('EPERM' === n.code) {
                            throw n;
                        }
                        if ('ENOENT' === n.code) {
                            if (i.dirname(t) === t) {
                                throw l(t);
                            }
                            if (n.message.includes('null bytes')) {
                                throw n;
                            }
                            return r(i.dirname(t)), r(t);
                        }
                        try {
                            if (!e.fs.statSync(t).isDirectory()) {
                                throw new Error('The path is not a directory');
                            }
                        } catch (a) {
                            throw n;
                        }
                    }
                    return t;
                };
                return r(i.resolve(t));
            };
        },
        '4bde': function (t, e, r) {
            'use strict';
            r.d(e, 'c', function () {
                return s;
            });
            r.d(e, 'a', function () {
                return o;
            });
            r.d(e, 'b', function () {
                return c;
            });
            var n = r('c7eb'), i = r('1da1'), a = r('0a4b'), s = function () {
                var t = Object(i.a)(Object(n.a)().mark(function t(e) {
                    return Object(n.a)().wrap(function (t) {
                        while (1) {
                            switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, window.thinkApi.ipc.invoke('setStoreValue', 'screenshotPath', e);
                                case 2:
                                case 'end':
                                    return t.stop();
                            }
                        }
                    }, t);
                }));
                return function (e) {
                    return t.apply(this, arguments);
                };
            }(), o = function () {
                var t = Object(i.a)(Object(n.a)().mark(function t() {
                    var e;
                    return Object(n.a)().wrap(function (t) {
                        while (1) {
                            switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, a.nativeApi.getPathByName('userData');
                                case 2:
                                    return e = t.sent, t.abrupt('return', e + '/Logs');
                                case 4:
                                case 'end':
                                    return t.stop();
                            }
                        }
                    }, t);
                }));
                return function () {
                    return t.apply(this, arguments);
                };
            }(), c = function () {
                var t = Object(i.a)(Object(n.a)().mark(function t() {
                    var e, r, i;
                    return Object(n.a)().wrap(function (t) {
                        while (1) {
                            switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, a.nativeApi.getPathByName('desktop');
                                case 2:
                                    return e = t.sent, r = ''.concat(e, '/Think-Academy-Screenshot'), t.next = 6, window.thinkApi.ipc.invoke('getStoreValue', 'screenshotPath');
                                case 6:
                                    return i = t.sent, t.abrupt('return', i || r);
                                case 8:
                                case 'end':
                                    return t.stop();
                            }
                        }
                    }, t);
                }));
                return function () {
                    return t.apply(this, arguments);
                };
            }();
        },
        '4f14': function (t, e, r) {
            'use strict';
            t.exports = {
                getDefault() {
                    return {
                        statements: [
                            50,
                            80
                        ],
                        functions: [
                            50,
                            80
                        ],
                        branches: [
                            50,
                            80
                        ],
                        lines: [
                            50,
                            80
                        ]
                    };
                }
            };
        },
        5063: function (t, e, r) {
            'use strict';
            t.exports = {
                stdout: false,
                stderr: false
            };
        },
        5958: function (t, e, r) {
            'use strict';
            const n = r('abc3'), i = r('2f81'), {
                BaseNode: a,
                BaseTree: s
            } = r('cfc9');
            class o extends a {
                constructor(t, e) {
                    super();
                    this.path = t;
                    this.parent = null;
                    this.fileCoverage = e;
                    this.children = [];
                }
                static createRoot(t) {
                    const e = new o(new i([]));
                    return t.forEach(t => {
                        e.addChild(t);
                    }), e;
                }
                addChild(t) {
                    t.parent = this;
                    this.children.push(t);
                }
                asRelative(t) {
                    return '/' === t.substring(0, 1) ? t.substring(1) : t;
                }
                getQualifiedName() {
                    return this.asRelative(this.path.toString());
                }
                getRelativeName() {
                    const t = this.getParent(), e = this.path;
                    let r, n;
                    const a = t ? t.path : new i([]);
                    if (a.ancestorOf(e)) {
                        for (r = new i(e.elements()), n = 0; n < a.length; n += 1) {
                            r.shift();
                        }
                        return this.asRelative(r.toString());
                    }
                    return this.asRelative(this.path.toString());
                }
                getParent() {
                    return this.parent;
                }
                getChildren() {
                    return this.children;
                }
                isSummary() {
                    return !this.fileCoverage;
                }
                getFileCoverage() {
                    return this.fileCoverage;
                }
                getCoverageSummary(t) {
                    const e = 'c_' + (t ? 'files' : 'full');
                    let r;
                    if (Object.prototype.hasOwnProperty.call(this, e)) {
                        return this[e];
                    }
                    if (this.isSummary()) {
                        let e = 0;
                        r = n.createCoverageSummary();
                        this.getChildren().forEach(n => {
                            t && n.isSummary() || (e += 1, r.merge(n.getCoverageSummary(t)));
                        });
                        0 === e && t && (r = null);
                    } else {
                        r = this.getFileCoverage().toSummary();
                    }
                    return this[e] = r, r;
                }
            }
            class c extends s {
                constructor(t, e) {
                    super(t);
                    const r = t => {
                        e && !t.isRoot() && t.path.unshift(e);
                    };
                    this.visit({
                        onDetail: r,
                        onSummary(t) {
                            r(t);
                            t.children.sort((t, e) => {
                                const r = t.path.toString(), n = e.path.toString();
                                return r < n ? -1 : r > n ? 1 : 0;
                            });
                        }
                    });
                }
            }
            function u(t) {
                return t.reduce((t, e) => t.commonPrefixPath(e), t[0] || new i([]));
            }
            function l(t, e, r = () => {
            }) {
                let n = e[t.toString()];
                return n || (n = new o(t), e[t.toString()] = n, r(t, n)), n;
            }
            function h(t) {
                const e = Object.create(null);
                return t.forEach(t => {
                    const r = l(t.path.parent(), e);
                    r.addChild(new o(t.path, t.fileCoverage));
                }), Object.values(e);
            }
            function p(t, e, r, n) {
                const i = l(r.parent(), e, (r, n) => {
                    r.hasParent() ? p(t, e, r, n) : t.push(n);
                });
                i.addChild(n);
            }
            function f(t, e) {
                const { children: r } = t;
                return 1 !== r.length || r[0].fileCoverage ? (t.children = r.map(e => f(e, t)), t) : (r[0].parent = e, f(r[0], e));
            }
            function d(t, e) {
                if (t.some(t => 0 === t.path.length)) {
                    return 0 === e.length ? 'root' : e.name();
                }
            }
            class m {
                constructor(t, e = 'pkg') {
                    this._coverageMap = t;
                    this._defaultSummarizer = e;
                    this._initialList = t.files().map(e => ({
                        filePath: e,
                        path: new i(e),
                        fileCoverage: t.fileCoverageFor(e)
                    }));
                    this._commonParent = u(this._initialList.map(t => t.path.parent()));
                    this._commonParent.length > 0 && this._initialList.forEach(t => {
                        t.path.splice(0, this._commonParent.length);
                    });
                }
                get defaultSummarizer() {
                    return this[this._defaultSummarizer];
                }
                get flat() {
                    return this._flat || (this._flat = new c(o.createRoot(this._initialList.map(t => new o(t.path, t.fileCoverage))))), this._flat;
                }
                _createPkg() {
                    const t = h(this._initialList);
                    return 1 === t.length ? new c(t[0]) : new c(o.createRoot(t), d(t, this._commonParent));
                }
                get pkg() {
                    return this._pkg || (this._pkg = this._createPkg()), this._pkg;
                }
                _createNested() {
                    const t = Object.create(null), e = [];
                    this._initialList.forEach(r => {
                        const n = new o(r.path, r.fileCoverage);
                        p(e, t, r.path, n);
                    });
                    const r = e.map(t => f(t));
                    return 1 === r.length ? new c(r[0]) : new c(o.createRoot(r));
                }
                get nested() {
                    return this._nested || (this._nested = this._createNested()), this._nested;
                }
            }
            t.exports = m;
        },
        '5a43c': function (t, e) {
            function r(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var r = 0, n = new Array(e); r < e; r++) {
                    n[r] = t[r];
                }
                return n;
            }
            t.exports = r;
            t.exports.__esModule = true;
            t.exports.default = t.exports;
        },
        '5bc3': function (t, e, r) {
            var n = r('a395');
            function i(t, e) {
                for (var r = 0; r < e.length; r++) {
                    var i = e[r];
                    i.enumerable = i.enumerable || false;
                    i.configurable = true;
                    'value' in i && (i.writable = true);
                    Object.defineProperty(t, n(i.key), i);
                }
            }
            function a(t, e, r) {
                return e && i(t.prototype, e), r && i(t, r), Object.defineProperty(t, 'prototype', { writable: false }), t;
            }
            t.exports = a;
            t.exports.__esModule = true;
            t.exports.default = t.exports;
        },
        6613: function (t, e, r) {
            r('fb6a');
            r('d3b7');
            r('b0c0');
            r('a630');
            r('3ca3');
            r('ac1f');
            var n = r('5a43c');
            function i(t, e) {
                if (t) {
                    if ('string' === typeof t) {
                        return n(t, e);
                    }
                    var r = Object.prototype.toString.call(t).slice(8, -1);
                    return 'Object' === r && t.constructor && (r = t.constructor.name), 'Map' === r || 'Set' === r ? Array.from(t) : 'Arguments' === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? n(t, e) : void 0;
                }
            }
            t.exports = i;
            t.exports.__esModule = true;
            t.exports.default = t.exports;
        },
        '6b58': function (t, e, r) {
            r('d9e2');
            var n = r('7037').default, i = r('3c96');
            function a(t, e) {
                if (e && ('object' === n(e) || 'function' === typeof e)) {
                    return e;
                }
                if (void 0 !== e) {
                    throw new TypeError('Derived constructors may only return object or undefined');
                }
                return i(t);
            }
            t.exports = a;
            t.exports.__esModule = true;
            t.exports.default = t.exports;
        },
        7037: function (t, e, r) {
            function n(e) {
                return t.exports = n = 'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator ? function (t) {
                    return typeof t;
                } : function (t) {
                    return t && 'function' == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? 'symbol' : typeof t;
                }, t.exports.__esModule = true, t.exports.default = t.exports, n(e);
            }
            r('a4d3');
            r('e01a');
            r('d3b7');
            r('d28b');
            r('e260');
            r('3ca3');
            r('ddb0');
            t.exports = n;
            t.exports.__esModule = true;
            t.exports.default = t.exports;
        },
        7188: function (t, e, r) {
            'use strict';
            r.r(e);
            r.d(e, 'escape', function () {
                return c;
            });
            r.d(e, 'unescape', function () {
                return h;
            });
            const o = t => s[t], c = t => ''.call(t, /[&<>'"]/g, o), l = t => u[t], h = t => ''.call(t, /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34);/g, l);
        },
        '7a10': function (t, e, r) {
        },
        '822a': function (t, e, r) {
            function n(t, e) {
                this.text = t;
                this.origLength = t.length;
                this.offsets = [];
                this.consumeBlanks = e;
                this.startPos = this.findFirstNonBlank();
                this.endPos = this.findLastNonBlank();
            }
            r('ac1f');
            r('466d');
            r('a434');
            ;
            n.prototype = {
                findFirstNonBlank: function () {
                    var t, e = -1, r = this.text, n = r.length;
                    for (t = 0; t < n; t += 1) {
                        if (!r.charAt(t).match(/[ \f\n\r\t\v\u00A0\u2028\u2029]/)) {
                            e = t;
                            break;
                        }
                    }
                    return e;
                },
                findLastNonBlank: function () {
                    var t, e = this.text, r = e.length, n = e.length + 1;
                    for (t = r - 1; t >= 0; t -= 1) {
                        if (!e.charAt(t).match(/[ \f\n\r\t\v\u00A0\u2028\u2029]/)) {
                            n = t;
                            break;
                        }
                    }
                    return n;
                },
                originalLength: function () {
                    return this.origLength;
                },
                insertAt: function (t, e, r, n) {
                    n = 'undefined' === typeof n ? this.consumeBlanks : n;
                    t = t > this.originalLength() ? this.originalLength() : t;
                    t = t < 0 ? 0 : t;
                    n && (t <= this.startPos && (t = 0), t > this.endPos && (t = this.origLength));
                    var i = e.length, a = this.findOffset(t, i, r), s = t + a, o = this.text;
                    return this.text = o.substring(0, s) + e + o.substring(s), this;
                },
                findOffset: function (t, e, r) {
                    var n, i, a = this.offsets, s = 0;
                    for (i = 0; i < a.length; i += 1) {
                        if (n = a[i], (n.pos < t || n.pos === t && !r) && (s += n.len), n.pos >= t) {
                            break;
                        }
                    }
                    return n && n.pos === t ? n.len += e : a.splice(i, 0, {
                        pos: t,
                        len: e
                    }), s;
                },
                wrap: function (t, e, r, n, i) {
                    return this.insertAt(t, e, true, i), this.insertAt(r, n, false, i), this;
                },
                wrapLine: function (t, e) {
                    this.wrap(0, t, this.originalLength(), e);
                },
                toString: function () {
                    return this.text;
                }
            };
            t.exports = n;
        },
        '857a': function (t, e, r) {
            var n = r('e330'), i = r('1d80'), a = r('577e'), o = n(''.replace);
            t.exports = function (t, e, r, n) {
                var c = a(i(t)), u = '<' + e;
                return '' !== r && (u += ' ' + r + '="' + o(a(n), /"/g, '&quot;') + '"'), u + '>' + c + '</' + e + '>';
            };
        },
        '8b72': function (t, e, r) {
            'use strict';
            const n = r('f749'), i = r('041b'), { CoverageSummary: a } = r('2462');
            function s(t, e) {
                const r = {
                    path: t,
                    statementMap: {},
                    fnMap: {},
                    branchMap: {},
                    s: {},
                    f: {},
                    b: {}
                };
                return e && (r.bT = {}), r;
            }
            function o(t) {
                const e = t && t.path && t.statementMap && t.fnMap && t.branchMap && t.s && t.f && t.b;
                if (!e) {
                    throw new Error('Invalid file coverage object, missing keys, found:' + Object.keys(t).join(','));
                }
            }
            const c = ({
                start: t,
                end: e
            }) => `${t.line}|${t.column}|${e.line}|${e.column}`, u = (t, e, r, n, i = c) => {
                const a = {
                    e: [
                        u,
                        t
                    ]
                };
                for (const [c, u] of Object.entries(t)) {
                    const t = e[c];
                    a[i(t)] = [
                        u,
                        t
                    ];
                }
                for (const [c, u] of Object.entries(r)) {
                    const t = n[c], e = i(t);
                    if (a[e]) {
                        const t = a[e];
                        u.forEach ? u.forEach((e, r) => {
                            void 0 !== t[0][r] ? t[0][r] += e : t[0][r] = e;
                        }) : t[0] += u;
                    } else {
                        ;
                    }
                }
                const s = { r: t }, o = { r: e };
                return Object.values(a).forEach(([t, e], r) => {
                    ;
                    ;
                }), [
                        s,
                        o
                    ];
            };
            class l {
                constructor(t, e = false) {
                    if (!t) {
                        throw new Error('Coverage must be initialized with a path or an object');
                    }
                    if ('string' === typeof t) {
                        this.data = s(t, e);
                    } else {
                        if (t instanceof l) {
                            this.data = t.data;
                        } else {
                            if ('object' !== typeof t) {
                                throw new Error('Invalid argument to coverage constructor');
                            }
                            this.data = t;
                        }
                    }
                    o(this.data);
                }
                getLineCoverage() {
                    const t = this.data.statementMap, e = this.data.s, r = Object.create(null);
                    return Object.entries(e).forEach(([e, n]) => {
                        if (!t[e]) {
                            return;
                        }
                        const { line: i } = t[e].start, a = r[i];
                        (void 0 === a || a < n) && (r[i] = n);
                    }), r;
                }
                getUncoveredLines() {
                    const t = this.getLineCoverage(), e = [];
                    return Object.entries(t).forEach(([t, r]) => {
                        0 === r && e.push(t);
                    }), e;
                }
                getBranchCoverageByLine() {
                    const t = this.branchMap, e = this.b, r = {
                        i: r[i] || [],
                        t: {
                            covered: n.length,
                            total: e.length,
                            coverage: i
                        }
                    };
                    return Object.entries(t).forEach(([t, n]) => {
                        const i = n.line || n.loc.start.line, a = e[t];
                        ;
                        r[i].push(...a);
                    }), Object.entries(r).forEach(([t, e]) => {
                        const n = e.filter(t => t > 0), i = n.length / e.length * 100;
                        ;
                    }), r;
                }
                toJSON() {
                    return this.data;
                }
                merge(t) {
                    if (true === t.all) {
                        return;
                    }
                    if (true === this.all) {
                        return void (this.data = t.data);
                    }
                    let [e, r] = u(this.s, this.statementMap, t.s, t.statementMap);
                    this.data.s = e;
                    this.data.statementMap = r;
                    const n = t => c(t.loc), i = t => c(t.locations[0]);
                    [e, r] = u(this.f, this.fnMap, t.f, t.fnMap, n);
                    this.data.f = e;
                    this.data.fnMap = r;
                    [e, r] = u(this.b, this.branchMap, t.b, t.branchMap, i);
                    this.data.b = e;
                    this.data.branchMap = r;
                    this.bT && t.bT && ([e, r] = u(this.bT, this.branchMap, t.bT, t.branchMap, i), this.data.bT = e);
                }
                computeSimpleTotals(t) {
                    let e = this[t];
                    'function' === typeof e && (e = e.call(this));
                    const r = {
                        total: Object.keys(e).length,
                        covered: Object.values(e).filter(t => !!t).length,
                        skipped: 0
                    };
                    return r.pct = n(r.covered, r.total), r;
                }
                computeBranchTotals(t) {
                    const e = this[t];
                    return Object.values(e).forEach(t => {
                        0 += t.filter(t => t > 0).length;
                        0 += t.length;
                    }), r.pct = n(0, 0), r;
                }
                resetHits() {
                    const t = this.s, e = this.f, r = this.b, n = this.bT;
                    Object.keys(t).forEach(e => {
                        ;
                    });
                    Object.keys(e).forEach(t => {
                        e[t] = 0;
                    });
                    Object.keys(r).forEach(t => {
                        r[t].fill(0);
                    });
                    n && Object.keys(n).forEach(t => {
                        n[t].fill(0);
                    });
                }
                toSummary() {
                    const t = {
                        e: 0,
                        exports: { FileCoverage: l }
                    };
                    return t.lines = this.computeSimpleTotals('getLineCoverage'), t.functions = this.computeSimpleTotals('f', 'fnMap'), t.statements = this.computeSimpleTotals('s', 'statementMap'), t.branches = this.computeBranchTotals('b'), this.bt && (t.branchesTrue = this.computeBranchTotals('bT')), new a(t);
                }
            }
            i(l, [
                'path',
                'statementMap',
                'fnMap',
                'branchMap',
                's',
                'f',
                'b',
                'bT',
                'all'
            ]);
            ;
        },
        '8db3': function (t, e, r) {
            'use strict';
            ;
            function i(t) {
                return Object.entries(t || {}).map(([t, e]) => ` ${t}="${e}"`).join('');
            }
            class a {
                constructor(t) {
                    this.cw = t;
                    this.stack = [];
                }
                indent(t) {
                    return this.stack.map(() => '  ').join('') + t;
                }
                openTag(t, e) {
                    const r = this.indent(`<${t + i(e)}>`);
                    this.cw.println(r);
                    this.stack.push(t);
                }
                closeTag(t) {
                    if (0 === this.stack.length) {
                        throw new Error(`Attempt to close tag ${t} when not opened`);
                    }
                    const e = this.stack.pop(), r = `</${t}>`;
                    if (e !== t) {
                        throw new Error(`Attempt to close tag ${t} when ${e} was the one open`);
                    }
                    this.cw.println(this.indent(r));
                }
                inlineTag(t, e, r) {
                    let n = '<' + t + i(e);
                    n += r ? `>${r}</${t}>` : '/>';
                    n = this.indent(n);
                    this.cw.println(n);
                }
                closeAll() {
                    this.stack.slice().reverse().forEach(t => {
                        this.closeTag(t);
                    });
                }
            }
            t.exports = a;
        },
        '970b': function (t, e, r) {
            function n(t, e) {
                if (!(t instanceof e)) {
                    throw new TypeError('Cannot call a class as a function');
                }
            }
            r('d9e2');
            t.exports = n;
            t.exports.__esModule = true;
            t.exports.default = t.exports;
        },
        '97e5': function (t, e, r) {
            'use strict';
            r('7a10');
        },
        '9b42': function (t, e, r) {
            function n(t, e) {
                var r = null == t ? null : 'undefined' != typeof Symbol && t[Symbol.iterator] || t['@@iterator'];
                if (null != r) {
                    var n, i, a, s, o = [], c = true, u = false;
                    try {
                        if (a = (r = r.call(t)).next, 0 === e) {
                            if (Object(r) !== r) {
                                return;
                            }
                            c = false;
                        } else {
                            for (; !(c = (n = a.call(r)).done) && (o.push(n.value), o.length !== e); c = true) {
                                ;
                            }
                        }
                    } catch (l) {
                        u = true;
                        i = l;
                    } finally {
                        try {
                            if (!c && null != r.return && (s = r.return(), Object(s) !== s)) {
                                return;
                            }
                        } finally {
                            if (u) {
                                throw i;
                            }
                        }
                    }
                    return o;
                }
            }
            r('14d9');
            r('a4d3');
            r('e01a');
            r('d3b7');
            r('d28b');
            r('e260');
            r('3ca3');
            r('ddb0');
            t.exports = n;
            t.exports.__esModule = true;
            t.exports.default = t.exports;
        },
        a395: function (t, e, r) {
            var n = r('7037').default, i = r('e50d');
            function a(t) {
                var e = i(t, 'string');
                return 'symbol' === n(e) ? e : String(e);
            }
            t.exports = a;
            t.exports.__esModule = true;
            t.exports.default = t.exports;
        },
        aa44: function (t, e, r) {
        },
        abc3: function (t, e, r) {
            'use strict';
            const { FileCoverage: n } = r('8b72'), { CoverageMap: i } = r('d2c8'), { CoverageSummary: a } = r('2462');
            t.exports = {
                createCoverageSummary(t) {
                    return t && t instanceof a ? t : new a(t);
                },
                createCoverageMap(t) {
                    return t && t instanceof i ? t : new i(t);
                },
                createFileCoverage(t) {
                    return t && t instanceof n ? t : new n(t);
                }
            };
            t.exports.classes = { FileCoverage: n };
        },
        ac91: function (t, e, r) {
            'use strict';
            const n = r('b397'), i = r('4f14'), a = r('c78e');
            t.exports = {
                createContext(t) {
                    return new n(t);
                },
                getDefaultWatermarks() {
                    return i.getDefault();
                },
                ReportBase: a
            };
        },
        af03: function (t, e, r) {
            var n = r('d039');
            t.exports = function (t) {
                return n(function () {
                    var e = ''[t]('"');
                    return e !== e.toLowerCase() || e.split('"').length > 3;
                });
            };
        },
        b397: function (t, e, r) {
            'use strict';
            const n = r('9b0f'), i = r('eb97'), a = r('8db3'), s = r('cfc9'), o = r('4f14'), c = r('5958');
            function u(t) {
                try {
                    return n.readFileSync(t, 'utf8');
                } catch (e) {
                    throw new Error(`Unable to lookup source: ${t} (${e.message})`);
                }
            }
            function l(t = {}) {
                return Object.entries(o.getDefault()).forEach(([e, r]) => {
                    const n = t[e];
                    Array.isArray(n) && 2 === n.length || (t[e] = r);
                }), t;
            }
            class h {
                constructor(t) {
                    this.dir = t.dir || 'coverage';
                    this.watermarks = l(t.watermarks);
                    this.sourceFinder = t.sourceFinder || u;
                    this._summarizerFactory = new c(t.coverageMap, t.defaultSummarizer);
                    this.data = {};
                }
                getWriter() {
                    return this.writer;
                }
                getSource(t) {
                    return this.sourceFinder(t);
                }
                classForPercent(t, e) {
                    const r = this.watermarks[t];
                    return r ? e < r[0] ? 'low' : e >= r[1] ? 'high' : 'medium' : 'unknown';
                }
                getXMLWriter(t) {
                    return new a(t);
                }
                getVisitor(t) {
                    return new s.Visitor(t);
                }
                getTree(t = 'defaultSummarizer') {
                    return this._summarizerFactory[t];
                }
            }
            Object.defineProperty(h.prototype, 'writer', {
                enumerable: true,
                get() {
                    return this.data.writer || (this.data.writer = new i(this.dir)), this.data.writer;
                }
            });
            t.exports = h;
        },
        c135: function (t, e) {
            function r(t) {
                if (Array.isArray(t)) {
                    return t;
                }
            }
            t.exports = r;
            t.exports.__esModule = true;
            t.exports.default = t.exports;
        },
        c240: function (t, e, r) {
            function n() {
                throw new TypeError('Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.');
            }
            r('d9e2');
            t.exports = n;
            t.exports.__esModule = true;
            t.exports.default = t.exports;
        },
        c78e: function (t, e, r) {
            'use strict';
            const n = Symbol('ReportBase.#summarizer');
            class i {
                constructor(t = {}) {
                    this[n] = t.summarizer;
                }
                execute(t) {
                    t.getTree(this[n]).visit(this, t);
                }
            }
            t.exports = i;
        },
        c7cd: function (t, e, r) {
            'use strict';
            var n = r('23e7'), i = r('857a'), a = r('af03');
            n({
                target: 'String',
                proto: true,
                forced: a('fixed')
            }, {
                fixed: function () {
                    return i(this, 'tt', '', '');
                }
            });
        },
        cb29: function (t, e, r) {
            var n = r('23e7'), i = r('81d5'), a = r('44d2');
            n({
                target: 'Array',
                proto: true
            }, { fill: i });
            a('fill');
        },
        cfc9: function (t, e, r) {
            'use strict';
            class n {
                constructor(t) {
                    this.delegate = t;
                }
            }
            [
                'Start',
                'End',
                'Summary',
                'SummaryEnd',
                'Detail'
            ].map(t => 'on' + t).forEach(t => {
                Object.defineProperty(n.prototype, t, {
                    writable: true,
                    value(e, r) {
                        'function' === typeof this.delegate[t] && this.delegate[t](e, r);
                    }
                });
            });
            class i extends n {
                constructor(t) {
                    super();
                    Array.isArray(t) || (t = [t]);
                    this.visitors = t.map(t => t instanceof n ? t : new n(t));
                }
            }
            [
                'Start',
                'Summary',
                'SummaryEnd',
                'Detail',
                'End'
            ].map(t => 'on' + t).forEach(t => {
                Object.defineProperty(i.prototype, t, {
                    value(e, r) {
                        this.visitors.forEach(n => {
                            n[t](e, r);
                        });
                    }
                });
            });
            class a {
                isRoot() {
                    return !this.getParent();
                }
                visit(t, e) {
                    this.isSummary() ? t.onSummary(this, e) : t.onDetail(this, e);
                    this.getChildren().forEach(r => {
                        r.visit(t, e);
                    });
                    this.isSummary() && t.onSummaryEnd(this, e);
                }
            }
            class s {
                constructor(t) {
                    this.root = t;
                }
                getRoot() {
                    return this.root;
                }
                visit(t, e) {
                    t instanceof n || (t = new n(t));
                    t.onStart(this.getRoot(), e);
                    this.getRoot().visit(t, e);
                    t.onEnd(this.getRoot(), e);
                }
            }
            t.exports = {
                BaseTree: s,
                BaseNode: a,
                Visitor: n,
                CompositeVisitor: i
            };
        },
        d2c8: function (t, e, r) {
            'use strict';
            const { FileCoverage: n } = r('8b72'), { CoverageSummary: i } = r('2462');
            function a(t, e) {
                return t instanceof e ? t : new e(t);
            }
            function s(t) {
                const e = Object.create(null);
                return t ? (Object.entries(t).forEach(([t, r]) => {
                    e[t] = a(r, n);
                }), e) : e;
            }
            class o {
                constructor(t) {
                    this.data = t instanceof o ? t.data : s(t);
                }
                merge(t) {
                    const e = a(t, o);
                    Object.values(e.data).forEach(t => {
                        this.addFileCoverage(t);
                    });
                }
                filter(t) {
                    Object.keys(this.data).forEach(e => {
                        t(e) || delete this.data[e];
                    });
                }
                toJSON() {
                    return this.data;
                }
                files() {
                    return Object.keys(this.data);
                }
                fileCoverageFor(t) {
                    const e = this.data[t];
                    if (!e) {
                        throw new Error('No file coverage available for: ' + t);
                    }
                    return e;
                }
                addFileCoverage(t) {
                    const e = new n(t), { path: r } = e;
                    this.data[r] ? this.data[r].merge(e) : this.data[r] = e;
                }
                getCoverageSummary() {
                    const t = new i();
                    return Object.values(this.data).forEach(e => {
                        t.merge(e.toSummary());
                    }), t;
                }
            }
            t.exports = { CoverageMap: o };
        },
        dfa8: function (t, e, r) {
            'use strict';
            r('c7cd');
            var n = function () {
                var t = this, e = t._self._c;
                return e('div', {
                    staticClass: 'toolbar',
                    class: [{
                        transparent: t.transparent,
                        fixed: t.fixed,
                        'white-button': t.whiteButton,
                        'theme-dark': t.darkTheme
                    }],
                    attrs: { 'data-log': '原生菜单栏' }
                }, [
                    e('div', {
                        staticClass: 'drag-bar',
                        attrs: { 'data-log': 'drag-bar' }
                    }),
                    e('WindowsActionBar')
                ], 1);
            }, i = [], a = function () {
                var t = this, e = t._self._c;
                return 'win' === t.platform ? e('div', {
                    staticClass: 'windows-action-bar',
                    attrs: { 'data-log': 'window菜单栏' }
                }, [
                    e('div', {
                        staticClass: 'item',
                        attrs: { 'data-log': '最小化' },
                        on: { click: t.handleMinimizeWindow }
                    }, [e('span', { staticClass: 'icon icon-minimize' })]),
                    t.disabledMaximize ? t._e() : e('div', {
                        staticClass: 'item',
                        attrs: { 'data-log': '最大化' },
                        on: { click: t.handleMaximizeWindow }
                    }, [t.isMaximized ? e('span', { staticClass: 'icon icon-exit-full-screen' }) : e('span', { staticClass: 'icon icon-full-screen' })]),
                    e('div', {
                        staticClass: 'item',
                        attrs: { 'data-log': '关闭' },
                        on: { click: t.handleCloseWindow }
                    }, [e('span', { staticClass: 'icon icon-close' })])
                ]) : t._e();
            }, s = [], o = r('0a4b'), c = r('e39c'), u = (r('18b0'), {
                name: 'WindowsActionBar',
                data: function () {
                    return {
                        platform: Object(c.k)(),
                        isMaximized: false
                    };
                },
                methods: {
                    handleMinimizeWindow: function () {
                        console.info('对象函数 handleMinimizeWindow,filePath:renderer/components/Common/windowsActionBar.vue');
                        o.nativeApi.minimizeWindow();
                    },
                    handleMaximizeWindow: function () {
                        var t = this;
                        console.info('对象函数 handleMaximizeWindow,filePath:renderer/components/Common/windowsActionBar.vue');
                        o.nativeApi.getWindowState(function (e) {
                            console.info('箭头函数 getWindowState(windwoState)', e, 'filePath:renderer/components/Common/windowsActionBar.vue');
                            'isMaximized' === e ? (o.nativeApi.normalWindow(), t.isMaximized = false) : (o.nativeApi.maximizeWindow(), t.isMaximized = true);
                        });
                    },
                    handleCloseWindow: function () {
                        console.info('对象函数 handleCloseWindow,filePath:renderer/components/Common/windowsActionBar.vue');
                        localStorage.removeItem('largeClassTestCoverage');
                        localStorage.removeItem('smallClassTestCoverage');
                        o.nativeApi.closeWindow(true);
                    }
                }
            }), l = u, h = (r('97e5'), r('2877')), p = Object(h.a)(l, a, s, false, null, '6d913dee', null), f = p.exports, d = {
                name: 'Toolbar',
                components: { WindowsActionBar: f },
                props: {
                    transparent: {
                        default: false,
                        type: Boolean
                    },
                    fixed: {
                        default: false,
                        type: Boolean
                    },
                    whiteButton: {
                        default: false,
                        type: Boolean
                    },
                    disabledMaximize: {
                        default: false,
                        type: Boolean
                    },
                    darkTheme: {
                        default: false,
                        type: Boolean
                    }
                }
            }, m = d, v = (r('3ed8'), Object(h.a)(m, n, i, false, null, '3bd2c296', null));
            e.a = v.exports;
        },
        e50d: function (t, e, r) {
            r('d9e2');
            r('8172');
            r('efec');
            r('a4d3');
            r('e01a');
            r('d3b7');
            r('a9e3');
            var n = r('7037').default;
            function i(t, e) {
                if ('object' !== n(t) || null === t) {
                    return t;
                }
                var r = t[Symbol.toPrimitive];
                if (void 0 !== r) {
                    var i = r.call(t, e || 'default');
                    if ('object' !== n(i)) {
                        return i;
                    }
                    throw new TypeError('@@toPrimitive must return a primitive value.');
                }
                return ('string' === e ? String : Number)(t);
            }
            t.exports = i;
            t.exports.__esModule = true;
            t.exports.default = t.exports;
        },
        eb97: function (t, e, r) {
            'use strict';
            const n = r('a32b'), i = r('9b0f'), a = r('44df'), s = r('5063');
            class o {
                colorize(t) {
                    return t;
                }
                println(t) {
                    this.write(t + '\n');
                }
                close() {
                }
            }
            class c extends o {
                constructor(t) {
                    super();
                    this.fd = t;
                }
                write(t) {
                    i.writeSync(this.fd, t);
                }
                close() {
                    i.closeSync(this.fd);
                }
            }
            let u = false, l = '';
            class h extends o {
                write(t) {
                    u ? l += t : process.stdout.write(t);
                }
                colorize(t, e) {
                    ;
                    return s.stdout && r[e] ? `[${r[e]}m${t}[0m` : t;
                }
            }
            class p {
                constructor(t) {
                    if (!t) {
                        throw new Error('baseDir must be specified');
                    }
                    this.baseDir = t;
                }
                static startCapture() {
                    u = true;
                }
                static stopCapture() {
                    u = false;
                }
                static getOutput() {
                    return l;
                }
                static resetOutput() {
                    l = '';
                }
                writerForDir(t) {
                    if (n.isAbsolute(t)) {
                        throw new Error('Cannot create subdir writer for absolute path: ' + t);
                    }
                    return new p(`${this.baseDir}/${t}`);
                }
                copyFile(t, e, r) {
                    if (n.isAbsolute(e)) {
                        throw new Error('Cannot write to absolute path: ' + e);
                    }
                    let s;
                    e = n.resolve(this.baseDir, e);
                    a.sync(n.dirname(e));
                    s = r ? r + i.readFileSync(t, 'utf8') : i.readFileSync(t);
                    i.writeFileSync(e, s);
                }
                writeFile(t) {
                    if (null === t || '-' === t) {
                        return new h();
                    }
                    if (n.isAbsolute(t)) {
                        throw new Error('Cannot write to absolute path: ' + t);
                    }
                    return t = n.resolve(this.baseDir, t), a.sync(n.dirname(t)), new c(i.openSync(t, 'w'));
                }
            }
            t.exports = p;
        },
        f0e0: function (t, e, r) {
            var n = r('278c').default;
            r('13d5');
            r('3c65');
            r('14d9');
            r('ac1f');
            r('5319');
            r('d3b7');
            r('159b');
            r('4fad');
            r('1276');
            r('d81d');
            r('25f0');
            var i = r('822a');
            function p(t) {
                return ' title="' + t + '" ';
            }
            function f(t) {
                return t = String(t), t.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\u0001/g, '<').replace(/\u0002/g, '>');
            }
            function d(t, e) {
                var r = t.getLineCoverage();
                r && Object.entries(r).forEach(function (t) {
                    var r = n(t, 2), i = r[0], a = r[1];
                    e[i] && (e[i].covered = a > 0 ? 'yes' : 'no', e[i].hits = a);
                });
            }
            function m(t, e) {
                var r = t.s, i = t.statementMap;
                Object.entries(r).forEach(function (t) {
                    var r, o = n(t, 2), c = o[0], u = o[1], l = i[c], h = u > 0 ? 'yes' : 'no', f = l.start.column, d = l.end.column + 1, m = l.start.line, v = l.end.line, E = '\x01span class="' + (l.skip ? 'cstat-skip' : 'cstat-no') + '"' + p('statement not covered') + '\x02', g = '\x01/span\x02';
                    'no' === h && e[m] && (v !== m && (d = e[m].text.originalLength()), r = e[m].text, r.wrap(f, E, f < d ? d : r.originalLength(), g));
                });
            }
            function v(t, e) {
                var r = t.f, i = t.fnMap;
                r && Object.entries(r).forEach(function (t) {
                    var r, o = n(t, 2), c = o[0], u = o[1], l = i[c], h = u > 0 ? 'yes' : 'no', f = l.decl || l.loc, d = f.start.column, m = f.end.column + 1, v = f.start.line, E = f.end.line, g = '\x01span class="' + (l.skip ? 'fstat-skip' : 'fstat-no') + '"' + p('function not covered') + '\x02', b = '\x01/span\x02';
                    'no' === h && e[v] && (E !== v && (m = e[v].text.originalLength()), r = e[v].text, r.wrap(d, g, d < m ? m : r.originalLength(), b));
                });
            }
            function E(t, e) {
                var r = t.b, i = t.branchMap;
                r && Object.entries(r).forEach(function (t) {
                    var r, o, c, u, l, h, f, d, m, v, E = n(t, 2), g = E[0], b = E[1], w = b.reduce(function (t, e) {
                        return t + e;
                    }, 0), y = i[g].locations;
                    if (w > 0 || 0 === w && 1 === b.length) {
                        for ('if' === i[g].type && 2 === b.length && 1 === y.length && 0 === b[1] && (y[1] = {
                            start: {},
                            end: {}
                        }), r = 0; r < b.length && r < y.length; r += 1) {
                            if (o = b[r], c = y[r], u = c.start.column, l = c.end.column + 1, h = c.start.line, f = c.end.line, d = '\x01span class="branch-' + r + ' ' + (c.skip ? 'cbranch-skip' : 'cbranch-no') + '"' + p('branch not covered') + '\x02', m = '\x01/span\x02', 0 === o && void 0 === h && 'if' === i[g].type) {
                                var R = y[r - 1];
                                u = R.start.column;
                                l = R.end.column + 1;
                                h = R.start.line;
                                f = R.end.line;
                            }
                            0 === o && e[h] && (f !== h && (l = e[h].text.originalLength()), v = e[h].text, 'if' === i[g].type ? v.insertAt(u, '\x01span class="' + (c.skip ? 'skip-if-branch' : 'missing-if-branch') + '"' + p((0 === r ? 'if' : 'else') + ' path not taken') + '\x02' + (0 === r ? 'I' : 'E') + '\x01' + '/span' + '\x02', true, false) : v.wrap(u, d, u < l ? l : v.originalLength(), m));
                        }
                    }
                });
            }
            function g(t, e) {
                var r, n;
                try {
                    var a = e.getSource(t.path), s = a.split(/(?:\r?\n)|\r/), o = 0, c = s.map(function (t) {
                        return o += 1, {
                            line: o,
                            covered: 'neutral',
                            hits: 0,
                            text: new i(t, true)
                        };
                    });
                    return c.unshift({
                        line: 0,
                        covered: null,
                        text: new i('')
                    }), d(t, c), E(t, c), v(t, c), m(t, c), c.shift(), r = c.map(function (t) {
                        return f(t.text.toString()) || '&nbsp;';
                    }), n = c.map(function (t) {
                        return {
                            covered: t.covered,
                            hits: t.hits > 0 ? t.hits + 'x' : '&nbsp;'
                        };
                    }), {
                        annotatedCode: r,
                        lineCoverage: n,
                        maxLines: c.length
                    };
                } catch (u) {
                    return r = [u.message], n = [{
                        covered: 'no',
                        hits: 0
                    }], String(u.stack || '').split(/\r?\n/).forEach(function (t) {
                        r.push(t);
                        n.push({
                            covered: 'no',
                            hits: 0
                        });
                    }), {
                        annotatedCode: r,
                        lineCoverage: n,
                        maxLines: r.length
                    };
                }
            }
            t.exports = g;
        },
        f749: function (t, e, r) {
            'use strict';
            t.exports = function (t, e) {
                let r;
                return e > 0 ? (r = 100000 * t / e, Math.floor(r / 10) / 100) : 100;
            };
        }
    }
]);