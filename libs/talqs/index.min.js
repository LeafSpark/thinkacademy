!(function (e) {
    window.Sortable = e()
})(function () {
    'use strict'
    if ('undefined' == typeof window || !window.document) {
        return function () {
            throw new Error('Sortable.js requires a window with a document')
        }
    }
    var T,
        C,
        E,
        A,
        I,
        O,
        f,
        v,
        m,
        y,
        L,
        D,
        q,
        u,
        r,
        N,
        P,
        c,
        l,
        M,
        e,
        x = {},
        j = 'Sortable' + new Date().getTime(),
        b = window,
        p = b.document,
        a = b.parseInt,
        t = b.jQuery || b.Zepto,
        n = b.Polymer,
        o = false,
        s = !!('draggable' in p.createElement('div')),
        d =
            !navigator.userAgent.match(/Trident.*rv[ :]?11\./) &&
            (((e = p.createElement('x')).style.cssText = 'pointer-events:auto'),
                'auto' === e.style.pointerEvents),
        R = false,
        _ = Math.abs,
        h = Math.min,
        g = [],
        w = [],
        z = te(function (e, t, n) {
            if (n && t.scroll) {
                var r,
                    i,
                    a,
                    o,
                    s,
                    l,
                    u = n[j],
                    c = t.scrollSensitivity,
                    f = t.scrollSpeed,
                    p = e.clientX,
                    d = e.clientY,
                    h = window.innerWidth,
                    g = window.innerHeight
                if (
                    m !== n &&
                    ((v = t.scroll), (m = n), (y = t.scrollFn), true === v)
                ) {
                    v = n
                    do {
                        if (
                            v.offsetWidth < v.scrollWidth ||
                            v.offsetHeight < v.scrollHeight
                        ) {
                            break
                        }
                    } while ((v = v.parentNode))
                }
                v &&
                    ((i = (r = v).getBoundingClientRect()),
                        (a = (_(i.right - p) <= c) - (_(i.left - p) <= c)),
                        (o = (_(i.bottom - d) <= c) - (_(i.top - d) <= c)))
                a ||
                    o ||
                    ((o = (g - d <= c) - (d <= c)),
                        ((a = (h - p <= c) - (p <= c)) || o) && (r = b))
                    ; (x.vx === a && x.vy === o && x.el === r) ||
                        ((x.el = r),
                            (x.vx = a),
                            (x.vy = o),
                            clearInterval(x.pid),
                            r &&
                            (x.pid = setInterval(function () {
                                if (
                                    ((l = o ? o * f : 0),
                                        (s = a ? a * f : 0),
                                        'function' == typeof y)
                                ) {
                                    return y.call(u, s, l, e)
                                }
                                r === b
                                    ? b.scrollTo(b.pageXOffset + s, b.pageYOffset + l)
                                    : ((r.scrollTop += l), (r.scrollLeft += s))
                            }, 24)))
            }
        }, 30),
        k = function (e) {
            function t(r, i) {
                return (
                    (void 0 !== r && true !== r) || (r = n.name),
                    'function' == typeof r
                        ? r
                        : function (e, t) {
                            var n = t.options.group.name
                            return i ? r : r && (r.join ? -1 < r.indexOf(n) : n == r)
                        }
                )
            }
            var n = {
                name: r.name,
                checkPull: t(r.pull, true),
                checkPut: t(r.put),
                revertClone: r.revertClone,
            },
                r = e.group
                ; (r && 'object' == typeof r) || (r = { name: r })
            e.group = n
        }
    function U(e, t) {
        if (!e || !e.nodeType || 1 !== e.nodeType) {
            throw 'Sortable: `el` must be HTMLElement, and not ' + {}.toString.call(e)
        }
        this.el = e
        this.options = t = ne({}, t)
        e[j] = this
        var n = {
            group: Math.random(),
            sort: true,
            disabled: false,
            store: null,
            handle: null,
            scroll: true,
            scrollSensitivity: 30,
            scrollSpeed: 10,
            draggable: /[uo]l/i.test(e.nodeName) ? 'li' : '>*',
            ghostClass: 'sortable-ghost',
            chosenClass: 'sortable-chosen',
            dragClass: 'sortable-drag',
            ignore: 'a, img',
            filter: null,
            preventOnFilter: true,
            animation: 0,
            setData: function (e, t) {
                e.setData('Text', t.textContent)
            },
            dropBubble: false,
            dragoverBubble: false,
            dataIdAttr: 'data-id',
            delay: 0,
            forceFallback: false,
            fallbackClass: 'sortable-fallback',
            fallbackOnBody: false,
            fallbackTolerance: 0,
            fallbackOffset: {
                x: 0,
                y: 0,
            },
        }
        for (var r in n) !(r in t) && (t[r] = n[r])
        for (var i in (k(t), this))
            '_' === i.charAt(0) &&
                'function' == typeof this[i] &&
                (this[i] = this[i].bind(this))
        this.nativeDraggable = !t.forceFallback && s
        S(e, 'mousedown', this._onTapStart)
        S(e, 'touchstart', this._onTapStart)
        S(e, 'pointerdown', this._onTapStart)
        this.nativeDraggable && (S(e, 'dragover', this), S(e, 'dragenter', this))
        w.push(this._onDragOver)
        t.store && this.sort(t.store.get(this))
    }
    function F(e, t) {
        'clone' !== e.lastPullMode && (t = true)
        A &&
            A.state !== t &&
            (Q(A, 'display', t ? 'none' : ''),
                t ||
                (A.state &&
                    (e.options.group.revertClone
                        ? (I.insertBefore(A, O), e._animate(T, A))
                        : I.insertBefore(A, T))),
                (A.state = t))
    }
    function H(e, t, n) {
        if (e) {
            n = n || p
            do {
                if (('>*' === t && e.parentNode === n) || ee(e, t)) {
                    return e
                }
            } while (
                (void 0, (e = (i = (r = e).host) && i.nodeType ? i : r.parentNode))
            )
        }
        var r, i
        return null
    }
    function S(e, t, n) {
        e.addEventListener(t, n, o)
    }
    function K(e, t, n) {
        e.removeEventListener(t, n, o)
    }
    function $(e, t, n) {
        if (e) {
            if (e.classList) {
                e.classList[n ? 'add' : 'remove'](t)
            } else {
                var r = (' ' + e.className + ' ')
                    .replace(/\s+/g, ' ')
                    .replace(' ' + t + ' ', ' ')
                e.className = (r + (n ? ' ' + t : '')).replace(/\s+/g, ' ')
            }
        }
    }
    function Q(e, t, n) {
        var r = e && e.style
        if (r) {
            if (void 0 === n) {
                return (
                    p.defaultView && p.defaultView.getComputedStyle
                        ? (n = p.defaultView.getComputedStyle(e, ''))
                        : e.currentStyle && (n = e.currentStyle),
                    void 0 === t ? n : n[t]
                )
            }
            t in r || (t = '-webkit-' + t)
        }
    }
    function G(e, t, n) {
        if (e) {
            var r = e.getElementsByTagName(t),
                i = 0,
                a = r.length
            if (n) {
                for (; i < a; i++) {
                    n(r[i], i)
                }
            }
            return r
        }
        return []
    }
    function V(e, t, n, r, i, a, o) {
        e = e || t[j]
        var s = p.createEvent('Event'),
            l = e.options,
            u = 'on' + n.charAt(0).toUpperCase() + n.substr(1)
        s.initEvent(n, true, true)
        s.to = t
        s.from = i || t
        s.item = r || t
        s.clone = A
        s.oldIndex = a
        s.newIndex = o
        t.dispatchEvent(s)
        l[u] && l[u].call(e, s)
    }
    function W(e, t, n, r, i, a, o, s) {
        var l,
            u,
            c = e[j],
            f = c.options.onMove
        return (
            (l = p.createEvent('Event')).initEvent('move', true, true),
            (l.to = t),
            (l.from = e),
            (l.dragged = n),
            (l.draggedRect = r),
            (l.related = i || t),
            (l.relatedRect = a || t.getBoundingClientRect()),
            (l.willInsertAfter = s),
            e.dispatchEvent(l),
            f && (u = f.call(c, l, o)),
            u
        )
    }
    function Y(e) {
        e.draggable = false
    }
    function Z() {
        R = false
    }
    function X(e) {
        for (
            var t = e.tagName + e.className + e.src + e.href + e.textContent,
            n = t.length,
            r = 0;
            n--;

        ) {
            r += t.charCodeAt(n)
        }
        return r.toString(36)
    }
    function J(e, t) {
        var n = 0
        if (!e || !e.parentNode) {
            return -1
        }
        for (; e && (e = e.previousElementSibling);) {
            'TEMPLATE' === e.nodeName.toUpperCase() ||
                ('>*' !== t && !ee(e, t)) ||
                n++
        }
        return n
    }
    function ee(e, t) {
        if (e) {
            var n = (t = t.split('.')).shift().toUpperCase(),
                r = new RegExp('\\s(' + t.join('|') + ')(?=\\s)', 'g')
            return !(
                ('' !== n && e.nodeName.toUpperCase() != n) ||
                (t.length &&
                    ((' ' + e.className + ' ').match(r) || []).length != t.length)
            )
        }
        return false
    }
    function te(e, t) {
        var n, r
        return function () {
            void 0 === n &&
                ((n = arguments),
                    (r = this),
                    setTimeout(function () {
                        1 === n.length ? e.call(r, n[0]) : e.apply(r, n)
                        n = void 0
                    }, t))
        }
    }
    function ne(e, t) {
        if (e && t) {
            for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n])
        }
        return e
    }
    function re(e) {
        return t
            ? t(e).clone(true)[0]
            : n && n.dom
                ? n.dom(e).cloneNode(true)
                : e.cloneNode(true)
    }
    U.prototype = {
        constructor: U,
        _onTapStart: function (e) {
            var t,
                n = this,
                r = this.el,
                i = this.options,
                a = i.preventOnFilter,
                o = e.type,
                s = e.touches && e.touches[0],
                l = (s || e).target,
                u = (e.target.shadowRoot && e.path && e.path[0]) || l,
                c = i.filter
            if (
                ((function (e) {
                    var t = e.getElementsByTagName('input'),
                        n = t.length
                    for (; n--;) {
                        var r = t[n]
                        r.checked && g.push(r)
                    }
                })(r),
                    !T &&
                    !(
                        (/mousedown|pointerdown/.test(o) && 0 !== e.button) ||
                        i.disabled
                    ) &&
                    (l = H(l, i.draggable, r)) &&
                    f !== l)
            ) {
                if (((t = J(l, i.draggable)), 'function' == typeof c)) {
                    if (c.call(this, e, l, this)) {
                        return V(n, u, 'filter', l, r, t), void (a && e.preventDefault())
                    }
                } else {
                    if (
                        c &&
                        (c = c.split(',').some(function (e) {
                            if ((e = H(u, e.trim(), r))) {
                                return V(n, e, 'filter', l, r, t), true
                            }
                        }))
                    ) {
                        return void (a && e.preventDefault())
                    }
                }
                ; (i.handle && !H(u, i.handle, r)) || this._prepareDragStart(e, s, l, t)
            }
        },
        _prepareDragStart: function (e, t, n, r) {
            var i,
                a = this,
                o = a.el,
                s = a.options,
                l = o.ownerDocument
            n &&
                !T &&
                n.parentNode === o &&
                ((c = e),
                    (I = o),
                    (C = (T = n).parentNode),
                    (O = T.nextSibling),
                    (f = n),
                    (N = s.group),
                    (u = r),
                    (this._lastX = (t || e).clientX),
                    (this._lastY = (t || e).clientY),
                    (T.style['will-change'] = 'transform'),
                    (i = function () {
                        a._disableDelayedDrag()
                        T.draggable = a.nativeDraggable
                        $(T, s.chosenClass, true)
                        a._triggerDragStart(e, t)
                        V(a, I, 'choose', T, I, u)
                    }),
                    s.ignore.split(',').forEach(function (e) {
                        G(T, e.trim(), Y)
                    }),
                    S(l, 'mouseup', a._onDrop),
                    S(l, 'touchend', a._onDrop),
                    S(l, 'touchcancel', a._onDrop),
                    S(l, 'pointercancel', a._onDrop),
                    S(l, 'selectstart', a),
                    s.delay
                        ? (S(l, 'mouseup', a._disableDelayedDrag),
                            S(l, 'touchend', a._disableDelayedDrag),
                            S(l, 'touchcancel', a._disableDelayedDrag),
                            S(l, 'mousemove', a._disableDelayedDrag),
                            S(l, 'touchmove', a._disableDelayedDrag),
                            S(l, 'pointermove', a._disableDelayedDrag),
                            (a._dragStartTimer = setTimeout(i, s.delay)))
                        : i())
        },
        _disableDelayedDrag: function () {
            var e = this.el.ownerDocument
            clearTimeout(this._dragStartTimer)
            K(e, 'mouseup', this._disableDelayedDrag)
            K(e, 'touchend', this._disableDelayedDrag)
            K(e, 'touchcancel', this._disableDelayedDrag)
            K(e, 'mousemove', this._disableDelayedDrag)
            K(e, 'touchmove', this._disableDelayedDrag)
            K(e, 'pointermove', this._disableDelayedDrag)
        },
        _triggerDragStart: function (e, t) {
            ; (t = t || ('touch' == e.pointerType ? e : null))
                ? ((c = {
                    target: T,
                    clientX: t.clientX,
                    clientY: t.clientY,
                }),
                    this._onDragStart(c, 'touch'))
                : this.nativeDraggable
                    ? (S(T, 'dragend', this), S(I, 'dragstart', this._onDragStart))
                    : this._onDragStart(c, true)
            try {
                p.selection
                    ? setTimeout(function () {
                        p.selection.empty()
                    })
                    : window.getSelection().removeAllRanges()
            } catch (e) { }
        },
        _dragStarted: function () {
            if (I && T) {
                var e = this.options
                $(T, e.ghostClass, true)
                $(T, e.dragClass, false)
                V((U.active = this), I, 'start', T, I, u)
            } else {
                this._nulling()
            }
        },
        _emulateDragOver: function () {
            if (l) {
                if (this._lastX === l.clientX && this._lastY === l.clientY) {
                    return
                }
                this._lastX = l.clientX
                this._lastY = l.clientY
                d || Q(E, 'display', 'none')
                var e = p.elementFromPoint(l.clientX, l.clientY),
                    t = e,
                    n = w.length
                if (t) {
                    do {
                        if (t[j]) {
                            for (; n--;) {
                                w[n]({
                                    clientX: l.clientX,
                                    clientY: l.clientY,
                                    target: e,
                                    rootEl: t,
                                })
                            }
                            break
                        }
                        e = t
                    } while ((t = t.parentNode))
                }
                d || Q(E, 'display', '')
            }
        },
        _onTouchMove: function (e) {
            if (c) {
                var t = this.options,
                    n = t.fallbackTolerance,
                    r = t.fallbackOffset,
                    i = e.touches ? e.touches[0] : e,
                    a = i.clientX - c.clientX + r.x,
                    o = i.clientY - c.clientY + r.y,
                    s = e.touches
                        ? 'translate3d(' + a + 'px,' + o + 'px,0)'
                        : 'translate(' + a + 'px,' + o + 'px)'
                if (!U.active) {
                    if (
                        n &&
                        h(_(i.clientX - this._lastX), _(i.clientY - this._lastY)) < n
                    ) {
                        return
                    }
                    this._dragStarted()
                }
                this._appendGhost()
                M = true
                l = i
                Q(E, 'webkitTransform', s)
                Q(E, 'mozTransform', s)
                Q(E, 'msTransform', s)
                Q(E, 'transform', s)
                e.preventDefault()
            }
        },
        _appendGhost: function () {
            if (!E) {
                var e,
                    t = T.getBoundingClientRect(),
                    n = Q(T),
                    r = this.options
                $((E = T.cloneNode(true)), r.ghostClass, false)
                $(E, r.fallbackClass, true)
                $(E, r.dragClass, true)
                Q(E, 'top', t.top - a(n.marginTop, 10))
                Q(E, 'left', t.left - a(n.marginLeft, 10))
                Q(E, 'width', t.width)
                Q(E, 'height', t.height)
                Q(E, 'opacity', '0.8')
                Q(E, 'position', 'fixed')
                Q(E, 'zIndex', '100000')
                Q(E, 'pointerEvents', 'none')
                    ; (r.fallbackOnBody && p.body.appendChild(E)) || I.appendChild(E)
                e = E.getBoundingClientRect()
                Q(E, 'width', 2 * t.width - e.width)
                Q(E, 'height', 2 * t.height - e.height)
            }
        },
        _onDragStart: function (e, t) {
            var n = e.dataTransfer,
                r = this.options
            this._offUpEvents()
            N.checkPull(this, this, T, e) &&
                (((A = re(T)).draggable = false),
                    (A.style['will-change'] = ''),
                    Q(A, 'display', 'none'),
                    $(A, this.options.chosenClass, false),
                    I.insertBefore(A, T),
                    V(this, I, 'clone', T))
            $(T, r.dragClass, true)
            t
                ? ('touch' === t
                    ? (S(p, 'touchmove', this._onTouchMove),
                        S(p, 'touchend', this._onDrop),
                        S(p, 'touchcancel', this._onDrop),
                        S(p, 'pointermove', this._onTouchMove),
                        S(p, 'pointerup', this._onDrop))
                    : (S(p, 'mousemove', this._onTouchMove),
                        S(p, 'mouseup', this._onDrop)),
                    (this._loopId = setInterval(this._emulateDragOver, 50)))
                : (n &&
                    ((n.effectAllowed = 'move'),
                        r.setData && r.setData.call(this, n, T)),
                    S(p, 'drop', this),
                    setTimeout(this._dragStarted, 0))
        },
        _onDragOver: function (e) {
            var t,
                n,
                r,
                i,
                a,
                o,
                s = this.el,
                l = this.options,
                u = l.group,
                c = U.active,
                f = N === u,
                p = false,
                d = l.sort
            if (
                (void 0 !== e.preventDefault &&
                    (e.preventDefault(), !l.dragoverBubble && e.stopPropagation()),
                    !T.animated) &&
                ((M = true),
                    c &&
                    !l.disabled &&
                    (f
                        ? d || (i = !I.contains(T))
                        : P === this ||
                        ((c.lastPullMode = N.checkPull(this, c, T, e)) &&
                            u.checkPut(this, c, T, e))) &&
                    (void 0 === e.rootEl || e.rootEl === this.el))
            ) {
                if ((z(e, l, this.el), R)) {
                    return
                }
                if (
                    ((t = H(e.target, l.draggable, s)),
                        (n = T.getBoundingClientRect()),
                        P !== this && ((P = this), (p = true)),
                        i)
                ) {
                    return (
                        F(c, true),
                        (C = I),
                        void (A || O ? I.insertBefore(T, A || O) : d || I.appendChild(T))
                    )
                }
                if (
                    0 === s.children.length ||
                    s.children[0] === E ||
                    (s === e.target &&
                        ((a = e),
                            (o = s.lastElementChild.getBoundingClientRect()),
                            5 < a.clientY - (o.top + o.height) ||
                            5 < a.clientX - (o.left + o.width)))
                ) {
                    if (
                        (0 !== s.children.length &&
                            s.children[0] !== E &&
                            s === e.target &&
                            (t = s.lastElementChild),
                            t)
                    ) {
                        if (t.animated) {
                            return
                        }
                        r = t.getBoundingClientRect()
                    }
                    F(c, f)
                    false !== W(I, s, T, n, t, r, e) &&
                        (T.contains(s) || (s.appendChild(T), (C = s)),
                            this._animate(n, T),
                            t && this._animate(r, t))
                } else {
                    if (t && !t.animated && t !== T && void 0 !== t.parentNode[j]) {
                        L !== t && ((D = Q((L = t))), (q = Q(t.parentNode)))
                        var h = (r = t.getBoundingClientRect()).right - r.left,
                            g = r.bottom - r.top,
                            v =
                                /left|right|inline/.test(D.cssFloat + D.display) ||
                                ('flex' == q.display &&
                                    0 === q['flex-direction'].indexOf('row')),
                            m = t.offsetWidth > T.offsetWidth,
                            y = t.offsetHeight > T.offsetHeight,
                            x =
                                0.5 < (v ? (e.clientX - r.left) / h : (e.clientY - r.top) / g),
                            b = t.nextElementSibling,
                            _ = false
                        if (v) {
                            var w = T.offsetTop,
                                k = t.offsetTop
                            _ =
                                w === k
                                    ? (t.previousElementSibling === T && !m) || (x && m)
                                    : t.previousElementSibling === T ||
                                        T.previousElementSibling === t
                                        ? 0.5 < (e.clientY - r.top) / g
                                        : w < k
                        } else {
                            p || (_ = (b !== T && !y) || (x && y))
                        }
                        var S = W(I, s, T, n, t, r, e, _)
                        false !== S &&
                            ((1 !== S && -1 !== S) || (_ = 1 === S),
                                (R = true),
                                setTimeout(Z, 30),
                                F(c, f),
                                T.contains(s) ||
                                (_ && !b
                                    ? s.appendChild(T)
                                    : t.parentNode.insertBefore(T, _ ? b : t)),
                                (C = T.parentNode),
                                this._animate(n, T),
                                this._animate(r, t))
                    }
                }
            }
        },
        _animate: function (e, t) {
            var n = this.options.animation
            if (n) {
                var r = t.getBoundingClientRect()
                1 === e.nodeType && (e = e.getBoundingClientRect())
                Q(t, 'transition', 'none')
                Q(
                    t,
                    'transform',
                    'translate3d(' + (e.left - r.left) + 'px,' + (e.top - r.top) + 'px,0)'
                )
                t.offsetWidth
                Q(t, 'transition', 'all ' + n + 'ms')
                Q(t, 'transform', 'translate3d(0,0,0)')
                clearTimeout(t.animated)
                t.animated = setTimeout(function () {
                    Q(t, 'transition', '')
                    Q(t, 'transform', '')
                    t.animated = false
                }, n)
            }
        },
        _offUpEvents: function () {
            var e = this.el.ownerDocument
            K(p, 'touchmove', this._onTouchMove)
            K(p, 'pointermove', this._onTouchMove)
            K(e, 'mouseup', this._onDrop)
            K(e, 'touchend', this._onDrop)
            K(e, 'pointerup', this._onDrop)
            K(e, 'touchcancel', this._onDrop)
            K(e, 'pointercancel', this._onDrop)
            K(e, 'selectstart', this)
        },
        _onDrop: function (e) {
            var t = this.el,
                n = this.options
            clearInterval(this._loopId)
            clearInterval(x.pid)
            clearTimeout(this._dragStartTimer)
            K(p, 'mousemove', this._onTouchMove)
            this.nativeDraggable &&
                (K(p, 'drop', this), K(t, 'dragstart', this._onDragStart))
            this._offUpEvents()
            e &&
                (M && (e.preventDefault(), !n.dropBubble && e.stopPropagation()),
                    E && E.parentNode && E.parentNode.removeChild(E),
                    (I !== C && 'clone' === U.active.lastPullMode) ||
                    (A && A.parentNode && A.parentNode.removeChild(A)),
                    T &&
                    (this.nativeDraggable && K(T, 'dragend', this),
                        Y(T),
                        (T.style['will-change'] = ''),
                        $(T, this.options.ghostClass, false),
                        $(T, this.options.chosenClass, false),
                        V(this, I, 'unchoose', T, I, u),
                        I !== C
                            ? 0 <= (r = J(T, n.draggable)) &&
                            (V(null, C, 'add', T, I, u, r),
                                V(this, I, 'remove', T, I, u, r),
                                V(null, C, 'sort', T, I, u, r),
                                V(this, I, 'sort', T, I, u, r))
                            : T.nextSibling !== O &&
                            0 <= (r = J(T, n.draggable)) &&
                            (V(this, I, 'update', T, I, u, r),
                                V(this, I, 'sort', T, I, u, r)),
                        U.active &&
                        ((null != r && -1 !== r) || (r = u),
                            V(this, I, 'end', T, I, u, r),
                            this.save())))
            this._nulling()
        },
        _nulling: function () {
            I =
                T =
                C =
                E =
                O =
                A =
                f =
                v =
                m =
                c =
                l =
                M =
                r =
                L =
                D =
                P =
                N =
                U.active =
                null
            g.forEach(function (e) {
                e.checked = true
            })
            g.length = 0
        },
        handleEvent: function (e) {
            switch (e.type) {
                case 'drop':
                case 'dragend':
                    this._onDrop(e)
                    break
                case 'dragover':
                case 'dragenter':
                    T &&
                        (this._onDragOver(e),
                            (function (e) {
                                e.dataTransfer && (e.dataTransfer.dropEffect = 'move')
                                e.preventDefault()
                            })(e))
                    break
                case 'selectstart':
                    e.preventDefault()
            }
        },
        toArray: function () {
            for (
                var e,
                t = [],
                n = this.el.children,
                r = 0,
                i = n.length,
                a = this.options;
                r < i;
                r++
            ) {
                H((e = n[r]), a.draggable, this.el) &&
                    t.push(e.getAttribute(a.dataIdAttr) || X(e))
            }
            return t
        },
        sort: function (e) {
            var r = { t: n + ('string' == typeof n ? '' : 'px') },
                i = this.el
            this.toArray().forEach(function (e, t) {
                var n = i.children[t]
                H(n, this.options.draggable, i) && (r[e] = n)
            }, this)
            e.forEach(function (e) {
                r[e] && (i.removeChild(r[e]), i.appendChild(r[e]))
            })
        },
        save: function () {
            var e = this.options.store
            e && e.set(this)
        },
        closest: function (e, t) {
            return H(e, t || this.options.draggable, this.el)
        },
        option: function (e, t) {
            var n = this.options
            if (void 0 === t) {
                return n[e]
            }
            n[e] = t
            'group' === e && k(n)
        },
        destroy: function () {
            var e = this.el
            e[j] = null
            K(e, 'mousedown', this._onTapStart)
            K(e, 'touchstart', this._onTapStart)
            K(e, 'pointerdown', this._onTapStart)
            this.nativeDraggable && (K(e, 'dragover', this), K(e, 'dragenter', this))
            Array.prototype.forEach.call(
                e.querySelectorAll('[draggable]'),
                function (e) {
                    e.removeAttribute('draggable')
                }
            )
            w.splice(w.indexOf(this._onDragOver), 1)
            this._onDrop()
            this.el = e = null
        },
    }
    S(p, 'touchmove', function (e) {
        U.active && e.preventDefault()
    })
    try {
        window.addEventListener(
            'test',
            null,
            Object.defineProperty({}, 'passive', {
                get: function () {
                    o = {
                        capture: false,
                        passive: false,
                    }
                },
            })
        )
    } catch (e) { }
    return (
        (U.utils = {
            on: S,
            off: K,
            css: Q,
            find: G,
            is: function (e, t) {
                return !!H(e, t, e)
            },
            extend: ne,
            throttle: te,
            closest: H,
            toggleClass: $,
            clone: re,
            index: J,
        }),
        (U.create = function (e, t) {
            return new U(e, t)
        }),
        (U.version = '1.6.1'),
        U
    )
})
    ; (function (e) {
        'function' == typeof define && define.amd ? define(['jquery'], e) : e(jQuery)
    })(function (x) {
        x.ui = x.ui || {}
        x.ui.version = '1.12.1'
        var i,
            n = 0,
            s = Array.prototype.slice
        x.cleanData =
            ((i = x.cleanData),
                function (e) {
                    var t, n, r
                    for (r = 0; null != (n = e[r]); r++) {
                        try {
                            ; (t = x._data(n, 'events')) &&
                                t.remove &&
                                x(n).triggerHandler('remove')
                        } catch (e) { }
                    }
                    i(e)
                })
        x.widget = function (e, n, t) {
            var r,
                i,
                a,
                o = {},
                s = e.split('.')[0],
                l = s + '-' + (e = e.split('.')[1])
            return (
                t || ((t = n), (n = x.Widget)),
                x.isArray(t) && (t = x.extend.apply(null, [{}].concat(t))),
                (x.expr[':'][l.toLowerCase()] = function (e) {
                    return !!x.data(e, l)
                }),
                (x[s] = x[s] || {}),
                (r = x[s][e]),
                (i = x[s][e] =
                    function (e, t) {
                        return this._createWidget
                            ? void (arguments.length && this._createWidget(e, t))
                            : new i(e, t)
                    }),
                x.extend(i, r, {
                    version: t.version,
                    _proto: x.extend({}, t),
                    _childConstructors: [],
                }),
                ((a = new n()).options = x.widget.extend({}, a.options)),
                x.each(t, function (t, a) {
                    return x.isFunction(a)
                        ? void (o[t] = (function () {
                            function r() {
                                return n.prototype[t].apply(this, arguments)
                            }
                            function i(e) {
                                return n.prototype[t].apply(this, e)
                            }
                            return function () {
                                var e,
                                    t = this._super,
                                    n = this._superApply
                                return (
                                    (this._super = r),
                                    (this._superApply = i),
                                    (e = a.apply(this, arguments)),
                                    (this._super = t),
                                    (this._superApply = n),
                                    e
                                )
                            }
                        })())
                        : void (o[t] = a)
                }),
                (i.prototype = x.widget.extend(
                    a,
                    { widgetEventPrefix: (r && a.widgetEventPrefix) || e },
                    o,
                    {
                        constructor: i,
                        namespace: s,
                        widgetName: e,
                        widgetFullName: l,
                    }
                )),
                r
                    ? (x.each(r._childConstructors, function (e, t) {
                        var n = t.prototype
                        x.widget(n.namespace + '.' + n.widgetName, i, t._proto)
                    }),
                        delete r._childConstructors)
                    : n._childConstructors.push(i),
                x.widget.bridge(e, i),
                i
            )
        }
        x.widget.extend = function (e) {
            for (var t, n, r = s.call(arguments, 1), i = 0, a = r.length; i < a; i++) {
                for (t in r[i])
                    (n = r[i][t]),
                        r[i].hasOwnProperty(t) &&
                        void 0 !== n &&
                        (e[t] = x.isPlainObject(n)
                            ? x.isPlainObject(e[t])
                                ? x.widget.extend({}, e[t], n)
                                : x.widget.extend({}, n)
                            : n)
            }
            return e
        }
        x.widget.bridge = function (a, t) {
            var o = t.prototype.widgetFullName || a
            x.fn[a] = function (n) {
                var e = 'string' == typeof n,
                    r = s.call(arguments, 1),
                    i = this
                return (
                    e
                        ? this.length || 'instance' !== n
                            ? this.each(function () {
                                var e,
                                    t = x.data(this, o)
                                return 'instance' === n
                                    ? ((i = t), false)
                                    : t
                                        ? x.isFunction(t[n]) && '_' !== n.charAt(0)
                                            ? (e = t[n].apply(t, r)) !== t && void 0 !== e
                                                ? ((i = e && e.jquery ? i.pushStack(e.get()) : e), false)
                                                : void 0
                                            : x.error(
                                                "no such method '" +
                                                n +
                                                "' for " +
                                                a +
                                                ' widget instance'
                                            )
                                        : x.error(
                                            'cannot call methods on ' +
                                            a +
                                            " prior to initialization; attempted to call method '" +
                                            n +
                                            "'"
                                        )
                            })
                            : (i = void 0)
                        : (r.length && (n = x.widget.extend.apply(null, [n].concat(r))),
                            this.each(function () {
                                var e = x.data(this, o)
                                e
                                    ? (e.option(n || {}), e._init && e._init())
                                    : x.data(this, o, new t(n, this))
                            })),
                    i
                )
            }
        }
        x.Widget = function () { }
        x.Widget._childConstructors = []
        x.Widget.prototype = {
            widgetName: 'widget',
            widgetEventPrefix: '',
            defaultElement: '<div>',
            options: {
                classes: {},
                disabled: false,
                create: null,
            },
            _createWidget: function (e, t) {
                t = x(t || this.defaultElement || this)[0]
                this.element = x(t)
                this.uuid = n++
                this.eventNamespace = '.' + this.widgetName + this.uuid
                this.bindings = x()
                this.hoverable = x()
                this.focusable = x()
                this.classesElementLookup = {}
                t !== this &&
                    (x.data(t, this.widgetFullName, this),
                        this._on(true, this.element, {
                            remove: function (e) {
                                e.target === t && this.destroy()
                            },
                        }),
                        (this.document = x(t.style ? t.ownerDocument : t.document || t)),
                        (this.window = x(
                            this.document[0].defaultView || this.document[0].parentWindow
                        )))
                this.options = x.widget.extend(
                    {},
                    this.options,
                    this._getCreateOptions(),
                    e
                )
                this._create()
                this.options.disabled && this._setOptionDisabled(this.options.disabled)
                this._trigger('create', null, this._getCreateEventData())
                this._init()
            },
            _getCreateOptions: function () {
                return {}
            },
            _getCreateEventData: x.noop,
            _create: x.noop,
            _init: x.noop,
            destroy: function () {
                var n = this
                this._destroy()
                x.each(this.classesElementLookup, function (e, t) {
                    n._removeClass(t, e)
                })
                this.element.off(this.eventNamespace).removeData(this.widgetFullName)
                this.widget().off(this.eventNamespace).removeAttr('aria-disabled')
                this.bindings.off(this.eventNamespace)
            },
            _destroy: x.noop,
            widget: function () {
                return this.element
            },
            option: function (e, t) {
                var n,
                    r,
                    i,
                    a = e
                if (0 === arguments.length) {
                    return x.widget.extend({}, this.options)
                }
                if ('string' == typeof e) {
                    if (((a = {}), (e = (n = e.split('.')).shift()), n.length)) {
                        for (
                            r = a[e] = x.widget.extend({}, this.options[e]), i = 0;
                            n.length - 1 > i;
                            i++
                        ) {
                            r[n[i]] = r[n[i]] || {}
                            r = r[n[i]]
                        }
                        if (((e = n.pop()), 1 === arguments.length)) {
                            return void 0 === r[e] ? null : r[e]
                        }
                        r[e] = t
                    } else {
                        if (1 === arguments.length) {
                            return void 0 === this.options[e] ? null : this.options[e]
                        }
                        a[e] = t
                    }
                }
                return this._setOptions(a), this
            },
            _setOptions: function (e) {
                var t
                for (t in e) this._setOption(t, e[t])
                return this
            },
            _setOption: function (e, t) {
                return (
                    'classes' === e && this._setOptionClasses(t),
                    (this.options[e] = t),
                    'disabled' === e && this._setOptionDisabled(t),
                    this
                )
            },
            _setOptionClasses: function (e) {
                var t, n, r
                for (t in e)
                    (r = this.classesElementLookup[t]),
                        e[t] !== this.options.classes[t] &&
                        r &&
                        r.length &&
                        ((n = x(r.get())),
                            this._removeClass(r, t),
                            n.addClass(
                                this._classes({
                                    element: n,
                                    keys: t,
                                    classes: e,
                                    add: true,
                                })
                            ))
            },
            _setOptionDisabled: function (e) {
                this._toggleClass(
                    this.widget(),
                    this.widgetFullName + '-disabled',
                    null,
                    !!e
                )
                e &&
                    (this._removeClass(this.hoverable, null, 'ui-state-hover'),
                        this._removeClass(this.focusable, null, 'ui-state-focus'))
            },
            enable: function () {
                return this._setOptions({ disabled: false })
            },
            disable: function () {
                return this._setOptions({ disabled: true })
            },
            _classes: function (i) {
                function e(e, t) {
                    var n, r
                    for (r = 0; e.length > r; r++) {
                        n = o.classesElementLookup[e[r]] || x()
                        n = i.add
                            ? x(x.unique(n.get().concat(i.element.get())))
                            : x(n.not(i.element).get())
                        o.classesElementLookup[e[r]] = n
                        a.push(e[r])
                        t && i.classes[e[r]] && a.push(i.classes[e[r]])
                    }
                }
                var a = [],
                    o = this
                return (
                    (i = x.extend(
                        {
                            element: this.element,
                            classes: this.options.classes || {},
                        },
                        i
                    )),
                    this._on(i.element, { remove: '_untrackClassesElement' }),
                    i.keys && e(i.keys.match(/\S+/g) || [], true),
                    i.extra && e(i.extra.match(/\S+/g) || []),
                    a.join(' ')
                )
            },
            _untrackClassesElement: function (n) {
                var r = this
                x.each(r.classesElementLookup, function (e, t) {
                    ; -1 !== x.inArray(n.target, t) &&
                        (r.classesElementLookup[e] = x(t.not(n.target).get()))
                })
            },
            _removeClass: function (e, t, n) {
                return this._toggleClass(e, t, n, false)
            },
            _addClass: function (e, t, n) {
                return this._toggleClass(e, t, n, true)
            },
            _toggleClass: function (e, t, n, r) {
                r = 'boolean' == typeof r ? r : n
                var i = 'string' == typeof e || null === e,
                    a = {
                        extra: i ? t : n,
                        keys: i ? e : t,
                        element: i ? this.element : e,
                        add: r,
                    }
                return a.element.toggleClass(this._classes(a), r), this
            },
            _on: function (o, s, e) {
                var l,
                    u = this
                'boolean' != typeof o && ((e = s), (s = o), (o = false))
                e
                    ? ((s = l = x(s)), (this.bindings = this.bindings.add(s)))
                    : ((e = s), (s = this.element), (l = this.widget()))
                x.each(e, function (e, t) {
                    function n() {
                        return o ||
                            (true !== u.options.disabled &&
                                !x(this).hasClass('ui-state-disabled'))
                            ? ('string' == typeof t ? u[t] : t).apply(u, arguments)
                            : void 0
                    }
                    'string' != typeof t && (n.guid = t.guid = t.guid || n.guid || x.guid++)
                    var r = e.match(/^([\w:-]*)\s*(.*)$/),
                        i = r[1] + u.eventNamespace,
                        a = r[2]
                    a ? l.on(i, a, n) : s.on(i, n)
                })
            },
            _off: function (e, t) {
                t =
                    (t || '').split(' ').join(this.eventNamespace + ' ') +
                    this.eventNamespace
                e.off(t).off(t)
                this.bindings = x(this.bindings.not(e).get())
                this.focusable = x(this.focusable.not(e).get())
                this.hoverable = x(this.hoverable.not(e).get())
            },
            _delay: function (e, t) {
                var n = this
                return setTimeout(function () {
                    return ('string' == typeof e ? n[e] : e).apply(n, arguments)
                }, t || 0)
            },
            _hoverable: function (e) {
                this.hoverable = this.hoverable.add(e)
                this._on(e, {
                    mouseenter: function (e) {
                        this._addClass(x(e.currentTarget), null, 'ui-state-hover')
                    },
                    mouseleave: function (e) {
                        this._removeClass(x(e.currentTarget), null, 'ui-state-hover')
                    },
                })
            },
            _focusable: function (e) {
                this.focusable = this.focusable.add(e)
                this._on(e, {
                    focusin: function (e) {
                        this._addClass(x(e.currentTarget), null, 'ui-state-focus')
                    },
                    focusout: function (e) {
                        this._removeClass(x(e.currentTarget), null, 'ui-state-focus')
                    },
                })
            },
            _trigger: function (e, t, n) {
                var r,
                    i,
                    a = this.options[e]
                if (
                    ((n = n || {}),
                        ((t = x.Event(t)).type = (
                            e === this.widgetEventPrefix ? e : this.widgetEventPrefix + e
                        ).toLowerCase()),
                        (t.target = this.element[0]),
                        (i = t.originalEvent))
                ) {
                    for (r in i) r in t || (t[r] = i[r])
                }
                return (
                    this.element.trigger(t, n),
                    !(
                        (x.isFunction(a) &&
                            false === a.apply(this.element[0], [t].concat(n))) ||
                        t.isDefaultPrevented()
                    )
                )
            },
        }
        x.each(
            {
                show: 'fadeIn',
                hide: 'fadeOut',
            },
            function (a, o) {
                x.Widget.prototype['_' + a] = function (t, e, n) {
                    'string' == typeof e && (e = { effect: e })
                    var r,
                        i = e ? (true === e || 'number' == typeof e ? o : e.effect || o) : a
                    'number' == typeof (e = e || {}) && (e = { duration: e })
                    r = !x.isEmptyObject(e)
                    e.complete = n
                    e.delay && t.delay(e.delay)
                    r && x.effects && x.effects.effect[i]
                        ? t[a](e)
                        : i !== a && t[i]
                            ? t[i](e.duration, e.easing, n)
                            : t.queue(function (e) {
                                x(this)[a]()
                                n && n.call(t[0])
                                e()
                            })
                }
            }
        )
        x.widget
        x.extend(x.expr[':'], {
            data: x.expr.createPseudo
                ? x.expr.createPseudo(function (t) {
                    return function (e) {
                        return !!x.data(e, t)
                    }
                })
                : function (e, t, n) {
                    return !!x.data(e, n[3])
                },
        })
        x.fn.scrollParent = function (e) {
            var t = this.css('position'),
                n = 'absolute' === t,
                r = e ? /(auto|scroll|hidden)/ : /(auto|scroll)/,
                i = this.parents()
                    .filter(function () {
                        var e = x(this)
                        return (
                            (!n || 'static' !== e.css('position')) &&
                            r.test(
                                e.css('overflow') + e.css('overflow-y') + e.css('overflow-x')
                            )
                        )
                    })
                    .eq(0)
            return 'fixed' !== t && i.length ? i : x(this[0].ownerDocument || document)
        }
        x.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase())
        var a = false
        x(document).on('mouseup', function () {
            a = false
        })
        x.widget('ui.mouse', {
            version: '1.12.1',
            options: {
                cancel: 'input, textarea, button, select, option',
                distance: 1,
                delay: 0,
            },
            _mouseInit: function () {
                var t = this
                this.element
                    .on('mousedown.' + this.widgetName, function (e) {
                        return t._mouseDown(e)
                    })
                    .on('click.' + this.widgetName, function (e) {
                        return true === x.data(e.target, t.widgetName + '.preventClickEvent')
                            ? (x.removeData(e.target, t.widgetName + '.preventClickEvent'),
                                e.stopImmediatePropagation(),
                                false)
                            : void 0
                    })
                this.started = false
            },
            _mouseDestroy: function () {
                this.element.off('.' + this.widgetName)
                this._mouseMoveDelegate &&
                    this.document
                        .off('mousemove.' + this.widgetName, this._mouseMoveDelegate)
                        .off('mouseup.' + this.widgetName, this._mouseUpDelegate)
            },
            _mouseDown: function (e) {
                if (!a) {
                    this._mouseMoved = false
                    this._mouseStarted && this._mouseUp(e)
                    this._mouseDownEvent = e
                    var t = this,
                        n = 1 === e.which,
                        r =
                            !('string' != typeof this.options.cancel || !e.target.nodeName) &&
                            x(e.target).closest(this.options.cancel).length
                    return (
                        n &&
                        !r &&
                        this._mouseCapture(e) &&
                        ((this.mouseDelayMet = !this.options.delay),
                            this.mouseDelayMet ||
                            (this._mouseDelayTimer = setTimeout(function () {
                                t.mouseDelayMet = true
                            }, this.options.delay)),
                            this._mouseDistanceMet(e) &&
                                this._mouseDelayMet(e) &&
                                ((this._mouseStarted = false !== this._mouseStart(e)),
                                    !this._mouseStarted)
                                ? e.preventDefault()
                                : (true ===
                                    x.data(e.target, this.widgetName + '.preventClickEvent') &&
                                    x.removeData(
                                        e.target,
                                        this.widgetName + '.preventClickEvent'
                                    ),
                                    (this._mouseMoveDelegate = function (e) {
                                        return t._mouseMove(e)
                                    }),
                                    (this._mouseUpDelegate = function (e) {
                                        return t._mouseUp(e)
                                    }),
                                    this.document
                                        .on('mousemove.' + this.widgetName, this._mouseMoveDelegate)
                                        .on('mouseup.' + this.widgetName, this._mouseUpDelegate),
                                    e.preventDefault(),
                                    (a = true))),
                        true
                    )
                }
            },
            _mouseMove: function (e) {
                if (this._mouseMoved) {
                    if (
                        x.ui.ie &&
                        (!document.documentMode || document.documentMode < 9) &&
                        !e.button
                    ) {
                        return this._mouseUp(e)
                    }
                    if (!e.which) {
                        if (
                            e.originalEvent.altKey ||
                            e.originalEvent.ctrlKey ||
                            e.originalEvent.metaKey ||
                            e.originalEvent.shiftKey
                        ) {
                            this.ignoreMissingWhich = true
                        } else {
                            if (!this.ignoreMissingWhich) {
                                return this._mouseUp(e)
                            }
                        }
                    }
                }
                return (
                    (e.which || e.button) && (this._mouseMoved = true),
                    this._mouseStarted
                        ? (this._mouseDrag(e), e.preventDefault())
                        : (this._mouseDistanceMet(e) &&
                            this._mouseDelayMet(e) &&
                            ((this._mouseStarted =
                                false !== this._mouseStart(this._mouseDownEvent, e)),
                                this._mouseStarted ? this._mouseDrag(e) : this._mouseUp(e)),
                            !this._mouseStarted)
                )
            },
            _mouseUp: function (e) {
                this.document
                    .off('mousemove.' + this.widgetName, this._mouseMoveDelegate)
                    .off('mouseup.' + this.widgetName, this._mouseUpDelegate)
                this._mouseStarted &&
                    ((this._mouseStarted = false),
                        e.target === this._mouseDownEvent.target &&
                        x.data(e.target, this.widgetName + '.preventClickEvent', true),
                        this._mouseStop(e))
                this._mouseDelayTimer &&
                    (clearTimeout(this._mouseDelayTimer), delete this._mouseDelayTimer)
                this.ignoreMissingWhich = false
                a = false
                e.preventDefault()
            },
            _mouseDistanceMet: function (e) {
                return (
                    Math.max(
                        Math.abs(this._mouseDownEvent.pageX - e.pageX),
                        Math.abs(this._mouseDownEvent.pageY - e.pageY)
                    ) >= this.options.distance
                )
            },
            _mouseDelayMet: function () {
                return this.mouseDelayMet
            },
            _mouseStart: function () { },
            _mouseDrag: function () { },
            _mouseStop: function () { },
            _mouseCapture: function () {
                return true
            },
        })
        x.ui.plugin = {
            add: function (e, t, n) {
                var r,
                    i = x.ui[e].prototype
                for (r in n)
                    (i.plugins[r] = i.plugins[r] || []), i.plugins[r].push([t, n[r]])
            },
            call: function (e, t, n, r) {
                var i,
                    a = e.plugins[t]
                if (
                    a &&
                    (r ||
                        (e.element[0].parentNode && 11 !== e.element[0].parentNode.nodeType))
                ) {
                    for (i = 0; a.length > i; i++) {
                        e.options[a[i][0]] && a[i][1].apply(e.element, n)
                    }
                }
            },
        }
        x.ui.safeActiveElement = function (t) {
            var n
            try {
                n = t.activeElement
            } catch (e) {
                n = t.body
            }
            return n || (n = t.body), n.nodeName || (n = t.body), n
        }
        x.ui.safeBlur = function (e) {
            e && 'body' !== e.nodeName.toLowerCase() && x(e).trigger('blur')
        }
        x.widget('ui.draggable', x.ui.mouse, {
            version: '1.12.1',
            widgetEventPrefix: 'drag',
            options: {
                addClasses: true,
                appendTo: 'parent',
                axis: false,
                connectToSortable: false,
                containment: false,
                cursor: 'auto',
                cursorAt: false,
                grid: false,
                handle: false,
                helper: 'original',
                iframeFix: false,
                opacity: false,
                refreshPositions: false,
                revert: false,
                revertDuration: 500,
                scope: 'default',
                scroll: true,
                scrollSensitivity: 20,
                scrollSpeed: 20,
                snap: false,
                snapMode: 'both',
                snapTolerance: 20,
                stack: false,
                zIndex: false,
                drag: null,
                start: null,
                stop: null,
            },
            _create: function () {
                'original' === this.options.helper && this._setPositionRelative()
                this.options.addClasses && this._addClass('ui-draggable')
                this._setHandleClassName()
                this._mouseInit()
            },
            _setOption: function (e, t) {
                this._super(e, t)
                'handle' === e &&
                    (this._removeHandleClassName(), this._setHandleClassName())
            },
            _destroy: function () {
                return (this.helper || this.element).is('.ui-draggable-dragging')
                    ? void (this.destroyOnClear = true)
                    : (this._removeHandleClassName(), void this._mouseDestroy())
            },
            _mouseCapture: function (e) {
                var t = this.options
                return (
                    !(
                        this.helper ||
                        t.disabled ||
                        0 < x(e.target).closest('.ui-resizable-handle').length
                    ) &&
                    ((this.handle = this._getHandle(e)),
                        !!this.handle &&
                        (this._blurActiveElement(e),
                            this._blockFrames(true === t.iframeFix ? 'iframe' : t.iframeFix),
                            true))
                )
            },
            _blockFrames: function (e) {
                this.iframeBlocks = this.document.find(e).map(function () {
                    var e = x(this)
                    return x('<div>')
                        .css('position', 'absolute')
                        .appendTo(e.parent())
                        .outerWidth(e.outerWidth())
                        .outerHeight(e.outerHeight())
                        .offset(e.offset())[0]
                })
            },
            _unblockFrames: function () {
                this.iframeBlocks &&
                    (this.iframeBlocks.remove(), delete this.iframeBlocks)
            },
            _blurActiveElement: function (e) {
                var t = x.ui.safeActiveElement(this.document[0])
                x(e.target).closest(t).length || x.ui.safeBlur(t)
            },
            _mouseStart: function (e) {
                var t = this.options
                return (
                    (this.helper = this._createHelper(e)),
                    this._addClass(this.helper, 'ui-draggable-dragging'),
                    this._cacheHelperProportions(),
                    x.ui.ddmanager && (x.ui.ddmanager.current = this),
                    this._cacheMargins(),
                    (this.cssPosition = this.helper.css('position')),
                    (this.scrollParent = this.helper.scrollParent(true)),
                    (this.offsetParent = this.helper.offsetParent()),
                    (this.hasFixedAncestor =
                        0 <
                        this.helper.parents().filter(function () {
                            return 'fixed' === x(this).css('position')
                        }).length),
                    (this.positionAbs = this.element.offset()),
                    this._refreshOffsets(e),
                    (this.originalPosition = this.position =
                        this._generatePosition(e, false)),
                    (this.originalPageX = e.pageX),
                    (this.originalPageY = e.pageY),
                    t.cursorAt && this._adjustOffsetFromHelper(t.cursorAt),
                    this._setContainment(),
                    false === this._trigger('start', e)
                        ? (this._clear(), false)
                        : (this._cacheHelperProportions(),
                            x.ui.ddmanager &&
                            !t.dropBehaviour &&
                            x.ui.ddmanager.prepareOffsets(this, e),
                            this._mouseDrag(e, true),
                            x.ui.ddmanager && x.ui.ddmanager.dragStart(this, e),
                            true)
                )
            },
            _refreshOffsets: function (e) {
                this.offset = {
                    top: this.positionAbs.top - this.margins.top,
                    left: this.positionAbs.left - this.margins.left,
                    scroll: false,
                    parent: this._getParentOffset(),
                    relative: this._getRelativeOffset(),
                }
                this.offset.click = {
                    left: e.pageX - this.offset.left,
                    top: e.pageY - this.offset.top,
                }
            },
            _mouseDrag: function (e, t) {
                if (
                    (this.hasFixedAncestor &&
                        (this.offset.parent = this._getParentOffset()),
                        (this.position = this._generatePosition(e, true)),
                        (this.positionAbs = this._convertPositionTo('absolute')),
                        !t)
                ) {
                    var n = this._uiHash()
                    if (false === this._trigger('drag', e, n)) {
                        return this._mouseUp(new x.Event('mouseup', e)), false
                    }
                    this.position = n.position
                }
                return (
                    (this.helper[0].style.left = this.position.left + 'px'),
                    (this.helper[0].style.top = this.position.top + 'px'),
                    x.ui.ddmanager && x.ui.ddmanager.drag(this, e),
                    false
                )
            },
            _mouseStop: function (e) {
                var t = this,
                    n = false
                return (
                    x.ui.ddmanager &&
                    !this.options.dropBehaviour &&
                    (n = x.ui.ddmanager.drop(this, e)),
                    this.dropped && ((n = this.dropped), (this.dropped = false)),
                    ('invalid' === this.options.revert && !n) ||
                        ('valid' === this.options.revert && n) ||
                        true === this.options.revert ||
                        (x.isFunction(this.options.revert) &&
                            this.options.revert.call(this.element, n))
                        ? x(this.helper).animate(
                            this.originalPosition,
                            parseInt(this.options.revertDuration, 10),
                            function () {
                                false !== t._trigger('stop', e) && t._clear()
                            }
                        )
                        : false !== this._trigger('stop', e) && this._clear(),
                    false
                )
            },
            _mouseUp: function (e) {
                return (
                    this._unblockFrames(),
                    x.ui.ddmanager && x.ui.ddmanager.dragStop(this, e),
                    this.handleElement.is(e.target) && this.element.trigger('focus'),
                    x.ui.mouse.prototype._mouseUp.call(this, e)
                )
            },
            cancel: function () {
                return (
                    this.helper.is('.ui-draggable-dragging')
                        ? this._mouseUp(new x.Event('mouseup', { target: this.element[0] }))
                        : this._clear(),
                    this
                )
            },
            _getHandle: function (e) {
                return (
                    !this.options.handle ||
                    !!x(e.target).closest(this.element.find(this.options.handle)).length
                )
            },
            _setHandleClassName: function () {
                this.handleElement = this.options.handle
                    ? this.element.find(this.options.handle)
                    : this.element
                this._addClass(this.handleElement, 'ui-draggable-handle')
            },
            _removeHandleClassName: function () {
                this._removeClass(this.handleElement, 'ui-draggable-handle')
            },
            _createHelper: function (e) {
                var t = this.options,
                    n = x.isFunction(t.helper),
                    r = n
                        ? x(t.helper.apply(this.element[0], [e]))
                        : 'clone' === t.helper
                            ? this.element.clone().removeAttr('id')
                            : this.element
                return (
                    r.parents('body').length ||
                    r.appendTo(
                        'parent' === t.appendTo ? this.element[0].parentNode : t.appendTo
                    ),
                    n && r[0] === this.element[0] && this._setPositionRelative(),
                    r[0] === this.element[0] ||
                    /(fixed|absolute)/.test(r.css('position')) ||
                    r.css('position', 'absolute'),
                    r
                )
            },
            _setPositionRelative: function () {
                ; /^(?:r|a|f)/.test(this.element.css('position')) ||
                    (this.element[0].style.position = 'relative')
            },
            _adjustOffsetFromHelper: function (e) {
                'string' == typeof e && (e = e.split(' '))
                x.isArray(e) &&
                    (e = {
                        left: +e[0],
                        top: +e[1] || 0,
                    })
                'left' in e && (this.offset.click.left = e.left + this.margins.left)
                'right' in e &&
                    (this.offset.click.left =
                        this.helperProportions.width - e.right + this.margins.left)
                'top' in e && (this.offset.click.top = e.top + this.margins.top)
                'bottom' in e &&
                    (this.offset.click.top =
                        this.helperProportions.height - e.bottom + this.margins.top)
            },
            _isRootNode: function (e) {
                return /(html|body)/i.test(e.tagName) || e === this.document[0]
            },
            _getParentOffset: function () {
                var e = this.offsetParent.offset(),
                    t = this.document[0]
                return (
                    'absolute' === this.cssPosition &&
                    this.scrollParent[0] !== t &&
                    x.contains(this.scrollParent[0], this.offsetParent[0]) &&
                    ((e.left += this.scrollParent.scrollLeft()),
                        (e.top += this.scrollParent.scrollTop())),
                    this._isRootNode(this.offsetParent[0]) &&
                    (e = {
                        top: 0,
                        left: 0,
                    }),
                    {
                        top:
                            e.top +
                            (parseInt(this.offsetParent.css('borderTopWidth'), 10) || 0),
                        left:
                            e.left +
                            (parseInt(this.offsetParent.css('borderLeftWidth'), 10) || 0),
                    }
                )
            },
            _getRelativeOffset: function () {
                if ('relative' !== this.cssPosition) {
                    return {
                        top: 0,
                        left: 0,
                    }
                }
                var e = this.element.position(),
                    t = this._isRootNode(this.scrollParent[0])
                return {
                    top:
                        e.top -
                        (parseInt(this.helper.css('top'), 10) || 0) +
                        (t ? 0 : this.scrollParent.scrollTop()),
                    left:
                        e.left -
                        (parseInt(this.helper.css('left'), 10) || 0) +
                        (t ? 0 : this.scrollParent.scrollLeft()),
                }
            },
            _cacheMargins: function () {
                this.margins = {
                    left: parseInt(this.element.css('marginLeft'), 10) || 0,
                    top: parseInt(this.element.css('marginTop'), 10) || 0,
                    right: parseInt(this.element.css('marginRight'), 10) || 0,
                    bottom: parseInt(this.element.css('marginBottom'), 10) || 0,
                }
            },
            _cacheHelperProportions: function () {
                this.helperProportions = {
                    width: this.helper.outerWidth(),
                    height: this.helper.outerHeight(),
                }
            },
            _setContainment: function () {
                var e,
                    t,
                    n,
                    r = this.options,
                    i = this.document[0]
                return (
                    (this.relativeContainer = null),
                    r.containment
                        ? 'window' === r.containment
                            ? void (this.containment = [
                                x(window).scrollLeft() -
                                this.offset.relative.left -
                                this.offset.parent.left,
                                x(window).scrollTop() -
                                this.offset.relative.top -
                                this.offset.parent.top,
                                x(window).scrollLeft() +
                                x(window).width() -
                                this.helperProportions.width -
                                this.margins.left,
                                x(window).scrollTop() +
                                (x(window).height() || i.body.parentNode.scrollHeight) -
                                this.helperProportions.height -
                                this.margins.top,
                            ])
                            : 'document' === r.containment
                                ? void (this.containment = [
                                    0,
                                    0,
                                    x(i).width() - this.helperProportions.width - this.margins.left,
                                    (x(i).height() || i.body.parentNode.scrollHeight) -
                                    this.helperProportions.height -
                                    this.margins.top,
                                ])
                                : r.containment.constructor === Array
                                    ? void (this.containment = r.containment)
                                    : ('parent' === r.containment &&
                                        (r.containment = this.helper[0].parentNode),
                                        void (
                                            (n = (t = x(r.containment))[0]) &&
                                            ((e = /(scroll|auto)/.test(t.css('overflow'))),
                                                (this.containment = [
                                                    (parseInt(t.css('borderLeftWidth'), 10) || 0) +
                                                    (parseInt(t.css('paddingLeft'), 10) || 0),
                                                    (parseInt(t.css('borderTopWidth'), 10) || 0) +
                                                    (parseInt(t.css('paddingTop'), 10) || 0),
                                                    (e ? Math.max(n.scrollWidth, n.offsetWidth) : n.offsetWidth) -
                                                    (parseInt(t.css('borderRightWidth'), 10) || 0) -
                                                    (parseInt(t.css('paddingRight'), 10) || 0) -
                                                    this.helperProportions.width -
                                                    this.margins.left -
                                                    this.margins.right,
                                                    (e
                                                        ? Math.max(n.scrollHeight, n.offsetHeight)
                                                        : n.offsetHeight) -
                                                    (parseInt(t.css('borderBottomWidth'), 10) || 0) -
                                                    (parseInt(t.css('paddingBottom'), 10) || 0) -
                                                    this.helperProportions.height -
                                                    this.margins.top -
                                                    this.margins.bottom,
                                                ]),
                                                (this.relativeContainer = t))
                                        ))
                        : void (this.containment = null)
                )
            },
            _convertPositionTo: function (e, t) {
                t || (t = this.position)
                var n = 'absolute' === e ? 1 : -1,
                    r = this._isRootNode(this.scrollParent[0])
                return {
                    top:
                        t.top +
                        this.offset.relative.top * n +
                        this.offset.parent.top * n -
                        ('fixed' === this.cssPosition
                            ? -this.offset.scroll.top
                            : r
                                ? 0
                                : this.offset.scroll.top) *
                        n,
                    left:
                        t.left +
                        this.offset.relative.left * n +
                        this.offset.parent.left * n -
                        ('fixed' === this.cssPosition
                            ? -this.offset.scroll.left
                            : r
                                ? 0
                                : this.offset.scroll.left) *
                        n,
                }
            },
            _generatePosition: function (e, t) {
                var n,
                    r,
                    i,
                    a,
                    o = this.options,
                    s = this._isRootNode(this.scrollParent[0]),
                    l = e.pageX,
                    u = e.pageY
                return (
                    (s && this.offset.scroll) ||
                    (this.offset.scroll = {
                        top: this.scrollParent.scrollTop(),
                        left: this.scrollParent.scrollLeft(),
                    }),
                    t &&
                    (this.containment &&
                        ((n = this.relativeContainer
                            ? ((r = this.relativeContainer.offset()),
                                [
                                    this.containment[0] + r.left,
                                    this.containment[1] + r.top,
                                    this.containment[2] + r.left,
                                    this.containment[3] + r.top,
                                ])
                            : this.containment),
                            e.pageX - this.offset.click.left < n[0] &&
                            (l = n[0] + this.offset.click.left),
                            e.pageY - this.offset.click.top < n[1] &&
                            (u = n[1] + this.offset.click.top),
                            e.pageX - this.offset.click.left > n[2] &&
                            (l = n[2] + this.offset.click.left),
                            e.pageY - this.offset.click.top > n[3] &&
                            (u = n[3] + this.offset.click.top)),
                        o.grid &&
                        ((i = o.grid[1]
                            ? this.originalPageY +
                            Math.round((u - this.originalPageY) / o.grid[1]) * o.grid[1]
                            : this.originalPageY),
                            (u = n
                                ? i - this.offset.click.top >= n[1] ||
                                    i - this.offset.click.top > n[3]
                                    ? i
                                    : i - this.offset.click.top >= n[1]
                                        ? i - o.grid[1]
                                        : i + o.grid[1]
                                : i),
                            (a = o.grid[0]
                                ? this.originalPageX +
                                Math.round((l - this.originalPageX) / o.grid[0]) * o.grid[0]
                                : this.originalPageX),
                            (l = n
                                ? a - this.offset.click.left >= n[0] ||
                                    a - this.offset.click.left > n[2]
                                    ? a
                                    : a - this.offset.click.left >= n[0]
                                        ? a - o.grid[0]
                                        : a + o.grid[0]
                                : a)),
                        'y' === o.axis && (l = this.originalPageX),
                        'x' === o.axis && (u = this.originalPageY)),
                    {
                        top:
                            u -
                            this.offset.click.top -
                            this.offset.relative.top -
                            this.offset.parent.top +
                            ('fixed' === this.cssPosition
                                ? -this.offset.scroll.top
                                : s
                                    ? 0
                                    : this.offset.scroll.top),
                        left:
                            l -
                            this.offset.click.left -
                            this.offset.relative.left -
                            this.offset.parent.left +
                            ('fixed' === this.cssPosition
                                ? -this.offset.scroll.left
                                : s
                                    ? 0
                                    : this.offset.scroll.left),
                    }
                )
            },
            _clear: function () {
                this._removeClass(this.helper, 'ui-draggable-dragging')
                this.helper[0] === this.element[0] ||
                    this.cancelHelperRemoval ||
                    this.helper.remove()
                this.helper = null
                this.cancelHelperRemoval = false
                this.destroyOnClear && this.destroy()
            },
            _trigger: function (e, t, n) {
                return (
                    (n = n || this._uiHash()),
                    x.ui.plugin.call(this, e, [t, n, this], true),
                    /^(drag|start|stop)/.test(e) &&
                    ((this.positionAbs = this._convertPositionTo('absolute')),
                        (n.offset = this.positionAbs)),
                    x.Widget.prototype._trigger.call(this, e, t, n)
                )
            },
            plugins: {},
            _uiHash: function () {
                return {
                    helper: this.helper,
                    position: this.position,
                    originalPosition: this.originalPosition,
                    offset: this.positionAbs,
                }
            },
        })
        x.ui.plugin.add('draggable', 'connectToSortable', {
            start: function (t, e, n) {
                var r = x.extend({}, e, { item: n.element })
                n.sortables = []
                x(n.options.connectToSortable).each(function () {
                    var e = x(this).sortable('instance')
                    e &&
                        !e.options.disabled &&
                        (n.sortables.push(e),
                            e.refreshPositions(),
                            e._trigger('activate', t, r))
                })
            },
            stop: function (t, e, n) {
                var r = x.extend({}, e, { item: n.element })
                n.cancelHelperRemoval = false
                x.each(n.sortables, function () {
                    var e = this
                    e.isOver
                        ? ((e.isOver = 0),
                            (n.cancelHelperRemoval = true),
                            (e.cancelHelperRemoval = false),
                            (e._storedCSS = {
                                position: e.placeholder.css('position'),
                                top: e.placeholder.css('top'),
                                left: e.placeholder.css('left'),
                            }),
                            e._mouseStop(t),
                            (e.options.helper = e.options._helper))
                        : ((e.cancelHelperRemoval = true), e._trigger('deactivate', t, r))
                })
            },
            drag: function (n, r, i) {
                x.each(i.sortables, function () {
                    var e = false,
                        t = this
                    t.positionAbs = i.positionAbs
                    t.helperProportions = i.helperProportions
                    t.offset.click = i.offset.click
                    t._intersectsWith(t.containerCache) &&
                        ((e = true),
                            x.each(i.sortables, function () {
                                return (
                                    (this.positionAbs = i.positionAbs),
                                    (this.helperProportions = i.helperProportions),
                                    (this.offset.click = i.offset.click),
                                    this !== t &&
                                    this._intersectsWith(this.containerCache) &&
                                    x.contains(t.element[0], this.element[0]) &&
                                    (e = false),
                                    e
                                )
                            }))
                    e
                        ? (t.isOver ||
                            ((t.isOver = 1),
                                (i._parent = r.helper.parent()),
                                (t.currentItem = r.helper
                                    .appendTo(t.element)
                                    .data('ui-sortable-item', true)),
                                (t.options._helper = t.options.helper),
                                (t.options.helper = function () {
                                    return r.helper[0]
                                }),
                                (n.target = t.currentItem[0]),
                                t._mouseCapture(n, true),
                                t._mouseStart(n, true, true),
                                (t.offset.click.top = i.offset.click.top),
                                (t.offset.click.left = i.offset.click.left),
                                (t.offset.parent.left -=
                                    i.offset.parent.left - t.offset.parent.left),
                                (t.offset.parent.top -=
                                    i.offset.parent.top - t.offset.parent.top),
                                i._trigger('toSortable', n),
                                (i.dropped = t.element),
                                x.each(i.sortables, function () {
                                    this.refreshPositions()
                                }),
                                (i.currentItem = i.element),
                                (t.fromOutside = i)),
                            t.currentItem && (t._mouseDrag(n), (r.position = t.position)))
                        : t.isOver &&
                        ((t.isOver = 0),
                            (t.cancelHelperRemoval = true),
                            (t.options._revert = t.options.revert),
                            (t.options.revert = false),
                            t._trigger('out', n, t._uiHash(t)),
                            t._mouseStop(n, true),
                            (t.options.revert = t.options._revert),
                            (t.options.helper = t.options._helper),
                            t.placeholder && t.placeholder.remove(),
                            r.helper.appendTo(i._parent),
                            i._refreshOffsets(n),
                            (r.position = i._generatePosition(n, true)),
                            i._trigger('fromSortable', n),
                            (i.dropped = false),
                            x.each(i.sortables, function () {
                                this.refreshPositions()
                            }))
                })
            },
        })
        x.ui.plugin.add('draggable', 'cursor', {
            start: function (e, t, n) {
                var r = x('body'),
                    i = n.options
                r.css('cursor') && (i._cursor = r.css('cursor'))
                r.css('cursor', i.cursor)
            },
            stop: function (e, t, n) {
                var r = n.options
                r._cursor && x('body').css('cursor', r._cursor)
            },
        })
        x.ui.plugin.add('draggable', 'opacity', {
            start: function (e, t, n) {
                var r = x(t.helper),
                    i = n.options
                r.css('opacity') && (i._opacity = r.css('opacity'))
                r.css('opacity', i.opacity)
            },
            stop: function (e, t, n) {
                var r = n.options
                r._opacity && x(t.helper).css('opacity', r._opacity)
            },
        })
        x.ui.plugin.add('draggable', 'scroll', {
            start: function (e, t, n) {
                n.scrollParentNotHidden ||
                    (n.scrollParentNotHidden = n.helper.scrollParent(false))
                n.scrollParentNotHidden[0] !== n.document[0] &&
                    'HTML' !== n.scrollParentNotHidden[0].tagName &&
                    (n.overflowOffset = n.scrollParentNotHidden.offset())
            },
            drag: function (e, t, n) {
                var r = n.options,
                    i = false,
                    a = n.scrollParentNotHidden[0],
                    o = n.document[0]
                a !== o && 'HTML' !== a.tagName
                    ? ((r.axis && 'x' === r.axis) ||
                        (n.overflowOffset.top + a.offsetHeight - e.pageY <
                            r.scrollSensitivity
                            ? (a.scrollTop = i = a.scrollTop + r.scrollSpeed)
                            : e.pageY - n.overflowOffset.top < r.scrollSensitivity &&
                            (a.scrollTop = i = a.scrollTop - r.scrollSpeed)),
                        (r.axis && 'y' === r.axis) ||
                        (n.overflowOffset.left + a.offsetWidth - e.pageX <
                            r.scrollSensitivity
                            ? (a.scrollLeft = i = a.scrollLeft + r.scrollSpeed)
                            : e.pageX - n.overflowOffset.left < r.scrollSensitivity &&
                            (a.scrollLeft = i = a.scrollLeft - r.scrollSpeed)))
                    : ((r.axis && 'x' === r.axis) ||
                        (e.pageY - x(o).scrollTop() < r.scrollSensitivity
                            ? (i = x(o).scrollTop(x(o).scrollTop() - r.scrollSpeed))
                            : x(window).height() - (e.pageY - x(o).scrollTop()) <
                            r.scrollSensitivity &&
                            (i = x(o).scrollTop(x(o).scrollTop() + r.scrollSpeed))),
                        (r.axis && 'y' === r.axis) ||
                        (e.pageX - x(o).scrollLeft() < r.scrollSensitivity
                            ? (i = x(o).scrollLeft(x(o).scrollLeft() - r.scrollSpeed))
                            : x(window).width() - (e.pageX - x(o).scrollLeft()) <
                            r.scrollSensitivity &&
                            (i = x(o).scrollLeft(x(o).scrollLeft() + r.scrollSpeed))))
                false !== i &&
                    x.ui.ddmanager &&
                    !r.dropBehaviour &&
                    x.ui.ddmanager.prepareOffsets(n, e)
            },
        })
        x.ui.plugin.add('draggable', 'snap', {
            start: function (e, t, n) {
                var r = n.options
                n.snapElements = []
                x(
                    r.snap.constructor !== String
                        ? r.snap.items || ':data(ui-draggable)'
                        : r.snap
                ).each(function () {
                    var e = x(this),
                        t = e.offset()
                    this !== n.element[0] &&
                        n.snapElements.push({
                            item: this,
                            width: e.outerWidth(),
                            height: e.outerHeight(),
                            top: t.top,
                            left: t.left,
                        })
                })
            },
            drag: function (e, t, n) {
                var r,
                    i,
                    a,
                    o,
                    s,
                    l,
                    u,
                    c,
                    f,
                    p,
                    d = n.options,
                    h = d.snapTolerance,
                    g = t.offset.left,
                    v = g + n.helperProportions.width,
                    m = t.offset.top,
                    y = m + n.helperProportions.height
                for (f = n.snapElements.length - 1; 0 <= f; f--) {
                    l =
                        (s = n.snapElements[f].left - n.margins.left) +
                        n.snapElements[f].width
                    c =
                        (u = n.snapElements[f].top - n.margins.top) + n.snapElements[f].height
                    v < s - h ||
                        l + h < g ||
                        y < u - h ||
                        c + h < m ||
                        !x.contains(
                            n.snapElements[f].item.ownerDocument,
                            n.snapElements[f].item
                        )
                        ? (n.snapElements[f].snapping &&
                            n.options.snap.release &&
                            n.options.snap.release.call(
                                n.element,
                                e,
                                x.extend(n._uiHash(), { snapItem: n.snapElements[f].item })
                            ),
                            (n.snapElements[f].snapping = false))
                        : ('inner' !== d.snapMode &&
                            ((r = h >= Math.abs(u - y)),
                                (i = h >= Math.abs(c - m)),
                                (a = h >= Math.abs(s - v)),
                                (o = h >= Math.abs(l - g)),
                                r &&
                                (t.position.top = n._convertPositionTo('relative', {
                                    top: u - n.helperProportions.height,
                                    left: 0,
                                }).top),
                                i &&
                                (t.position.top = n._convertPositionTo('relative', {
                                    top: c,
                                    left: 0,
                                }).top),
                                a &&
                                (t.position.left = n._convertPositionTo('relative', {
                                    top: 0,
                                    left: s - n.helperProportions.width,
                                }).left),
                                o &&
                                (t.position.left = n._convertPositionTo('relative', {
                                    top: 0,
                                    left: l,
                                }).left)),
                            (p = r || i || a || o),
                            'outer' !== d.snapMode &&
                            ((r = h >= Math.abs(u - m)),
                                (i = h >= Math.abs(c - y)),
                                (a = h >= Math.abs(s - g)),
                                (o = h >= Math.abs(l - v)),
                                r &&
                                (t.position.top = n._convertPositionTo('relative', {
                                    top: u,
                                    left: 0,
                                }).top),
                                i &&
                                (t.position.top = n._convertPositionTo('relative', {
                                    top: c - n.helperProportions.height,
                                    left: 0,
                                }).top),
                                a &&
                                (t.position.left = n._convertPositionTo('relative', {
                                    top: 0,
                                    left: s,
                                }).left),
                                o &&
                                (t.position.left = n._convertPositionTo('relative', {
                                    top: 0,
                                    left: l - n.helperProportions.width,
                                }).left)),
                            !n.snapElements[f].snapping &&
                            (r || i || a || o || p) &&
                            n.options.snap.snap &&
                            n.options.snap.snap.call(
                                n.element,
                                e,
                                x.extend(n._uiHash(), { snapItem: n.snapElements[f].item })
                            ),
                            (n.snapElements[f].snapping = r || i || a || o || p))
                }
            },
        })
        x.ui.plugin.add('draggable', 'stack', {
            start: function (e, t, n) {
                var r,
                    i = n.options,
                    a = x.makeArray(x(i.stack)).sort(function (e, t) {
                        return (
                            (parseInt(x(e).css('zIndex'), 10) || 0) -
                            (parseInt(x(t).css('zIndex'), 10) || 0)
                        )
                    })
                a.length &&
                    ((r = parseInt(x(a[0]).css('zIndex'), 10) || 0),
                        x(a).each(function (e) {
                            x(this).css('zIndex', r + e)
                        }),
                        this.css('zIndex', r + a.length))
            },
        })
        x.ui.plugin.add('draggable', 'zIndex', {
            start: function (e, t, n) {
                var r = x(t.helper),
                    i = n.options
                r.css('zIndex') && (i._zIndex = r.css('zIndex'))
                r.css('zIndex', i.zIndex)
            },
            stop: function (e, t, n) {
                var r = n.options
                r._zIndex && x(t.helper).css('zIndex', r._zIndex)
            },
        })
        x.ui.draggable
        x.widget('ui.droppable', {
            version: '1.12.1',
            widgetEventPrefix: 'drop',
            options: {
                accept: '*',
                addClasses: true,
                greedy: false,
                scope: 'default',
                tolerance: 'intersect',
                activate: null,
                deactivate: null,
                drop: null,
                out: null,
                over: null,
            },
            _create: function () {
                var e,
                    t = this.options,
                    n = t.accept
                this.isover = false
                this.isout = true
                this.accept = x.isFunction(n)
                    ? n
                    : function (e) {
                        return e.is(n)
                    }
                this.proportions = function () {
                    return arguments.length
                        ? void (e = arguments[0])
                        : e ||
                        (e = {
                            width: this.element[0].offsetWidth,
                            height: this.element[0].offsetHeight,
                        })
                }
                this._addToManager(t.scope)
                t.addClasses && this._addClass('ui-droppable')
            },
            _addToManager: function (e) {
                x.ui.ddmanager.droppables[e] = x.ui.ddmanager.droppables[e] || []
                x.ui.ddmanager.droppables[e].push(this)
            },
            _splice: function (e) {
                for (var t = 0; e.length > t; t++) {
                    e[t] === this && e.splice(t, 1)
                }
            },
            _destroy: function () {
                var e = x.ui.ddmanager.droppables[this.options.scope]
                this._splice(e)
            },
            _setOption: function (e, t) {
                if ('accept' === e) {
                    this.accept = x.isFunction(t)
                        ? t
                        : function (e) {
                            return e.is(t)
                        }
                } else {
                    if ('scope' === e) {
                        var n = x.ui.ddmanager.droppables[this.options.scope]
                        this._splice(n)
                        this._addToManager(t)
                    }
                }
                this._super(e, t)
            },
            _activate: function (e) {
                var t = x.ui.ddmanager.current
                this._addActiveClass()
                t && this._trigger('activate', e, this.ui(t))
            },
            _deactivate: function (e) {
                var t = x.ui.ddmanager.current
                this._removeActiveClass()
                t && this._trigger('deactivate', e, this.ui(t))
            },
            _over: function (e) {
                var t = x.ui.ddmanager.current
                t &&
                    (t.currentItem || t.element)[0] !== this.element[0] &&
                    this.accept.call(this.element[0], t.currentItem || t.element) &&
                    (this._addHoverClass(), this._trigger('over', e, this.ui(t)))
            },
            _out: function (e) {
                var t = x.ui.ddmanager.current
                t &&
                    (t.currentItem || t.element)[0] !== this.element[0] &&
                    this.accept.call(this.element[0], t.currentItem || t.element) &&
                    (this._removeHoverClass(), this._trigger('out', e, this.ui(t)))
            },
            _drop: function (t, e) {
                var n = e || x.ui.ddmanager.current,
                    r = false
                return (
                    !(!n || (n.currentItem || n.element)[0] === this.element[0]) &&
                    (this.element
                        .find(':data(ui-droppable)')
                        .not('.ui-draggable-dragging')
                        .each(function () {
                            var e = x(this).droppable('instance')
                            return e.options.greedy &&
                                !e.options.disabled &&
                                e.options.scope === n.options.scope &&
                                e.accept.call(e.element[0], n.currentItem || n.element) &&
                                l(
                                    n,
                                    x.extend(e, { offset: e.element.offset() }),
                                    e.options.tolerance,
                                    t
                                )
                                ? !(r = true)
                                : void 0
                        }),
                        !r &&
                        !!this.accept.call(this.element[0], n.currentItem || n.element) &&
                        (this._removeActiveClass(),
                            this._removeHoverClass(),
                            this._trigger('drop', t, this.ui(n)),
                            this.element))
                )
            },
            ui: function (e) {
                return {
                    draggable: e.currentItem || e.element,
                    helper: e.helper,
                    position: e.position,
                    offset: e.positionAbs,
                }
            },
            _addHoverClass: function () {
                this._addClass('ui-droppable-hover')
            },
            _removeHoverClass: function () {
                this._removeClass('ui-droppable-hover')
            },
            _addActiveClass: function () {
                this._addClass('ui-droppable-active')
            },
            _removeActiveClass: function () {
                this._removeClass('ui-droppable-active')
            },
        })
        var l = (x.ui.intersect = (function () {
            function p(e, t, n) {
                return t <= e && e < t + n
            }
            return function (e, t, n, r) {
                if (!t.offset) {
                    return false
                }
                var i = (e.positionAbs || e.position.absolute).left + e.margins.left,
                    a = (e.positionAbs || e.position.absolute).top + e.margins.top,
                    o = i + e.helperProportions.width,
                    s = a + e.helperProportions.height,
                    l = t.offset.left,
                    u = t.offset.top,
                    c = l + t.proportions().width,
                    f = u + t.proportions().height
                switch (n) {
                    case 'fit':
                        return l <= i && o <= c && u <= a && s <= f
                    case 'intersect':
                        return (
                            i + e.helperProportions.width / 2 > l &&
                            c > o - e.helperProportions.width / 2 &&
                            a + e.helperProportions.height / 2 > u &&
                            f > s - e.helperProportions.height / 2
                        )
                    case 'pointer':
                        return (
                            p(r.pageY, u, t.proportions().height) &&
                            p(r.pageX, l, t.proportions().width)
                        )
                    case 'touch':
                        return (
                            ((u <= a && a <= f) || (u <= s && s <= f) || (a < u && f < s)) &&
                            ((l <= i && i <= c) || (l <= o && o <= c) || (i < l && c < o))
                        )
                    default:
                        return false
                }
            }
        })())
        !(x.ui.ddmanager = {
            current: null,
            droppables: { default: [] },
            prepareOffsets: function (e, t) {
                var n,
                    r,
                    i = x.ui.ddmanager.droppables[e.options.scope] || [],
                    a = t ? t.type : null,
                    o = (e.currentItem || e.element).find(':data(ui-droppable)').addBack()
                e: for (n = 0; i.length > n; n++) {
                    if (
                        !(
                            i[n].options.disabled ||
                            (e &&
                                !i[n].accept.call(i[n].element[0], e.currentItem || e.element))
                        )
                    ) {
                        for (r = 0; o.length > r; r++) {
                            if (o[r] === i[n].element[0]) {
                                i[n].proportions().height = 0
                                continue e
                            }
                        }
                        i[n].visible = 'none' !== i[n].element.css('display')
                        i[n].visible &&
                            ('mousedown' === a && i[n]._activate.call(i[n], t),
                                (i[n].offset = i[n].element.offset()),
                                i[n].proportions({
                                    width: i[n].element[0].offsetWidth,
                                    height: i[n].element[0].offsetHeight,
                                }))
                    }
                }
            },
            drop: function (e, t) {
                var n = false
                return (
                    x.each(
                        (x.ui.ddmanager.droppables[e.options.scope] || []).slice(),
                        function () {
                            this.options &&
                                (!this.options.disabled &&
                                    this.visible &&
                                    l(e, this, this.options.tolerance, t) &&
                                    (n = this._drop.call(this, t) || n),
                                    !this.options.disabled &&
                                    this.visible &&
                                    this.accept.call(this.element[0], e.currentItem || e.element) &&
                                    ((this.isout = true),
                                        (this.isover = false),
                                        this._deactivate.call(this, t)))
                        }
                    ),
                    n
                )
            },
            dragStart: function (e, t) {
                e.element.parentsUntil('body').on('scroll.droppable', function () {
                    e.options.refreshPositions || x.ui.ddmanager.prepareOffsets(e, t)
                })
            },
            drag: function (a, o) {
                a.options.refreshPositions && x.ui.ddmanager.prepareOffsets(a, o)
                x.each(x.ui.ddmanager.droppables[a.options.scope] || [], function () {
                    if (!this.options.disabled && !this.greedyChild && this.visible) {
                        var e,
                            t,
                            n,
                            r = l(a, this, this.options.tolerance, o),
                            i =
                                !r && this.isover ? 'isout' : r && !this.isover ? 'isover' : null
                        i &&
                            (this.options.greedy &&
                                ((t = this.options.scope),
                                    (n = this.element
                                        .parents(':data(ui-droppable)')
                                        .filter(function () {
                                            return x(this).droppable('instance').options.scope === t
                                        })).length &&
                                    ((e = x(n[0]).droppable('instance')).greedyChild =
                                        'isover' === i)),
                                e &&
                                'isover' === i &&
                                ((e.isover = false), (e.isout = true), e._out.call(e, o)),
                                (this[i] = true),
                                (this['isout' === i ? 'isover' : 'isout'] = false),
                                this['isover' === i ? '_over' : '_out'].call(this, o),
                                e &&
                                'isout' === i &&
                                ((e.isout = false), (e.isover = true), e._over.call(e, o)))
                    }
                })
            },
            dragStop: function (e, t) {
                e.element.parentsUntil('body').off('scroll.droppable')
                e.options.refreshPositions || x.ui.ddmanager.prepareOffsets(e, t)
            },
        }) !== x.uiBackCompat &&
            x.widget('ui.droppable', x.ui.droppable, {
                options: {
                    hoverClass: false,
                    activeClass: false,
                },
                _addActiveClass: function () {
                    this._super()
                    this.options.activeClass &&
                        this.element.addClass(this.options.activeClass)
                },
                _removeActiveClass: function () {
                    this._super()
                    this.options.activeClass &&
                        this.element.removeClass(this.options.activeClass)
                },
                _addHoverClass: function () {
                    this._super()
                    this.options.hoverClass &&
                        this.element.addClass(this.options.hoverClass)
                },
                _removeHoverClass: function () {
                    this._super()
                    this.options.hoverClass &&
                        this.element.removeClass(this.options.hoverClass)
                },
            })
        x.ui.droppable
    })
    ; (function (t) {
        if (((t.support.touch = 'ontouchend' in document), t.support.touch)) {
            var n,
                e = t.ui.mouse.prototype,
                r = e._mouseInit,
                i = e._mouseDestroy
            e._touchStart = function (e) {
                !n &&
                    this._mouseCapture(e.originalEvent.changedTouches[0]) &&
                    ((n = true),
                        (this._touchMoved = false),
                        a(e, 'mouseover'),
                        a(e, 'mousemove'),
                        a(e, 'mousedown'))
            }
            e._touchMove = function (e) {
                n && ((this._touchMoved = true), a(e, 'mousemove'))
            }
            e._touchEnd = function (e) {
                n &&
                    (a(e, 'mouseup'),
                        a(e, 'mouseout'),
                        this._touchMoved || a(e, 'click'),
                        (n = false))
            }
            e._mouseInit = function () {
                var e = this
                e.element.bind({
                    touchstart: t.proxy(e, '_touchStart'),
                    touchmove: t.proxy(e, '_touchMove'),
                    touchend: t.proxy(e, '_touchEnd'),
                })
                r.call(e)
            }
            e._mouseDestroy = function () {
                var e = this
                e.element.unbind({
                    touchstart: t.proxy(e, '_touchStart'),
                    touchmove: t.proxy(e, '_touchMove'),
                    touchend: t.proxy(e, '_touchEnd'),
                })
                i.call(e)
            }
        }
        function a(e, t) {
            if (!(1 < e.originalEvent.touches.length)) {
                e.preventDefault()
                var n = e.originalEvent.changedTouches[0],
                    r = document.createEvent('MouseEvents')
                r.initMouseEvent(
                    t,
                    true,
                    true,
                    window,
                    1,
                    n.screenX,
                    n.screenY,
                    n.clientX,
                    n.clientY,
                    false,
                    false,
                    false,
                    false,
                    0,
                    null
                )
                e.target.dispatchEvent(r)
            }
        }
    })(jQuery)
    ; (function (e, t) {
        'object' == typeof exports && 'undefined' != typeof module
            ? (module.exports = t())
            : 'function' == typeof define && define.amd
                ? define(t)
                : (e.TalqsInteraction = t())
    })(this, function () {
        'use strict'
        window.TalqsTemplate = TalqsTemplate$1
        window.judge = control.judge
        window.judgeAnswer = control.judgeAnswer
        window.judgeAnswerComposite = control.judgeAnswerComposite
        prototypeAccessors.list.get = function () {
            return this._inputList
        }
        MathStore.prototype.putList = function (e) {
            this._inputList.push(e)
        }
        prototypeAccessors.keypad.set = function (e) {
            this._keypad = e
        }
        prototypeAccessors.keypad.get = function () {
            return this._keypad
        }
        prototypeAccessors.currentField.set = function (e) {
            this._currentField = e
        }
        prototypeAccessors.currentField.get = function () {
            return this._currentField
        }
        MathStore.prototype.resetCursor = function (e) {
            this._inputList.length &&
                this._inputList.forEach(function (e) {
                    e && e.focused && e.blur()
                })
            this.currentField = e
        }
        Object.defineProperties(MathStore.prototype, prototypeAccessors)
        window.InputAndKeyboard = InputAndKeyboard
        window.initMultiMatchType = function () {
            multiTypeCopy._instanceInitHandler()
            MutationObserverEventListener(multiTypeCopy._instanceInitHandler)
        }
        window.initSortType = function () {
            sortTypeCopy._instanceInitHandler()
            MutationObserverEventListener(sortTypeCopy._instanceInitHandler)
        }
        function __extends(e, t) {
            function n() {
                this.constructor = e
            }
            extendStatics(e, t)
            e.prototype =
                null === t ? Object.create(t) : ((n.prototype = t.prototype), new n())
        }
        function getPvModel() {
            return utils.assign({}, getNavType(), getSize())
        }
        function toRaw(e) {
            return reactiveToRaw.get(e) || readonlyToRaw.get(e) || e
        }
        function toRawType(e) {
            return toTypeString(e).slice(8, -1)
        }
        function isSameType(e, t) {
            return getType(e) === getType(t)
        }
        function getType(e) {
            var t = e && e.toString().match(/^\s*function (\w+)/)
            return t ? t[1] : ''
        }
        function getTypeIndex(e, t) {
            if (isArray(t)) {
                for (var n = 0, r = t.length; n < r; n++) {
                    if (isSameType(t[n], e)) {
                        return n
                    }
                }
            } else {
                if (isObject(t)) {
                    return isSameType(t, e) ? 0 : -1
                }
            }
            return -1
        }
        function makeMap(e, t) {
            for (
                var n = Object.create(null), r = e.split(','), i = 0;
                i < r.length;
                i++
            ) {
                n[r[i]] = true
            }
            return t
                ? function (e) {
                    return !!n[e.toLowerCase()]
                }
                : function (e) {
                    return !!n[e]
                }
        }
        function resolveProps(e, t, n) {
            void 0 === n && (n = {})
            var r = [],
                i = null != t,
                a = t
            if (!e && !i) {
                return r.push('未传入任何参数'), r
            }
            var o = {
                e: t,
                e: t,
            },
                s = void 0,
                l = n,
                u = l
                    ? function (e, t) {
                        l[e] = t
                    }
                    : function (e, t) { }
            if (null != e) {
                for (var c in e)
                    if ('key' !== c) {
                        var f = c
                        i && !hasOwn(a, f) ? ((s || (s = {}))[f] = e[c]) : u(f, e[c])
                    }
            }
            if (!i) {
                return r.push('未传入预定义参数'), r
            }
            for (var c in a) {
                var p = a[c]
                if (null != p) {
                    var d = !hasOwn(o, c),
                        h = hasOwn(p, 'default'),
                        g = o[c]
                    if (h && void 0 === g) {
                        var v = p.default
                        u(c, isFunction(v) ? v() : v)
                    }
                    if (
                        (p[1] &&
                            (d && !h
                                ? u(c, false)
                                : !p[2] || ('' !== g && g !== hyphenate(c)) || u(c, true)),
                            e)
                    ) {
                        var m = e[c]
                        c in e || (m = e[hyphenate(c)])
                        r.push.apply(r, validateProp(c, toRaw(m), p, d))
                    }
                }
            }
            return r
        }
        function validateProp(e, t, n, r) {
            var i = [],
                a = n.type,
                o = n.required,
                s = n.validator
            if (o && r) {
                return warn((g = '缺少必须属性: ' + e)), i.push(g), i
            }
            if (null == t && !n.required) {
                return i
            }
            if (null != a && true !== a) {
                for (
                    var l = false, u = isArray(a) ? a : [a], c = [], f = 0;
                    f < u.length && !l;
                    f++
                ) {
                    var p = assertType(t, u[f]),
                        d = p.valid,
                        h = p.expectedType
                    c.push(h || '')
                    l = d
                }
                if (!l) {
                    var g = getInvalidTypeMessage(e, t, c)
                    return warn(g), i.push(g), i
                }
            }
            return (
                s &&
                !s(t) &&
                (warn((g = '属性无效: 属性 ' + e + ' 的类型检查失败.')), i.push(g)),
                i
            )
        }
        function getType$1(e) {
            var t = e && e.toString().match(/^\s*function (\w+)/)
            return t ? t[1] : ''
        }
        function assertType(e, t) {
            var n,
                r = getType$1(t)
            if (isSimpleType(r)) {
                var i = typeof e
                    ; (n = i === r.toLowerCase()) || 'object' !== i || (n = e instanceof t)
            } else {
                n =
                    'Object' === r
                        ? 'Object' === toRawType(e)
                        : 'Array' === r
                            ? isArray(e)
                            : e instanceof t
            }
            return {
                valid: n,
                expectedType: r,
            }
        }
        function getInvalidTypeMessage(e, t, n) {
            var r =
                '属性无效: 属性 ' +
                e +
                ' 的类型检查失败. 预期为 ' +
                n.map(capitalize).join(', ') +
                ' 类型',
                i = n[0],
                a = toRawType(t),
                o = styleValue(t, i),
                s = styleValue(t, a)
            return (
                1 === n.length &&
                isExplicable(i) &&
                !isBoolean(i, a) &&
                (r += ' 获得值为 ' + o),
                (r += ', 获得了 ' + a + ' 错误类型'),
                isExplicable(a) && (r += '获得值为 ' + s + '.'),
                r
            )
        }
        function styleValue(e, t) {
            return 'String' === t
                ? '"' + e + '"'
                : 'Number' === t
                    ? '' + Number(e)
                    : '' + e
        }
        function validatorConfig(e) {
            if (null == e) {
                return {
                    success: false,
                    warnList: ['请传入配置'],
                }
            }
            var t = resolveProps(e, props.getProps())
            return (
                0 === t.length && UserConfig.set(e),
                {
                    warnList: t,
                    success: !t.length,
                }
            )
        }
        function getSdkRepoter() {
            if (repoterInstance) {
                return repoterInstance
            }
            var e = UserConfig.get()
            try {
                return (repoterInstance = new TalRepoter(
                    Object.assign(
                        {
                            pid: '71fad4ed40a7440aa644d2914131c8d7',
                            ver: '1.0.10-alpha',
                            env: 'prod',
                        },
                        e
                    )
                ))
            } catch (e) {
                return console.error('教研云日志上报系统错误'), null
            }
        }
        function escapeHtml(e) {
            var t,
                n = '' + e,
                r = matchHtmlRegExp.exec(n)
            if (!r) {
                return n
            }
            var i = '',
                a = 0,
                o = 0
            for (a = r.index; a < n.length; a++) {
                switch (n.charCodeAt(a)) {
                    case 34:
                        t = '&quot;'
                        break
                    case 38:
                        t = '&amp;'
                        break
                    case 39:
                        t = '&#39;'
                        break
                    case 60:
                        t = '&lt;'
                        break
                    case 62:
                        t = '&gt;'
                        break
                    default:
                        continue
                }
                o !== a && (i += n.substring(o, a))
                o = a + 1
                i += t
            }
            return o !== a ? i + n.substring(o, a) : i
        }
        props.setProps({
            org: {
                type: String,
                required: true,
            },
            sys: {
                type: String,
                required: true,
            },
            jobNumber: {
                type: [String, Number],
            },
            teaEmail: {
                type: String,
                validator: function (e) {
                    return /^(\w-*\.*)+@(\w-?)+(\.\w{2,})+$/.test(e)
                },
            },
            stuId: {
                type: [String, Number],
            },
            traceid: { type: String },
            stuName: { type: String },
            scene: { type: String },
            city: { type: String },
            school: { type: String },
            year: {
                type: [String, Number],
            },
            term: { type: String },
            grade: {
                type: [String, Number],
            },
            tbVersion: {
                type: [String, Number],
            },
            classLevel: {
                type: [String, Number],
            },
            class: {
                type: [String, Number],
            },
            classNum: {
                type: [String, Number],
            },
            teaId: {
                type: [String, Number],
            },
            teaName: { type: String },
        })
        ImgViewer.prototype.showImgEnlargeLayer = function (e) {
            if ('IMG' !== e.target.tagName) {
                var t = getClosestElement$1(e.target, '[data-logic-type]'),
                    n = e.target.getElementsByTagName('img')[0],
                    r = document.createDocumentFragment(),
                    i = document.createElement('div')
                i.classList.add('talqs_img_enlarge')
                var a = document.createElement('div')
                a.classList.add('talqs_img_wrapper')
                var o = document.createElement('img')
                o.src = n.src
                a.appendChild(o)
                i.appendChild(a)
                r.append(i)
                t.appendChild(r)
                i.addEventListener('mousedown', this.mouseDown.bind(this))
                i.addEventListener('wheel', this.imgZoom.bind(this), { passive: false })
                i.addEventListener('mousemove', this.mouseMove.bind(this))
                i.addEventListener('click', this.closeImgEnlargeLayer.bind(this))
            }
        }
        ImgViewer.prototype.closeImgEnlargeLayer = function (e) {
            if (
                ((this.isMouseDown = false),
                    (this.lastPoint = void 0),
                    200 < Date.now() - this.mousedownTimestamp)
            ) {
                e.preventDefault()
            } else {
                var t = getClosestElement$1(e.target, '.talqs_img_enlarge')
                t &&
                    (t.removeEventListener('click', this.closeImgEnlargeLayer),
                        t.addEventListener('mousedown', this.mouseDown),
                        t.addEventListener('wheel', this.imgZoom),
                        t.addEventListener('mousemove', this.mouseMove),
                        (this.curScale = 1),
                        (this.curTransition = {
                            x: 0,
                            y: 0,
                        }),
                        t.remove())
            }
        }
        ImgViewer.prototype.mouseMove = function (e) {
            this.isMouseDown &&
                (e.preventDefault(), e.stopImmediatePropagation(), this.imgMove(e))
        }
        ImgViewer.prototype.imgMove = function (e) {
            if (this.lastPoint) {
                var t = e.clientX - this.lastPoint.x,
                    n = e.clientY - this.lastPoint.y
                this.lastPoint.x = e.clientX
                this.lastPoint.y = e.clientY
                    ; (Math.abs(this.curTransition.x + t) <=
                        ((this.curScale - 1) / 2) * this.width ||
                        (this.curTransition.x ^ t) < 0) &&
                        (this.curTransition.x += t)
                    ; (Math.abs(this.curTransition.y + n) <=
                        ((this.curScale - 1) / 2) * this.height ||
                        (this.curTransition.y ^ n) < 0) &&
                        (this.curTransition.y += n)
                document.getElementsByClassName(this.imgWrapper)[0].style.transform =
                    'translate(' +
                    this.curTransition.x +
                    'px,' +
                    this.curTransition.y +
                    'px)'
            } else {
                this.lastPoint = {
                    x: e.clientX,
                    y: e.clientY,
                }
            }
        }
        ImgViewer.prototype.imgZoom = function (e) {
            var t = this.curScale + e.wheelDelta / 10000
            t <= 0.5 ||
                ((this.curScale = t),
                    (document
                        .getElementsByClassName(this.imgWrapper)[0]
                        .getElementsByTagName('img')[0].style.transform =
                        'scale(' + this.curScale + ')'))
        }
        ImgViewer.prototype.mouseDown = function (e) {
            e.preventDefault()
            this.isMouseDown = true
            this.mousedownTimestamp = Date.now()
        }
            ; (function (e) {
                for (var t in helper) e.registerHelper(t, helper[t])
                var n,
                    r = e.components
                e.updateTemplateList(
                    (((n = {})[r.StemsWrapper] = {
                        template: templates.question,
                        components: [
                            {
                                name: r.Content,
                                template: templates.questionContent,
                            },
                            {
                                name: r.Options,
                                template: templates.questionOptions,
                            },
                            {
                                name: 'questionBlankOption',
                                template: templates.questionBlankOption,
                            },
                            {
                                name: 'questionImgAnswer',
                                template: templates.questionImgAnswer,
                            },
                            {
                                name: 'questionCorrect',
                                template: templates.questionCorrect,
                            },
                            {
                                name: 'questionOptionsLayer',
                                template: templates.questionOptionsLayer,
                            },
                        ],
                    }),
                        n)
                )
            })(TalqsTemplate)
        DGc = new ImgViewer()
        $(document).on(
            'click',
            '.talqs_img_zoomout',
            DGc.showImgEnlargeLayer.bind(DGc)
        )
        window.TalqsInteraction = TalqsInteraction$1
        return (
            Object.defineProperty(TalqsInteraction$1, 'isInteractive', {
                enumerable: true,
                configurable: false,
                set: function (e) {
                    isInteractive = e
                    var t = new Event(TALQS_EVENT.INTERACTION)
                    document.dispatchEvent(t)
                },
                get: function () {
                    return isInteractive
                },
            }),
            Object.defineProperty(TalqsInteraction$1, 'lang', {
                enumerable: true,
                configurable: false,
                set: function (e) {
                    lang = e
                    helper.getLabel(TalqsTemplate.config.labels, e)
                },
                get: function () {
                    return lang
                },
            }),
            TalqsInteraction$1
        )
    })
